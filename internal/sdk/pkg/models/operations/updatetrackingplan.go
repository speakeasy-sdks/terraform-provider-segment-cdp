// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

type UpdateTrackingPlanRequest struct {
	UpdateTrackingPlanV1Input shared.UpdateTrackingPlanV1Input `request:"mediaType=application/vnd.segment.v1beta+json"`
	TrackingPlanID            string                           `pathParam:"style=simple,explode=false,name=trackingPlanId"`
}

func (o *UpdateTrackingPlanRequest) GetUpdateTrackingPlanV1Input() shared.UpdateTrackingPlanV1Input {
	if o == nil {
		return shared.UpdateTrackingPlanV1Input{}
	}
	return o.UpdateTrackingPlanV1Input
}

func (o *UpdateTrackingPlanRequest) GetTrackingPlanID() string {
	if o == nil {
		return ""
	}
	return o.TrackingPlanID
}

// UpdateTrackingPlanTrackingPlansResponse200ResponseBody - OK
type UpdateTrackingPlanTrackingPlansResponse200ResponseBody struct {
	// Result of an UpdateTrackingPlan call.
	Data *shared.UpdateTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *UpdateTrackingPlanTrackingPlansResponse200ResponseBody) GetData() *shared.UpdateTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateTrackingPlanTrackingPlansResponseResponseBody - OK
type UpdateTrackingPlanTrackingPlansResponseResponseBody struct {
	// Result of an UpdateTrackingPlan call.
	Data *shared.UpdateTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *UpdateTrackingPlanTrackingPlansResponseResponseBody) GetData() *shared.UpdateTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateTrackingPlanTrackingPlansResponseBody - OK
type UpdateTrackingPlanTrackingPlansResponseBody struct {
	// Result of an UpdateTrackingPlan call.
	Data *shared.UpdateTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *UpdateTrackingPlanTrackingPlansResponseBody) GetData() *shared.UpdateTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateTrackingPlanResponseBody - OK
type UpdateTrackingPlanResponseBody struct {
	// Result of an UpdateTrackingPlan call.
	Data *shared.UpdateTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *UpdateTrackingPlanResponseBody) GetData() *shared.UpdateTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateTrackingPlanResponse struct {
	// OK
	TwoHundredApplicationJSONObject *UpdateTrackingPlanResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *UpdateTrackingPlanTrackingPlansResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *UpdateTrackingPlanTrackingPlansResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *UpdateTrackingPlanTrackingPlansResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UpdateTrackingPlanResponse) GetTwoHundredApplicationJSONObject() *UpdateTrackingPlanResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *UpdateTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *UpdateTrackingPlanTrackingPlansResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *UpdateTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *UpdateTrackingPlanTrackingPlansResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *UpdateTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *UpdateTrackingPlanTrackingPlansResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *UpdateTrackingPlanResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateTrackingPlanResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *UpdateTrackingPlanResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateTrackingPlanResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
