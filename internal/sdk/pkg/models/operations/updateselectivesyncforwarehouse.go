// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

type UpdateSelectiveSyncForWarehouseRequest struct {
	UpdateSelectiveSyncForWarehouseV1Input shared.UpdateSelectiveSyncForWarehouseV1Input `request:"mediaType=application/vnd.segment.v1beta+json"`
	WarehouseID                            string                                        `pathParam:"style=simple,explode=false,name=warehouseId"`
}

func (o *UpdateSelectiveSyncForWarehouseRequest) GetUpdateSelectiveSyncForWarehouseV1Input() shared.UpdateSelectiveSyncForWarehouseV1Input {
	if o == nil {
		return shared.UpdateSelectiveSyncForWarehouseV1Input{}
	}
	return o.UpdateSelectiveSyncForWarehouseV1Input
}

func (o *UpdateSelectiveSyncForWarehouseRequest) GetWarehouseID() string {
	if o == nil {
		return ""
	}
	return o.WarehouseID
}

// UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1betaPlusJSON - OK
type UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1betaPlusJSON struct {
	// Results from updating the schema for a Warehouse/source pair.
	Data *shared.UpdateSelectiveSyncForWarehouseV1Output `json:"data,omitempty"`
}

func (o *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1betaPlusJSON) GetData() *shared.UpdateSelectiveSyncForWarehouseV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1alphaPlusJSON - OK
type UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1alphaPlusJSON struct {
	// Results from updating the schema for a Warehouse/source pair.
	Data *shared.UpdateSelectiveSyncForWarehouseV1Output `json:"data,omitempty"`
}

func (o *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1alphaPlusJSON) GetData() *shared.UpdateSelectiveSyncForWarehouseV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1PlusJSON - OK
type UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1PlusJSON struct {
	// Results from updating the schema for a Warehouse/source pair.
	Data *shared.UpdateSelectiveSyncForWarehouseV1Output `json:"data,omitempty"`
}

func (o *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1PlusJSON) GetData() *shared.UpdateSelectiveSyncForWarehouseV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateSelectiveSyncForWarehouse200ApplicationJSON - OK
type UpdateSelectiveSyncForWarehouse200ApplicationJSON struct {
	// Results from updating the schema for a Warehouse/source pair.
	Data *shared.UpdateSelectiveSyncForWarehouseV1Output `json:"data,omitempty"`
}

func (o *UpdateSelectiveSyncForWarehouse200ApplicationJSON) GetData() *shared.UpdateSelectiveSyncForWarehouseV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateSelectiveSyncForWarehouseResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	UpdateSelectiveSyncForWarehouse200ApplicationJSONObject *UpdateSelectiveSyncForWarehouse200ApplicationJSON
	// OK
	UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1PlusJSONObject *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1PlusJSON
	// OK
	UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1alphaPlusJSONObject *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1alphaPlusJSON
	// OK
	UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1betaPlusJSONObject *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1betaPlusJSON
}

func (o *UpdateSelectiveSyncForWarehouseResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateSelectiveSyncForWarehouseResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *UpdateSelectiveSyncForWarehouseResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateSelectiveSyncForWarehouseResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateSelectiveSyncForWarehouseResponse) GetUpdateSelectiveSyncForWarehouse200ApplicationJSONObject() *UpdateSelectiveSyncForWarehouse200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.UpdateSelectiveSyncForWarehouse200ApplicationJSONObject
}

func (o *UpdateSelectiveSyncForWarehouseResponse) GetUpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1PlusJSONObject() *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1PlusJSON {
	if o == nil {
		return nil
	}
	return o.UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1PlusJSONObject
}

func (o *UpdateSelectiveSyncForWarehouseResponse) GetUpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1alphaPlusJSONObject() *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1alphaPlusJSON {
	if o == nil {
		return nil
	}
	return o.UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *UpdateSelectiveSyncForWarehouseResponse) GetUpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1betaPlusJSONObject() *UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1betaPlusJSON {
	if o == nil {
		return nil
	}
	return o.UpdateSelectiveSyncForWarehouse200ApplicationVndSegmentV1betaPlusJSONObject
}
