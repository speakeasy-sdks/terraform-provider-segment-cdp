// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ds-terraform/terraform-provider-segment_public_api/internal/sdk/pkg/models/shared"
	"net/http"
)

type ListSyncsFromWarehouseAndSourceRequest struct {
	// Defines the pagination parameters.
	//
	// This parameter exists in v1.
	Pagination  shared.PaginationInput `queryParam:"style=deepObject,explode=true,name=pagination"`
	SourceID    string                 `pathParam:"style=simple,explode=false,name=sourceId"`
	WarehouseID string                 `pathParam:"style=simple,explode=false,name=warehouseId"`
}

func (o *ListSyncsFromWarehouseAndSourceRequest) GetPagination() shared.PaginationInput {
	if o == nil {
		return shared.PaginationInput{}
	}
	return o.Pagination
}

func (o *ListSyncsFromWarehouseAndSourceRequest) GetSourceID() string {
	if o == nil {
		return ""
	}
	return o.SourceID
}

func (o *ListSyncsFromWarehouseAndSourceRequest) GetWarehouseID() string {
	if o == nil {
		return ""
	}
	return o.WarehouseID
}

// ListSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody - OK
type ListSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody struct {
	// Returns a list that contains the most recent syncs for a Warehouse-source pair, filtered and constrained by a given
	// set of pagination parameters.
	Data *shared.ListSyncsFromWarehouseAndSourceV1Output `json:"data,omitempty"`
}

func (o *ListSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody) GetData() *shared.ListSyncsFromWarehouseAndSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody - OK
type ListSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody struct {
	// Returns a list that contains the most recent syncs for a Warehouse-source pair, filtered and constrained by a given
	// set of pagination parameters.
	Data *shared.ListSyncsFromWarehouseAndSourceV1Output `json:"data,omitempty"`
}

func (o *ListSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody) GetData() *shared.ListSyncsFromWarehouseAndSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSyncsFromWarehouseAndSourceSelectiveSyncResponseBody - OK
type ListSyncsFromWarehouseAndSourceSelectiveSyncResponseBody struct {
	// Returns a list that contains the most recent syncs for a Warehouse-source pair, filtered and constrained by a given
	// set of pagination parameters.
	Data *shared.ListSyncsFromWarehouseAndSourceV1Output `json:"data,omitempty"`
}

func (o *ListSyncsFromWarehouseAndSourceSelectiveSyncResponseBody) GetData() *shared.ListSyncsFromWarehouseAndSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSyncsFromWarehouseAndSourceResponseBody - OK
type ListSyncsFromWarehouseAndSourceResponseBody struct {
	// Returns a list that contains the most recent syncs for a Warehouse-source pair, filtered and constrained by a given
	// set of pagination parameters.
	Data *shared.ListSyncsFromWarehouseAndSourceV1Output `json:"data,omitempty"`
}

func (o *ListSyncsFromWarehouseAndSourceResponseBody) GetData() *shared.ListSyncsFromWarehouseAndSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type ListSyncsFromWarehouseAndSourceResponse struct {
	// OK
	TwoHundredApplicationJSONObject *ListSyncsFromWarehouseAndSourceResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *ListSyncsFromWarehouseAndSourceSelectiveSyncResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *ListSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *ListSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListSyncsFromWarehouseAndSourceResponse) GetTwoHundredApplicationJSONObject() *ListSyncsFromWarehouseAndSourceResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ListSyncsFromWarehouseAndSourceResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *ListSyncsFromWarehouseAndSourceSelectiveSyncResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *ListSyncsFromWarehouseAndSourceResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *ListSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *ListSyncsFromWarehouseAndSourceResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *ListSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *ListSyncsFromWarehouseAndSourceResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListSyncsFromWarehouseAndSourceResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *ListSyncsFromWarehouseAndSourceResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListSyncsFromWarehouseAndSourceResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
