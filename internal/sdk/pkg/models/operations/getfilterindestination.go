// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

type GetFilterInDestinationRequest struct {
	DestinationID string `pathParam:"style=simple,explode=false,name=destinationId"`
	FilterID      string `pathParam:"style=simple,explode=false,name=filterId"`
}

func (o *GetFilterInDestinationRequest) GetDestinationID() string {
	if o == nil {
		return ""
	}
	return o.DestinationID
}

func (o *GetFilterInDestinationRequest) GetFilterID() string {
	if o == nil {
		return ""
	}
	return o.FilterID
}

// GetFilterInDestinationDestinationFiltersResponse200ResponseBody - OK
type GetFilterInDestinationDestinationFiltersResponse200ResponseBody struct {
	// Output for GetDestinationFiltersV1.
	Data *shared.GetFilterInDestinationV1Output `json:"data,omitempty"`
}

func (o *GetFilterInDestinationDestinationFiltersResponse200ResponseBody) GetData() *shared.GetFilterInDestinationV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// GetFilterInDestinationDestinationFiltersResponseResponseBody - OK
type GetFilterInDestinationDestinationFiltersResponseResponseBody struct {
	// Output for GetDestinationFiltersV1.
	Data *shared.GetFilterInDestinationV1Output `json:"data,omitempty"`
}

func (o *GetFilterInDestinationDestinationFiltersResponseResponseBody) GetData() *shared.GetFilterInDestinationV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// GetFilterInDestinationDestinationFiltersResponseBody - OK
type GetFilterInDestinationDestinationFiltersResponseBody struct {
	// Output for GetDestinationFiltersV1.
	Data *shared.GetFilterInDestinationV1Output `json:"data,omitempty"`
}

func (o *GetFilterInDestinationDestinationFiltersResponseBody) GetData() *shared.GetFilterInDestinationV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// GetFilterInDestinationResponseBody - OK
type GetFilterInDestinationResponseBody struct {
	// Output for GetDestinationFiltersV1.
	Data *shared.GetFilterInDestinationV1Output `json:"data,omitempty"`
}

func (o *GetFilterInDestinationResponseBody) GetData() *shared.GetFilterInDestinationV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetFilterInDestinationResponse struct {
	// OK
	TwoHundredApplicationJSONObject *GetFilterInDestinationResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *GetFilterInDestinationDestinationFiltersResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *GetFilterInDestinationDestinationFiltersResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *GetFilterInDestinationDestinationFiltersResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetFilterInDestinationResponse) GetTwoHundredApplicationJSONObject() *GetFilterInDestinationResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetFilterInDestinationResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *GetFilterInDestinationDestinationFiltersResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *GetFilterInDestinationResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *GetFilterInDestinationDestinationFiltersResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *GetFilterInDestinationResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *GetFilterInDestinationDestinationFiltersResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *GetFilterInDestinationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetFilterInDestinationResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *GetFilterInDestinationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetFilterInDestinationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
