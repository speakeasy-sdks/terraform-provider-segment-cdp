// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ds-terraform/terraform-provider-segment_public_api/internal/sdk/pkg/models/shared"
	"net/http"
)

type ReplaceUsersInUserGroupRequest struct {
	ReplaceUsersInUserGroupV1Input shared.ReplaceUsersInUserGroupV1Input `request:"mediaType=application/vnd.segment.v1beta+json"`
	UserGroupID                    string                                `pathParam:"style=simple,explode=false,name=userGroupId"`
}

func (o *ReplaceUsersInUserGroupRequest) GetReplaceUsersInUserGroupV1Input() shared.ReplaceUsersInUserGroupV1Input {
	if o == nil {
		return shared.ReplaceUsersInUserGroupV1Input{}
	}
	return o.ReplaceUsersInUserGroupV1Input
}

func (o *ReplaceUsersInUserGroupRequest) GetUserGroupID() string {
	if o == nil {
		return ""
	}
	return o.UserGroupID
}

// ReplaceUsersInUserGroupIAMGroupsResponse200ResponseBody - OK
type ReplaceUsersInUserGroupIAMGroupsResponse200ResponseBody struct {
	// Returns the updated user group.
	Data *shared.ReplaceUsersInUserGroupV1Output `json:"data,omitempty"`
}

func (o *ReplaceUsersInUserGroupIAMGroupsResponse200ResponseBody) GetData() *shared.ReplaceUsersInUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ReplaceUsersInUserGroupIAMGroupsResponseResponseBody - OK
type ReplaceUsersInUserGroupIAMGroupsResponseResponseBody struct {
	// Returns the updated user group.
	Data *shared.ReplaceUsersInUserGroupV1Output `json:"data,omitempty"`
}

func (o *ReplaceUsersInUserGroupIAMGroupsResponseResponseBody) GetData() *shared.ReplaceUsersInUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ReplaceUsersInUserGroupIAMGroupsResponseBody - OK
type ReplaceUsersInUserGroupIAMGroupsResponseBody struct {
	// Returns the updated user group.
	Data *shared.ReplaceUsersInUserGroupV1Output `json:"data,omitempty"`
}

func (o *ReplaceUsersInUserGroupIAMGroupsResponseBody) GetData() *shared.ReplaceUsersInUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ReplaceUsersInUserGroupResponseBody - OK
type ReplaceUsersInUserGroupResponseBody struct {
	// Returns the updated user group.
	Data *shared.ReplaceUsersInUserGroupV1Output `json:"data,omitempty"`
}

func (o *ReplaceUsersInUserGroupResponseBody) GetData() *shared.ReplaceUsersInUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type ReplaceUsersInUserGroupResponse struct {
	// OK
	TwoHundredApplicationJSONObject *ReplaceUsersInUserGroupResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *ReplaceUsersInUserGroupIAMGroupsResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *ReplaceUsersInUserGroupIAMGroupsResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *ReplaceUsersInUserGroupIAMGroupsResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ReplaceUsersInUserGroupResponse) GetTwoHundredApplicationJSONObject() *ReplaceUsersInUserGroupResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ReplaceUsersInUserGroupResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *ReplaceUsersInUserGroupIAMGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *ReplaceUsersInUserGroupResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *ReplaceUsersInUserGroupIAMGroupsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *ReplaceUsersInUserGroupResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *ReplaceUsersInUserGroupIAMGroupsResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *ReplaceUsersInUserGroupResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ReplaceUsersInUserGroupResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *ReplaceUsersInUserGroupResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ReplaceUsersInUserGroupResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
