// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ds-terraform/terraform-provider-segment_public_api/internal/sdk/pkg/models/shared"
	"net/http"
)

type ListInvitesFromUserGroupRequest struct {
	// Pagination for invites to the group.
	//
	// This parameter exists in v1.
	Pagination  shared.PaginationInput `queryParam:"style=deepObject,explode=true,name=pagination"`
	UserGroupID string                 `pathParam:"style=simple,explode=false,name=userGroupId"`
}

func (o *ListInvitesFromUserGroupRequest) GetPagination() shared.PaginationInput {
	if o == nil {
		return shared.PaginationInput{}
	}
	return o.Pagination
}

func (o *ListInvitesFromUserGroupRequest) GetUserGroupID() string {
	if o == nil {
		return ""
	}
	return o.UserGroupID
}

// ListInvitesFromUserGroupIAMGroupsResponse200ResponseBody - OK
type ListInvitesFromUserGroupIAMGroupsResponse200ResponseBody struct {
	// Returns the emails of invitees to a user group with the given group id.
	Data *shared.ListInvitesFromUserGroupV1Output `json:"data,omitempty"`
}

func (o *ListInvitesFromUserGroupIAMGroupsResponse200ResponseBody) GetData() *shared.ListInvitesFromUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListInvitesFromUserGroupIAMGroupsResponseResponseBody - OK
type ListInvitesFromUserGroupIAMGroupsResponseResponseBody struct {
	// Returns the emails of invitees to a user group with the given group id.
	Data *shared.ListInvitesFromUserGroupV1Output `json:"data,omitempty"`
}

func (o *ListInvitesFromUserGroupIAMGroupsResponseResponseBody) GetData() *shared.ListInvitesFromUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListInvitesFromUserGroupIAMGroupsResponseBody - OK
type ListInvitesFromUserGroupIAMGroupsResponseBody struct {
	// Returns the emails of invitees to a user group with the given group id.
	Data *shared.ListInvitesFromUserGroupV1Output `json:"data,omitempty"`
}

func (o *ListInvitesFromUserGroupIAMGroupsResponseBody) GetData() *shared.ListInvitesFromUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListInvitesFromUserGroupResponseBody - OK
type ListInvitesFromUserGroupResponseBody struct {
	// Returns the emails of invitees to a user group with the given group id.
	Data *shared.ListInvitesFromUserGroupV1Output `json:"data,omitempty"`
}

func (o *ListInvitesFromUserGroupResponseBody) GetData() *shared.ListInvitesFromUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type ListInvitesFromUserGroupResponse struct {
	// OK
	TwoHundredApplicationJSONObject *ListInvitesFromUserGroupResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *ListInvitesFromUserGroupIAMGroupsResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *ListInvitesFromUserGroupIAMGroupsResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *ListInvitesFromUserGroupIAMGroupsResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListInvitesFromUserGroupResponse) GetTwoHundredApplicationJSONObject() *ListInvitesFromUserGroupResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ListInvitesFromUserGroupResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *ListInvitesFromUserGroupIAMGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *ListInvitesFromUserGroupResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *ListInvitesFromUserGroupIAMGroupsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *ListInvitesFromUserGroupResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *ListInvitesFromUserGroupIAMGroupsResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *ListInvitesFromUserGroupResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListInvitesFromUserGroupResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *ListInvitesFromUserGroupResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListInvitesFromUserGroupResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
