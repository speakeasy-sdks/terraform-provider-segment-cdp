// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

type AddUsersToUserGroupRequest struct {
	AddUsersToUserGroupV1Input shared.AddUsersToUserGroupV1Input `request:"mediaType=application/vnd.segment.v1beta+json"`
	UserGroupID                string                            `pathParam:"style=simple,explode=false,name=userGroupId"`
}

func (o *AddUsersToUserGroupRequest) GetAddUsersToUserGroupV1Input() shared.AddUsersToUserGroupV1Input {
	if o == nil {
		return shared.AddUsersToUserGroupV1Input{}
	}
	return o.AddUsersToUserGroupV1Input
}

func (o *AddUsersToUserGroupRequest) GetUserGroupID() string {
	if o == nil {
		return ""
	}
	return o.UserGroupID
}

// AddUsersToUserGroupIAMGroupsResponse200ResponseBody - OK
type AddUsersToUserGroupIAMGroupsResponse200ResponseBody struct {
	// Returns the updated user group.
	Data *shared.AddUsersToUserGroupV1Output `json:"data,omitempty"`
}

func (o *AddUsersToUserGroupIAMGroupsResponse200ResponseBody) GetData() *shared.AddUsersToUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// AddUsersToUserGroupIAMGroupsResponseResponseBody - OK
type AddUsersToUserGroupIAMGroupsResponseResponseBody struct {
	// Returns the updated user group.
	Data *shared.AddUsersToUserGroupV1Output `json:"data,omitempty"`
}

func (o *AddUsersToUserGroupIAMGroupsResponseResponseBody) GetData() *shared.AddUsersToUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// AddUsersToUserGroupIAMGroupsResponseBody - OK
type AddUsersToUserGroupIAMGroupsResponseBody struct {
	// Returns the updated user group.
	Data *shared.AddUsersToUserGroupV1Output `json:"data,omitempty"`
}

func (o *AddUsersToUserGroupIAMGroupsResponseBody) GetData() *shared.AddUsersToUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// AddUsersToUserGroupResponseBody - OK
type AddUsersToUserGroupResponseBody struct {
	// Returns the updated user group.
	Data *shared.AddUsersToUserGroupV1Output `json:"data,omitempty"`
}

func (o *AddUsersToUserGroupResponseBody) GetData() *shared.AddUsersToUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type AddUsersToUserGroupResponse struct {
	// OK
	TwoHundredApplicationJSONObject *AddUsersToUserGroupResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *AddUsersToUserGroupIAMGroupsResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *AddUsersToUserGroupIAMGroupsResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *AddUsersToUserGroupIAMGroupsResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *AddUsersToUserGroupResponse) GetTwoHundredApplicationJSONObject() *AddUsersToUserGroupResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *AddUsersToUserGroupResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *AddUsersToUserGroupIAMGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *AddUsersToUserGroupResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *AddUsersToUserGroupIAMGroupsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *AddUsersToUserGroupResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *AddUsersToUserGroupIAMGroupsResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *AddUsersToUserGroupResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AddUsersToUserGroupResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *AddUsersToUserGroupResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AddUsersToUserGroupResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
