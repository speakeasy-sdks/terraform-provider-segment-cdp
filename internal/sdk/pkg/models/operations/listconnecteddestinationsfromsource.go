// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

type ListConnectedDestinationsFromSourceRequest struct {
	// Required pagination params for the request.
	//
	// This parameter exists in alpha.
	Pagination shared.PaginationInput `queryParam:"style=deepObject,explode=true,name=pagination"`
	SourceID   string                 `pathParam:"style=simple,explode=false,name=sourceId"`
}

func (o *ListConnectedDestinationsFromSourceRequest) GetPagination() shared.PaginationInput {
	if o == nil {
		return shared.PaginationInput{}
	}
	return o.Pagination
}

func (o *ListConnectedDestinationsFromSourceRequest) GetSourceID() string {
	if o == nil {
		return ""
	}
	return o.SourceID
}

// ListConnectedDestinationsFromSourceSourcesResponse200ResponseBody - OK
type ListConnectedDestinationsFromSourceSourcesResponse200ResponseBody struct {
	// Returns a list of Destinations connected to a Source.
	Data *shared.ListConnectedDestinationsFromSourceV1Output `json:"data,omitempty"`
}

func (o *ListConnectedDestinationsFromSourceSourcesResponse200ResponseBody) GetData() *shared.ListConnectedDestinationsFromSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListConnectedDestinationsFromSourceSourcesResponseResponseBody - OK
type ListConnectedDestinationsFromSourceSourcesResponseResponseBody struct {
	// Returns a list of Destinations connected to a Source.
	Data *shared.ListConnectedDestinationsFromSourceAlphaOutput `json:"data,omitempty"`
}

func (o *ListConnectedDestinationsFromSourceSourcesResponseResponseBody) GetData() *shared.ListConnectedDestinationsFromSourceAlphaOutput {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListConnectedDestinationsFromSourceSourcesResponseBody - OK
type ListConnectedDestinationsFromSourceSourcesResponseBody struct {
	// Returns a list of Destinations connected to a Source.
	Data *shared.ListConnectedDestinationsFromSourceV1Output `json:"data,omitempty"`
}

func (o *ListConnectedDestinationsFromSourceSourcesResponseBody) GetData() *shared.ListConnectedDestinationsFromSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListConnectedDestinationsFromSourceResponseBody - OK
type ListConnectedDestinationsFromSourceResponseBody struct {
	// Returns a list of Destinations connected to a Source.
	Data *shared.ListConnectedDestinationsFromSourceV1Output `json:"data,omitempty"`
}

func (o *ListConnectedDestinationsFromSourceResponseBody) GetData() *shared.ListConnectedDestinationsFromSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type ListConnectedDestinationsFromSourceResponse struct {
	// OK
	TwoHundredApplicationJSONObject *ListConnectedDestinationsFromSourceResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *ListConnectedDestinationsFromSourceSourcesResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *ListConnectedDestinationsFromSourceSourcesResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *ListConnectedDestinationsFromSourceSourcesResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListConnectedDestinationsFromSourceResponse) GetTwoHundredApplicationJSONObject() *ListConnectedDestinationsFromSourceResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ListConnectedDestinationsFromSourceResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *ListConnectedDestinationsFromSourceSourcesResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *ListConnectedDestinationsFromSourceResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *ListConnectedDestinationsFromSourceSourcesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *ListConnectedDestinationsFromSourceResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *ListConnectedDestinationsFromSourceSourcesResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *ListConnectedDestinationsFromSourceResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListConnectedDestinationsFromSourceResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *ListConnectedDestinationsFromSourceResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListConnectedDestinationsFromSourceResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
