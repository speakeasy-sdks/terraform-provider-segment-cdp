// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ds-terraform/terraform-provider-segment_public_api/internal/sdk/pkg/models/shared"
	"net/http"
)

type UpdateFunctionRequest struct {
	UpdateFunctionV1Input shared.UpdateFunctionV1Input `request:"mediaType=application/vnd.segment.v1beta+json"`
	FunctionID            string                       `pathParam:"style=simple,explode=false,name=functionId"`
}

func (o *UpdateFunctionRequest) GetUpdateFunctionV1Input() shared.UpdateFunctionV1Input {
	if o == nil {
		return shared.UpdateFunctionV1Input{}
	}
	return o.UpdateFunctionV1Input
}

func (o *UpdateFunctionRequest) GetFunctionID() string {
	if o == nil {
		return ""
	}
	return o.FunctionID
}

// UpdateFunctionFunctionsResponse200ResponseBody - OK
type UpdateFunctionFunctionsResponse200ResponseBody struct {
	// Create a Function.
	Data *shared.UpdateFunctionV1Output `json:"data,omitempty"`
}

func (o *UpdateFunctionFunctionsResponse200ResponseBody) GetData() *shared.UpdateFunctionV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateFunctionFunctionsResponseResponseBody - OK
type UpdateFunctionFunctionsResponseResponseBody struct {
	// Create a Function.
	Data *shared.UpdateFunctionV1Output `json:"data,omitempty"`
}

func (o *UpdateFunctionFunctionsResponseResponseBody) GetData() *shared.UpdateFunctionV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateFunctionFunctionsResponseBody - OK
type UpdateFunctionFunctionsResponseBody struct {
	// Create a Function.
	Data *shared.UpdateFunctionV1Output `json:"data,omitempty"`
}

func (o *UpdateFunctionFunctionsResponseBody) GetData() *shared.UpdateFunctionV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// UpdateFunctionResponseBody - OK
type UpdateFunctionResponseBody struct {
	// Create a Function.
	Data *shared.UpdateFunctionV1Output `json:"data,omitempty"`
}

func (o *UpdateFunctionResponseBody) GetData() *shared.UpdateFunctionV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateFunctionResponse struct {
	// OK
	TwoHundredApplicationJSONObject *UpdateFunctionResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *UpdateFunctionFunctionsResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *UpdateFunctionFunctionsResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *UpdateFunctionFunctionsResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UpdateFunctionResponse) GetTwoHundredApplicationJSONObject() *UpdateFunctionResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *UpdateFunctionResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *UpdateFunctionFunctionsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *UpdateFunctionResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *UpdateFunctionFunctionsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *UpdateFunctionResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *UpdateFunctionFunctionsResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *UpdateFunctionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateFunctionResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *UpdateFunctionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateFunctionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
