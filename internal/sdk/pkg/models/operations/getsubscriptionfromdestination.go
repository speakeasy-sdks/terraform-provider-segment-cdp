// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

type GetSubscriptionFromDestinationRequest struct {
	DestinationID string `pathParam:"style=simple,explode=false,name=destinationId"`
	ID            string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetSubscriptionFromDestinationRequest) GetDestinationID() string {
	if o == nil {
		return ""
	}
	return o.DestinationID
}

func (o *GetSubscriptionFromDestinationRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetSubscriptionFromDestination200ApplicationVndSegmentV1alphaPlusJSON - OK
type GetSubscriptionFromDestination200ApplicationVndSegmentV1alphaPlusJSON struct {
	// Returns a subscription for a given subscription id.
	Data *shared.GetSubscriptionFromDestinationAlphaOutput `json:"data,omitempty"`
}

func (o *GetSubscriptionFromDestination200ApplicationVndSegmentV1alphaPlusJSON) GetData() *shared.GetSubscriptionFromDestinationAlphaOutput {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetSubscriptionFromDestinationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// OK
	GetSubscriptionFromDestination200ApplicationVndSegmentV1alphaPlusJSONObject *GetSubscriptionFromDestination200ApplicationVndSegmentV1alphaPlusJSON
}

func (o *GetSubscriptionFromDestinationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSubscriptionFromDestinationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSubscriptionFromDestinationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetSubscriptionFromDestinationResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *GetSubscriptionFromDestinationResponse) GetGetSubscriptionFromDestination200ApplicationVndSegmentV1alphaPlusJSONObject() *GetSubscriptionFromDestination200ApplicationVndSegmentV1alphaPlusJSON {
	if o == nil {
		return nil
	}
	return o.GetSubscriptionFromDestination200ApplicationVndSegmentV1alphaPlusJSONObject
}
