// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

type ReplaceRulesInTrackingPlanRequest struct {
	ReplaceRulesInTrackingPlanV1Input shared.ReplaceRulesInTrackingPlanV1Input `request:"mediaType=application/vnd.segment.v1beta+json"`
	TrackingPlanID                    string                                   `pathParam:"style=simple,explode=false,name=trackingPlanId"`
}

func (o *ReplaceRulesInTrackingPlanRequest) GetReplaceRulesInTrackingPlanV1Input() shared.ReplaceRulesInTrackingPlanV1Input {
	if o == nil {
		return shared.ReplaceRulesInTrackingPlanV1Input{}
	}
	return o.ReplaceRulesInTrackingPlanV1Input
}

func (o *ReplaceRulesInTrackingPlanRequest) GetTrackingPlanID() string {
	if o == nil {
		return ""
	}
	return o.TrackingPlanID
}

// ReplaceRulesInTrackingPlanTrackingPlansResponse200ResponseBody - OK
type ReplaceRulesInTrackingPlanTrackingPlansResponse200ResponseBody struct {
	// Replaces Tracking Plan rules.
	Data *shared.ReplaceRulesInTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *ReplaceRulesInTrackingPlanTrackingPlansResponse200ResponseBody) GetData() *shared.ReplaceRulesInTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ReplaceRulesInTrackingPlanTrackingPlansResponseResponseBody - OK
type ReplaceRulesInTrackingPlanTrackingPlansResponseResponseBody struct {
	// Replaces Tracking Plan rules.
	Data *shared.ReplaceRulesInTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *ReplaceRulesInTrackingPlanTrackingPlansResponseResponseBody) GetData() *shared.ReplaceRulesInTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ReplaceRulesInTrackingPlanTrackingPlansResponseBody - OK
type ReplaceRulesInTrackingPlanTrackingPlansResponseBody struct {
	// Replaces Tracking Plan rules.
	Data *shared.ReplaceRulesInTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *ReplaceRulesInTrackingPlanTrackingPlansResponseBody) GetData() *shared.ReplaceRulesInTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ReplaceRulesInTrackingPlanResponseBody - OK
type ReplaceRulesInTrackingPlanResponseBody struct {
	// Replaces Tracking Plan rules.
	Data *shared.ReplaceRulesInTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *ReplaceRulesInTrackingPlanResponseBody) GetData() *shared.ReplaceRulesInTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type ReplaceRulesInTrackingPlanResponse struct {
	// OK
	TwoHundredApplicationJSONObject *ReplaceRulesInTrackingPlanResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *ReplaceRulesInTrackingPlanTrackingPlansResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *ReplaceRulesInTrackingPlanTrackingPlansResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *ReplaceRulesInTrackingPlanTrackingPlansResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ReplaceRulesInTrackingPlanResponse) GetTwoHundredApplicationJSONObject() *ReplaceRulesInTrackingPlanResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ReplaceRulesInTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *ReplaceRulesInTrackingPlanTrackingPlansResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *ReplaceRulesInTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *ReplaceRulesInTrackingPlanTrackingPlansResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *ReplaceRulesInTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *ReplaceRulesInTrackingPlanTrackingPlansResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *ReplaceRulesInTrackingPlanResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ReplaceRulesInTrackingPlanResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *ReplaceRulesInTrackingPlanResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ReplaceRulesInTrackingPlanResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
