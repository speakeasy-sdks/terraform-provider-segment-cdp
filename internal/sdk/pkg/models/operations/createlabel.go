// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

// CreateLabelLabelsResponse200ResponseBody - OK
type CreateLabelLabelsResponse200ResponseBody struct {
	// Result of creating a new label in the current Workspace.
	Data *shared.CreateLabelV1Output `json:"data,omitempty"`
}

func (o *CreateLabelLabelsResponse200ResponseBody) GetData() *shared.CreateLabelV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// CreateLabelLabelsResponseResponseBody - OK
type CreateLabelLabelsResponseResponseBody struct {
	// Result of creating a new label in the current Workspace.
	Data *shared.CreateLabelV1Output `json:"data,omitempty"`
}

func (o *CreateLabelLabelsResponseResponseBody) GetData() *shared.CreateLabelV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// CreateLabelLabelsResponseBody - OK
type CreateLabelLabelsResponseBody struct {
	// Result of creating a new label in the current Workspace.
	Data *shared.CreateLabelV1Output `json:"data,omitempty"`
}

func (o *CreateLabelLabelsResponseBody) GetData() *shared.CreateLabelV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// CreateLabelResponseBody - OK
type CreateLabelResponseBody struct {
	// Result of creating a new label in the current Workspace.
	Data *shared.CreateLabelV1Output `json:"data,omitempty"`
}

func (o *CreateLabelResponseBody) GetData() *shared.CreateLabelV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type CreateLabelResponse struct {
	// OK
	TwoHundredApplicationJSONObject *CreateLabelResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *CreateLabelLabelsResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *CreateLabelLabelsResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *CreateLabelLabelsResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CreateLabelResponse) GetTwoHundredApplicationJSONObject() *CreateLabelResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *CreateLabelResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *CreateLabelLabelsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *CreateLabelResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *CreateLabelLabelsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *CreateLabelResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *CreateLabelLabelsResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *CreateLabelResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateLabelResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *CreateLabelResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateLabelResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
