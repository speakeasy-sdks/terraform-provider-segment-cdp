// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ds-terraform/terraform-provider-segment_public_api/internal/sdk/pkg/models/shared"
	"net/http"
)

type ListSelectiveSyncsFromWarehouseAndSourceRequest struct {
	// Defines the pagination parameters.
	//
	// This parameter exists in v1.
	Pagination  shared.PaginationInput `queryParam:"style=deepObject,explode=true,name=pagination"`
	SourceID    string                 `pathParam:"style=simple,explode=false,name=sourceId"`
	WarehouseID string                 `pathParam:"style=simple,explode=false,name=warehouseId"`
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceRequest) GetPagination() shared.PaginationInput {
	if o == nil {
		return shared.PaginationInput{}
	}
	return o.Pagination
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceRequest) GetSourceID() string {
	if o == nil {
		return ""
	}
	return o.SourceID
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceRequest) GetWarehouseID() string {
	if o == nil {
		return ""
	}
	return o.WarehouseID
}

// ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody - OK
type ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody struct {
	// Results containing the Selective Sync configuration for a Warehouse.
	Data *shared.ListSelectiveSyncsFromWarehouseAndSourceV1Output `json:"data,omitempty"`
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody) GetData() *shared.ListSelectiveSyncsFromWarehouseAndSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody - OK
type ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody struct {
	// Results containing the Selective Sync configuration for a Warehouse.
	Data *shared.ListSelectiveSyncsFromWarehouseAndSourceV1Output `json:"data,omitempty"`
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody) GetData() *shared.ListSelectiveSyncsFromWarehouseAndSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseBody - OK
type ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseBody struct {
	// Results containing the Selective Sync configuration for a Warehouse.
	Data *shared.ListSelectiveSyncsFromWarehouseAndSourceV1Output `json:"data,omitempty"`
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseBody) GetData() *shared.ListSelectiveSyncsFromWarehouseAndSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSelectiveSyncsFromWarehouseAndSourceResponseBody - OK
type ListSelectiveSyncsFromWarehouseAndSourceResponseBody struct {
	// Results containing the Selective Sync configuration for a Warehouse.
	Data *shared.ListSelectiveSyncsFromWarehouseAndSourceV1Output `json:"data,omitempty"`
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponseBody) GetData() *shared.ListSelectiveSyncsFromWarehouseAndSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type ListSelectiveSyncsFromWarehouseAndSourceResponse struct {
	// OK
	TwoHundredApplicationJSONObject *ListSelectiveSyncsFromWarehouseAndSourceResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponse) GetTwoHundredApplicationJSONObject() *ListSelectiveSyncsFromWarehouseAndSourceResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *ListSelectiveSyncsFromWarehouseAndSourceSelectiveSyncResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListSelectiveSyncsFromWarehouseAndSourceResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
