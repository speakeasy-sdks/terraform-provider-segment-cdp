// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"segment_public_api/internal/sdk/pkg/models/shared"
)

type AddPermissionsToUserGroupRequest struct {
	AddPermissionsToUserGroupV1Input shared.AddPermissionsToUserGroupV1Input `request:"mediaType=application/vnd.segment.v1beta+json"`
	UserGroupID                      string                                  `pathParam:"style=simple,explode=false,name=userGroupId"`
}

func (o *AddPermissionsToUserGroupRequest) GetAddPermissionsToUserGroupV1Input() shared.AddPermissionsToUserGroupV1Input {
	if o == nil {
		return shared.AddPermissionsToUserGroupV1Input{}
	}
	return o.AddPermissionsToUserGroupV1Input
}

func (o *AddPermissionsToUserGroupRequest) GetUserGroupID() string {
	if o == nil {
		return ""
	}
	return o.UserGroupID
}

// AddPermissionsToUserGroupIAMGroupsResponse200ResponseBody - OK
type AddPermissionsToUserGroupIAMGroupsResponse200ResponseBody struct {
	// Returns the group's permissions, including the added permissions.
	Data *shared.AddPermissionsToUserGroupV1Output `json:"data,omitempty"`
}

func (o *AddPermissionsToUserGroupIAMGroupsResponse200ResponseBody) GetData() *shared.AddPermissionsToUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// AddPermissionsToUserGroupIAMGroupsResponseResponseBody - OK
type AddPermissionsToUserGroupIAMGroupsResponseResponseBody struct {
	// Returns the group's permissions, including the added permissions.
	Data *shared.AddPermissionsToUserGroupV1Output `json:"data,omitempty"`
}

func (o *AddPermissionsToUserGroupIAMGroupsResponseResponseBody) GetData() *shared.AddPermissionsToUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// AddPermissionsToUserGroupIAMGroupsResponseBody - OK
type AddPermissionsToUserGroupIAMGroupsResponseBody struct {
	// Returns the group's permissions, including the added permissions.
	Data *shared.AddPermissionsToUserGroupV1Output `json:"data,omitempty"`
}

func (o *AddPermissionsToUserGroupIAMGroupsResponseBody) GetData() *shared.AddPermissionsToUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// AddPermissionsToUserGroupResponseBody - OK
type AddPermissionsToUserGroupResponseBody struct {
	// Returns the group's permissions, including the added permissions.
	Data *shared.AddPermissionsToUserGroupV1Output `json:"data,omitempty"`
}

func (o *AddPermissionsToUserGroupResponseBody) GetData() *shared.AddPermissionsToUserGroupV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type AddPermissionsToUserGroupResponse struct {
	// OK
	TwoHundredApplicationJSONObject *AddPermissionsToUserGroupResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *AddPermissionsToUserGroupIAMGroupsResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *AddPermissionsToUserGroupIAMGroupsResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *AddPermissionsToUserGroupIAMGroupsResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *AddPermissionsToUserGroupResponse) GetTwoHundredApplicationJSONObject() *AddPermissionsToUserGroupResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *AddPermissionsToUserGroupResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *AddPermissionsToUserGroupIAMGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *AddPermissionsToUserGroupResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *AddPermissionsToUserGroupIAMGroupsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *AddPermissionsToUserGroupResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *AddPermissionsToUserGroupIAMGroupsResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *AddPermissionsToUserGroupResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AddPermissionsToUserGroupResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *AddPermissionsToUserGroupResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AddPermissionsToUserGroupResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
