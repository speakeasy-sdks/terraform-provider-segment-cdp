// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateSelectiveSyncForWarehouseV1OutputStatus - Status of the update operation.
type UpdateSelectiveSyncForWarehouseV1OutputStatus string

const (
	UpdateSelectiveSyncForWarehouseV1OutputStatusUnchanged UpdateSelectiveSyncForWarehouseV1OutputStatus = "UNCHANGED"
	UpdateSelectiveSyncForWarehouseV1OutputStatusUpdated   UpdateSelectiveSyncForWarehouseV1OutputStatus = "UPDATED"
)

func (e UpdateSelectiveSyncForWarehouseV1OutputStatus) ToPointer() *UpdateSelectiveSyncForWarehouseV1OutputStatus {
	return &e
}

func (e *UpdateSelectiveSyncForWarehouseV1OutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNCHANGED":
		fallthrough
	case "UPDATED":
		*e = UpdateSelectiveSyncForWarehouseV1OutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSelectiveSyncForWarehouseV1OutputStatus: %v", v)
	}
}

// UpdateSelectiveSyncForWarehouseV1Output - Results from updating the schema for a Warehouse/source pair.
type UpdateSelectiveSyncForWarehouseV1Output struct {
	// Status of the update operation.
	Status UpdateSelectiveSyncForWarehouseV1OutputStatus `json:"status"`
	// Warnings returned by the operation.
	Warnings []string `json:"warnings"`
}

func (o *UpdateSelectiveSyncForWarehouseV1Output) GetStatus() UpdateSelectiveSyncForWarehouseV1OutputStatus {
	if o == nil {
		return UpdateSelectiveSyncForWarehouseV1OutputStatus("")
	}
	return o.Status
}

func (o *UpdateSelectiveSyncForWarehouseV1Output) GetWarnings() []string {
	if o == nil {
		return []string{}
	}
	return o.Warnings
}
