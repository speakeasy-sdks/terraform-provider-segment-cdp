// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// CreateFilterForDestinationV1Input - Input for CreateDestinationFilterV1.
type CreateFilterForDestinationV1Input struct {
	// Actions for the Destination filter.
	Actions []DestinationFilterActionV1 `json:"actions"`
	// The description of the filter.
	Description *string `json:"description,omitempty"`
	// When set to true, the Destination filter is active.
	Enabled bool `json:"enabled"`
	// The filter's condition.
	If string `json:"if"`
	// The id of the Source associated with this filter.
	SourceID string `json:"sourceId"`
	// The title of the filter.
	Title string `json:"title"`
}

func (o *CreateFilterForDestinationV1Input) GetActions() []DestinationFilterActionV1 {
	if o == nil {
		return []DestinationFilterActionV1{}
	}
	return o.Actions
}

func (o *CreateFilterForDestinationV1Input) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateFilterForDestinationV1Input) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *CreateFilterForDestinationV1Input) GetIf() string {
	if o == nil {
		return ""
	}
	return o.If
}

func (o *CreateFilterForDestinationV1Input) GetSourceID() string {
	if o == nil {
		return ""
	}
	return o.SourceID
}

func (o *CreateFilterForDestinationV1Input) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}
