// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GroupSubscriptionStatusStatus - The user subscribed, unsubscribed, or on initial status.
type GroupSubscriptionStatusStatus string

const (
	GroupSubscriptionStatusStatusDidNotSubscribe GroupSubscriptionStatusStatus = "DID_NOT_SUBSCRIBE"
	GroupSubscriptionStatusStatusSubscribed      GroupSubscriptionStatusStatus = "SUBSCRIBED"
	GroupSubscriptionStatusStatusUnsubscribed    GroupSubscriptionStatusStatus = "UNSUBSCRIBED"
)

func (e GroupSubscriptionStatusStatus) ToPointer() *GroupSubscriptionStatusStatus {
	return &e
}

func (e *GroupSubscriptionStatusStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DID_NOT_SUBSCRIBE":
		fallthrough
	case "SUBSCRIBED":
		fallthrough
	case "UNSUBSCRIBED":
		*e = GroupSubscriptionStatusStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupSubscriptionStatusStatus: %v", v)
	}
}

type GroupSubscriptionStatus struct {
	// Name of the group.
	Name string `json:"name"`
	// The user subscribed, unsubscribed, or on initial status.
	Status GroupSubscriptionStatusStatus `json:"status"`
}

func (o *GroupSubscriptionStatus) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GroupSubscriptionStatus) GetStatus() GroupSubscriptionStatusStatus {
	if o == nil {
		return GroupSubscriptionStatusStatus("")
	}
	return o.Status
}
