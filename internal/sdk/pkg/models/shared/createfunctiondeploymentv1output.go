// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateFunctionDeploymentV1OutputStatus string

const (
	CreateFunctionDeploymentV1OutputStatusSuccess CreateFunctionDeploymentV1OutputStatus = "SUCCESS"
)

func (e CreateFunctionDeploymentV1OutputStatus) ToPointer() *CreateFunctionDeploymentV1OutputStatus {
	return &e
}

func (e *CreateFunctionDeploymentV1OutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = CreateFunctionDeploymentV1OutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFunctionDeploymentV1OutputStatus: %v", v)
	}
}

// FunctionDeployment - The status of the operation.
type FunctionDeployment struct {
	Status CreateFunctionDeploymentV1OutputStatus `json:"status"`
}

func (o *FunctionDeployment) GetStatus() CreateFunctionDeploymentV1OutputStatus {
	if o == nil {
		return CreateFunctionDeploymentV1OutputStatus("")
	}
	return o.Status
}

// CreateFunctionDeploymentV1Output - Updates the deployment for a Source Function instance.
type CreateFunctionDeploymentV1Output struct {
	// The status of the operation.
	FunctionDeployment FunctionDeployment `json:"functionDeployment"`
}

func (o *CreateFunctionDeploymentV1Output) GetFunctionDeployment() FunctionDeployment {
	if o == nil {
		return FunctionDeployment{}
	}
	return o.FunctionDeployment
}
