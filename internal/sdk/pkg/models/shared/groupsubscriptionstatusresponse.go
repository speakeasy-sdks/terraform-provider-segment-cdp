// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GroupSubscriptionStatusResponseStatus - The user subscribed, unsubscribed, or on initial status.
type GroupSubscriptionStatusResponseStatus string

const (
	GroupSubscriptionStatusResponseStatusDidNotSubscribe GroupSubscriptionStatusResponseStatus = "DID_NOT_SUBSCRIBE"
	GroupSubscriptionStatusResponseStatusSubscribed      GroupSubscriptionStatusResponseStatus = "SUBSCRIBED"
	GroupSubscriptionStatusResponseStatusUnsubscribed    GroupSubscriptionStatusResponseStatus = "UNSUBSCRIBED"
)

func (e GroupSubscriptionStatusResponseStatus) ToPointer() *GroupSubscriptionStatusResponseStatus {
	return &e
}

func (e *GroupSubscriptionStatusResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DID_NOT_SUBSCRIBE":
		fallthrough
	case "SUBSCRIBED":
		fallthrough
	case "UNSUBSCRIBED":
		*e = GroupSubscriptionStatusResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupSubscriptionStatusResponseStatus: %v", v)
	}
}

type GroupSubscriptionStatusResponse struct {
	// The group id.
	ID string `json:"id"`
	// Name of the group.
	Name string `json:"name"`
	// The user subscribed, unsubscribed, or on initial status.
	Status GroupSubscriptionStatusResponseStatus `json:"status"`
	// The timestamp of this subscription status's last change.
	UpdatedAt *string `json:"updatedAt,omitempty"`
}
