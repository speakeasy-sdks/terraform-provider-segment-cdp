// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteFunctionV1OutputStatus - The status of the operation.
type DeleteFunctionV1OutputStatus string

const (
	DeleteFunctionV1OutputStatusSuccess DeleteFunctionV1OutputStatus = "SUCCESS"
)

func (e DeleteFunctionV1OutputStatus) ToPointer() *DeleteFunctionV1OutputStatus {
	return &e
}

func (e *DeleteFunctionV1OutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = DeleteFunctionV1OutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteFunctionV1OutputStatus: %v", v)
	}
}

// DeleteFunctionV1Output - Delete a single Function.
type DeleteFunctionV1Output struct {
	// The status of the operation.
	Status DeleteFunctionV1OutputStatus `json:"status"`
}
