// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RemoveSubscriptionFromDestinationAlphaOutputStatus - The status of the operation.
type RemoveSubscriptionFromDestinationAlphaOutputStatus string

const (
	RemoveSubscriptionFromDestinationAlphaOutputStatusSuccess RemoveSubscriptionFromDestinationAlphaOutputStatus = "SUCCESS"
)

func (e RemoveSubscriptionFromDestinationAlphaOutputStatus) ToPointer() *RemoveSubscriptionFromDestinationAlphaOutputStatus {
	return &e
}

func (e *RemoveSubscriptionFromDestinationAlphaOutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = RemoveSubscriptionFromDestinationAlphaOutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveSubscriptionFromDestinationAlphaOutputStatus: %v", v)
	}
}

// RemoveSubscriptionFromDestinationAlphaOutput - Returns a Destination deletion flag.
type RemoveSubscriptionFromDestinationAlphaOutput struct {
	// The status of the operation.
	Status RemoveSubscriptionFromDestinationAlphaOutputStatus `json:"status"`
}
