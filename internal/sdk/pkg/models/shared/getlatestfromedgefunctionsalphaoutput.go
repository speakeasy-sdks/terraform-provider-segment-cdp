// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha - Represents an Edge Function bundle.
type GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha struct {
	// Creation date.
	CreatedAt string `json:"createdAt"`
	// Creating user's id.
	CreatedBy string `json:"createdBy"`
	// The CDN URL that can be used to fetch your latest EdgeFunctions bundle.
	DownloadURL string `json:"downloadURL"`
	// The Edge Function id.
	ID string `json:"id"`
	// The Source id.
	SourceID string `json:"sourceId"`
	// Revision number associated with the latest Edge Function.
	Version float64 `json:"version"`
}

func (o *GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha) GetCreatedBy() string {
	if o == nil {
		return ""
	}
	return o.CreatedBy
}

func (o *GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha) GetDownloadURL() string {
	if o == nil {
		return ""
	}
	return o.DownloadURL
}

func (o *GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha) GetSourceID() string {
	if o == nil {
		return ""
	}
	return o.SourceID
}

func (o *GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha) GetVersion() float64 {
	if o == nil {
		return 0.0
	}
	return o.Version
}

// GetLatestFromEdgeFunctionsAlphaOutput - Output for GetLatestFromEdgeFunctions.
type GetLatestFromEdgeFunctionsAlphaOutput struct {
	// The latest version of Edge Function bundle.
	EdgeFunctions GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha `json:"edgeFunctions"`
}

func (o *GetLatestFromEdgeFunctionsAlphaOutput) GetEdgeFunctions() GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha {
	if o == nil {
		return GetLatestFromEdgeFunctionsAlphaOutputEdgeFunctionsAlpha{}
	}
	return o.EdgeFunctions
}
