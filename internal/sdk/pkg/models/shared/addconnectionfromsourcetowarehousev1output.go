// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AddConnectionFromSourceToWarehouseV1OutputStatus - The status of the connection between the Source and Warehouse.
type AddConnectionFromSourceToWarehouseV1OutputStatus string

const (
	AddConnectionFromSourceToWarehouseV1OutputStatusConnected    AddConnectionFromSourceToWarehouseV1OutputStatus = "CONNECTED"
	AddConnectionFromSourceToWarehouseV1OutputStatusNotConnected AddConnectionFromSourceToWarehouseV1OutputStatus = "NOT_CONNECTED"
)

func (e AddConnectionFromSourceToWarehouseV1OutputStatus) ToPointer() *AddConnectionFromSourceToWarehouseV1OutputStatus {
	return &e
}

func (e *AddConnectionFromSourceToWarehouseV1OutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONNECTED":
		fallthrough
	case "NOT_CONNECTED":
		*e = AddConnectionFromSourceToWarehouseV1OutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddConnectionFromSourceToWarehouseV1OutputStatus: %v", v)
	}
}

// AddConnectionFromSourceToWarehouseV1Output - Response indicating whether the connection was successful.
type AddConnectionFromSourceToWarehouseV1Output struct {
	// The status of the connection between the Source and Warehouse.
	Status AddConnectionFromSourceToWarehouseV1OutputStatus `json:"status"`
}
