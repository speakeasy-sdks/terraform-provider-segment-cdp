// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateFunctionV1OutputFunctionV1ResourceType - The Function type.
//
// Config API note: equal to `type`.
type CreateFunctionV1OutputFunctionV1ResourceType string

const (
	CreateFunctionV1OutputFunctionV1ResourceTypeDestination       CreateFunctionV1OutputFunctionV1ResourceType = "DESTINATION"
	CreateFunctionV1OutputFunctionV1ResourceTypeInsertDestination CreateFunctionV1OutputFunctionV1ResourceType = "INSERT_DESTINATION"
	CreateFunctionV1OutputFunctionV1ResourceTypeSource            CreateFunctionV1OutputFunctionV1ResourceType = "SOURCE"
)

func (e CreateFunctionV1OutputFunctionV1ResourceType) ToPointer() *CreateFunctionV1OutputFunctionV1ResourceType {
	return &e
}

func (e *CreateFunctionV1OutputFunctionV1ResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DESTINATION":
		fallthrough
	case "INSERT_DESTINATION":
		fallthrough
	case "SOURCE":
		*e = CreateFunctionV1OutputFunctionV1ResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFunctionV1OutputFunctionV1ResourceType: %v", v)
	}
}

// CreateFunctionV1OutputFunctionV1 - Represents a Function.
type CreateFunctionV1OutputFunctionV1 struct {
	// The max count of the batch for this Function.
	BatchMaxCount *float64 `json:"batchMaxCount,omitempty"`
	// The catalog id of this Function.
	CatalogID *string `json:"catalogId,omitempty"`
	// The Function code.
	Code *string `json:"code,omitempty"`
	// The time this Function was created.
	CreatedAt *string `json:"createdAt,omitempty"`
	// The id of the user who created this Function.
	CreatedBy *string `json:"createdBy,omitempty"`
	// The time of this Function's last deployment.
	DeployedAt *string `json:"deployedAt,omitempty"`
	// A description for this Function.
	Description *string `json:"description,omitempty"`
	// A display name for this Function.
	DisplayName *string `json:"displayName,omitempty"`
	// An identifier for this Function.
	ID *string `json:"id,omitempty"`
	// Whether the deployment of this Function is the latest version.
	IsLatestVersion *bool `json:"isLatestVersion,omitempty"`
	// The URL of the logo for this Function.
	LogoURL *string `json:"logoUrl,omitempty"`
	// The preview webhook URL for this Function.
	PreviewWebhookURL *string `json:"previewWebhookUrl,omitempty"`
	// The Function type.
	//
	// Config API note: equal to `type`.
	ResourceType *CreateFunctionV1OutputFunctionV1ResourceType `json:"resourceType,omitempty"`
	// The list of settings for this Function.
	Settings []FunctionSettingV1 `json:"settings,omitempty"`
}

func (o *CreateFunctionV1OutputFunctionV1) GetBatchMaxCount() *float64 {
	if o == nil {
		return nil
	}
	return o.BatchMaxCount
}

func (o *CreateFunctionV1OutputFunctionV1) GetCatalogID() *string {
	if o == nil {
		return nil
	}
	return o.CatalogID
}

func (o *CreateFunctionV1OutputFunctionV1) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *CreateFunctionV1OutputFunctionV1) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *CreateFunctionV1OutputFunctionV1) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *CreateFunctionV1OutputFunctionV1) GetDeployedAt() *string {
	if o == nil {
		return nil
	}
	return o.DeployedAt
}

func (o *CreateFunctionV1OutputFunctionV1) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateFunctionV1OutputFunctionV1) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *CreateFunctionV1OutputFunctionV1) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CreateFunctionV1OutputFunctionV1) GetIsLatestVersion() *bool {
	if o == nil {
		return nil
	}
	return o.IsLatestVersion
}

func (o *CreateFunctionV1OutputFunctionV1) GetLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.LogoURL
}

func (o *CreateFunctionV1OutputFunctionV1) GetPreviewWebhookURL() *string {
	if o == nil {
		return nil
	}
	return o.PreviewWebhookURL
}

func (o *CreateFunctionV1OutputFunctionV1) GetResourceType() *CreateFunctionV1OutputFunctionV1ResourceType {
	if o == nil {
		return nil
	}
	return o.ResourceType
}

func (o *CreateFunctionV1OutputFunctionV1) GetSettings() []FunctionSettingV1 {
	if o == nil {
		return nil
	}
	return o.Settings
}

// CreateFunctionV1Output - Create a Function.
type CreateFunctionV1Output struct {
	// A Function object.
	Function CreateFunctionV1OutputFunctionV1 `json:"function"`
}

func (o *CreateFunctionV1Output) GetFunction() CreateFunctionV1OutputFunctionV1 {
	if o == nil {
		return CreateFunctionV1OutputFunctionV1{}
	}
	return o.Function
}
