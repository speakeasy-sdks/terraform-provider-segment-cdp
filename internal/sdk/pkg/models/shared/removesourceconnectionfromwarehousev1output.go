// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RemoveSourceConnectionFromWarehouseV1OutputStatus - The status of the request to disconnect the Source and Warehouse.
type RemoveSourceConnectionFromWarehouseV1OutputStatus string

const (
	RemoveSourceConnectionFromWarehouseV1OutputStatusSuccess RemoveSourceConnectionFromWarehouseV1OutputStatus = "SUCCESS"
)

func (e RemoveSourceConnectionFromWarehouseV1OutputStatus) ToPointer() *RemoveSourceConnectionFromWarehouseV1OutputStatus {
	return &e
}

func (e *RemoveSourceConnectionFromWarehouseV1OutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = RemoveSourceConnectionFromWarehouseV1OutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveSourceConnectionFromWarehouseV1OutputStatus: %v", v)
	}
}

// RemoveSourceConnectionFromWarehouseV1Output - Response indicating whether the disconnection was successful.
type RemoveSourceConnectionFromWarehouseV1Output struct {
	// The status of the request to disconnect the Source and Warehouse.
	Status RemoveSourceConnectionFromWarehouseV1OutputStatus `json:"status"`
}

func (o *RemoveSourceConnectionFromWarehouseV1Output) GetStatus() RemoveSourceConnectionFromWarehouseV1OutputStatus {
	if o == nil {
		return RemoveSourceConnectionFromWarehouseV1OutputStatus("")
	}
	return o.Status
}
