// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateGroupSubscriptionStatusResponseStatus - The user subscribed, unsubscribed, or on initial status.
type UpdateGroupSubscriptionStatusResponseStatus string

const (
	UpdateGroupSubscriptionStatusResponseStatusDidNotSubscribe UpdateGroupSubscriptionStatusResponseStatus = "DID_NOT_SUBSCRIBE"
	UpdateGroupSubscriptionStatusResponseStatusSubscribed      UpdateGroupSubscriptionStatusResponseStatus = "SUBSCRIBED"
	UpdateGroupSubscriptionStatusResponseStatusUnsubscribed    UpdateGroupSubscriptionStatusResponseStatus = "UNSUBSCRIBED"
)

func (e UpdateGroupSubscriptionStatusResponseStatus) ToPointer() *UpdateGroupSubscriptionStatusResponseStatus {
	return &e
}

func (e *UpdateGroupSubscriptionStatusResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DID_NOT_SUBSCRIBE":
		fallthrough
	case "SUBSCRIBED":
		fallthrough
	case "UNSUBSCRIBED":
		*e = UpdateGroupSubscriptionStatusResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateGroupSubscriptionStatusResponseStatus: %v", v)
	}
}

type UpdateGroupSubscriptionStatusResponse struct {
	// The group id.
	ID string `json:"id"`
	// Name of the group.
	Name string `json:"name"`
	// The user subscribed, unsubscribed, or on initial status.
	Status UpdateGroupSubscriptionStatusResponseStatus `json:"status"`
}
