// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// DestinationSubscriptionUpdateInput - The input parameters for updating a Destination subscription.
type DestinationSubscriptionUpdateInput struct {
	// Is the subscription enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// The user-defined name for the subscription.
	Name *string `json:"name,omitempty"`
	// The fields used for configuring this action.
	Settings map[string]interface{} `json:"settings,omitempty"`
	// The fql statement.
	Trigger *string `json:"trigger,omitempty"`
}

func (o *DestinationSubscriptionUpdateInput) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *DestinationSubscriptionUpdateInput) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *DestinationSubscriptionUpdateInput) GetSettings() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Settings
}

func (o *DestinationSubscriptionUpdateInput) GetTrigger() *string {
	if o == nil {
		return nil
	}
	return o.Trigger
}

// UpdateSubscriptionForDestinationAlphaInput - The basic input parameters for updating a Destination subscription.
type UpdateSubscriptionForDestinationAlphaInput struct {
	// A set of valid Destination input params required for updating.
	Input DestinationSubscriptionUpdateInput `json:"input"`
}

func (o *UpdateSubscriptionForDestinationAlphaInput) GetInput() DestinationSubscriptionUpdateInput {
	if o == nil {
		return DestinationSubscriptionUpdateInput{}
	}
	return o.Input
}
