// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus - Status of the update operation.
type UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus string

const (
	UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatusUnchanged UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus = "UNCHANGED"
	UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatusUpdated   UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus = "UPDATED"
)

func (e UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus) ToPointer() *UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus {
	return &e
}

func (e *UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNCHANGED":
		fallthrough
	case "UPDATED":
		*e = UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus: %v", v)
	}
}

// UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutput - Results from a SelectiveSync patch to a Space Warehouse connection.
type UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutput struct {
	// Status of the update operation.
	Status UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutputStatus `json:"status"`
}
