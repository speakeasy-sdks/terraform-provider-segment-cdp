// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DestinationMetadataActionV1Platform - The platform on which this action runs.
type DestinationMetadataActionV1Platform string

const (
	DestinationMetadataActionV1PlatformCloud  DestinationMetadataActionV1Platform = "CLOUD"
	DestinationMetadataActionV1PlatformMobile DestinationMetadataActionV1Platform = "MOBILE"
	DestinationMetadataActionV1PlatformWeb    DestinationMetadataActionV1Platform = "WEB"
)

func (e DestinationMetadataActionV1Platform) ToPointer() *DestinationMetadataActionV1Platform {
	return &e
}

func (e *DestinationMetadataActionV1Platform) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CLOUD":
		fallthrough
	case "MOBILE":
		fallthrough
	case "WEB":
		*e = DestinationMetadataActionV1Platform(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationMetadataActionV1Platform: %v", v)
	}
}

// DestinationMetadataActionV1 - Represents an Action, a building block of behavior that can be performed by the Destination.
type DestinationMetadataActionV1 struct {
	// The default value used as the trigger when connecting this action.
	DefaultTrigger *string `json:"defaultTrigger"`
	// A human-readable description of the action. May include Markdown.
	Description string `json:"description"`
	// The fields expected in order to perform the action.
	Fields []DestinationMetadataActionFieldV1 `json:"fields"`
	// Whether the action should be hidden.
	Hidden bool `json:"hidden"`
	// The primary key of the action.
	ID string `json:"id"`
	// A human-readable name for the action.
	Name string `json:"name"`
	// The platform on which this action runs.
	Platform DestinationMetadataActionV1Platform `json:"platform"`
	// A machine-readable key unique to the action definition.
	Slug string `json:"slug"`
}
