// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ListUserGroupsFromUserV1OutputPagination - Information about the pagination of this response.
type ListUserGroupsFromUserV1OutputPagination struct {
	// The current cursor within a collection.
	//
	// Consumers of the API must treat this value as opaque.
	Current string `json:"current"`
	// A pointer to the next page.
	//
	// This does not return when you retrieve the last page.
	//
	// Consumers of the API must treat this value as opaque.
	Next *string `json:"next,omitempty"`
	// A pointer to the previous page.
	//
	// This does not return when you retrieve the first page.
	//
	// Consumers of the API must treat this value as opaque.
	Previous *string `json:"previous,omitempty"`
	// The total number of entries available in the collection.
	//
	// If calculating it impacts performance, the response may omit this field.
	TotalEntries *float64 `json:"totalEntries,omitempty"`
}

func (o *ListUserGroupsFromUserV1OutputPagination) GetCurrent() string {
	if o == nil {
		return ""
	}
	return o.Current
}

func (o *ListUserGroupsFromUserV1OutputPagination) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *ListUserGroupsFromUserV1OutputPagination) GetPrevious() *string {
	if o == nil {
		return nil
	}
	return o.Previous
}

func (o *ListUserGroupsFromUserV1OutputPagination) GetTotalEntries() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalEntries
}

// ListUserGroupsFromUserV1Output - Returns all user groups the user belongs to.
type ListUserGroupsFromUserV1Output struct {
	// The user groups that the user belongs to.
	Groups []MinimalUserGroupV1 `json:"groups"`
	// Information about the pagination of this response.
	Pagination ListUserGroupsFromUserV1OutputPagination `json:"pagination"`
}

func (o *ListUserGroupsFromUserV1Output) GetGroups() []MinimalUserGroupV1 {
	if o == nil {
		return []MinimalUserGroupV1{}
	}
	return o.Groups
}

func (o *ListUserGroupsFromUserV1Output) GetPagination() ListUserGroupsFromUserV1OutputPagination {
	if o == nil {
		return ListUserGroupsFromUserV1OutputPagination{}
	}
	return o.Pagination
}
