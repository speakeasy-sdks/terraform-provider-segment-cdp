// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AddSourceToTrackingPlanV1OutputStatus - The operation status.
type AddSourceToTrackingPlanV1OutputStatus string

const (
	AddSourceToTrackingPlanV1OutputStatusSuccess AddSourceToTrackingPlanV1OutputStatus = "SUCCESS"
)

func (e AddSourceToTrackingPlanV1OutputStatus) ToPointer() *AddSourceToTrackingPlanV1OutputStatus {
	return &e
}

func (e *AddSourceToTrackingPlanV1OutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = AddSourceToTrackingPlanV1OutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddSourceToTrackingPlanV1OutputStatus: %v", v)
	}
}

// AddSourceToTrackingPlanV1Output - Connects a Source to a Tracking Plan.
type AddSourceToTrackingPlanV1Output struct {
	// The operation status.
	Status AddSourceToTrackingPlanV1OutputStatus `json:"status"`
}

func (o *AddSourceToTrackingPlanV1Output) GetStatus() AddSourceToTrackingPlanV1OutputStatus {
	if o == nil {
		return AddSourceToTrackingPlanV1OutputStatus("")
	}
	return o.Status
}
