// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteLabelV1OutputStatus - The status of the label deletion operation.
type DeleteLabelV1OutputStatus string

const (
	DeleteLabelV1OutputStatusSuccess DeleteLabelV1OutputStatus = "SUCCESS"
)

func (e DeleteLabelV1OutputStatus) ToPointer() *DeleteLabelV1OutputStatus {
	return &e
}

func (e *DeleteLabelV1OutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = DeleteLabelV1OutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteLabelV1OutputStatus: %v", v)
	}
}

// DeleteLabelV1Output - Returns the status of a label deletion.
type DeleteLabelV1Output struct {
	// The status of the label deletion operation.
	Status DeleteLabelV1OutputStatus `json:"status"`
}

func (o *DeleteLabelV1Output) GetStatus() DeleteLabelV1OutputStatus {
	if o == nil {
		return DeleteLabelV1OutputStatus("")
	}
	return o.Status
}
