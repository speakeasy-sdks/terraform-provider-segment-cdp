// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationStatusV1Status string

const (
	DestinationStatusV1StatusFailed         DestinationStatusV1Status = "FAILED"
	DestinationStatusV1StatusFinished       DestinationStatusV1Status = "FINISHED"
	DestinationStatusV1StatusInitialized    DestinationStatusV1Status = "INITIALIZED"
	DestinationStatusV1StatusInvalid        DestinationStatusV1Status = "INVALID"
	DestinationStatusV1StatusNotSupported   DestinationStatusV1Status = "NOT_SUPPORTED"
	DestinationStatusV1StatusPartialSuccess DestinationStatusV1Status = "PARTIAL_SUCCESS"
	DestinationStatusV1StatusRunning        DestinationStatusV1Status = "RUNNING"
)

func (e DestinationStatusV1Status) ToPointer() *DestinationStatusV1Status {
	return &e
}

func (e *DestinationStatusV1Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FAILED":
		fallthrough
	case "FINISHED":
		fallthrough
	case "INITIALIZED":
		fallthrough
	case "INVALID":
		fallthrough
	case "NOT_SUPPORTED":
		fallthrough
	case "PARTIAL_SUCCESS":
		fallthrough
	case "RUNNING":
		*e = DestinationStatusV1Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationStatusV1Status: %v", v)
	}
}

// DestinationStatusV1 - DestinationStatus represents status of each Destination in a stream.
type DestinationStatusV1 struct {
	ErrString  string                    `json:"errString"`
	FinishedAt string                    `json:"finishedAt"`
	ID         string                    `json:"id"`
	Name       string                    `json:"name"`
	Status     DestinationStatusV1Status `json:"status"`
}

func (o *DestinationStatusV1) GetErrString() string {
	if o == nil {
		return ""
	}
	return o.ErrString
}

func (o *DestinationStatusV1) GetFinishedAt() string {
	if o == nil {
		return ""
	}
	return o.FinishedAt
}

func (o *DestinationStatusV1) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DestinationStatusV1) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *DestinationStatusV1) GetStatus() DestinationStatusV1Status {
	if o == nil {
		return DestinationStatusV1Status("")
	}
	return o.Status
}
