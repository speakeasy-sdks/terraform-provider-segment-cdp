// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RegulationType - The regulation type to create.
type RegulationType string

const (
	RegulationTypeDeleteInternal     RegulationType = "DELETE_INTERNAL"
	RegulationTypeDeleteOnly         RegulationType = "DELETE_ONLY"
	RegulationTypeSuppressOnly       RegulationType = "SUPPRESS_ONLY"
	RegulationTypeSuppressWithDelete RegulationType = "SUPPRESS_WITH_DELETE"
	RegulationTypeUnsuppress         RegulationType = "UNSUPPRESS"
)

func (e RegulationType) ToPointer() *RegulationType {
	return &e
}

func (e *RegulationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DELETE_INTERNAL":
		fallthrough
	case "DELETE_ONLY":
		fallthrough
	case "SUPPRESS_ONLY":
		fallthrough
	case "SUPPRESS_WITH_DELETE":
		fallthrough
	case "UNSUPPRESS":
		*e = RegulationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegulationType: %v", v)
	}
}

// SubjectType - The subject type. Must be `objectId` for Cloud Sources.
type SubjectType string

const (
	SubjectTypeObjectID SubjectType = "OBJECT_ID"
)

func (e SubjectType) ToPointer() *SubjectType {
	return &e
}

func (e *SubjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OBJECT_ID":
		*e = SubjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubjectType: %v", v)
	}
}

// CreateCloudSourceRegulationV1Input - The input to create a Cloud Source-scoped regulation.
type CreateCloudSourceRegulationV1Input struct {
	// The Cloud Source collection to regulate.
	Collection string `json:"collection"`
	// The regulation type to create.
	RegulationType RegulationType `json:"regulationType"`
	// The list of `userId` or `objectId` values of the subjects to regulate.
	//
	// Config API note: equal to `parent` but allows an array.
	SubjectIds []string `json:"subjectIds"`
	// The subject type. Must be `objectId` for Cloud Sources.
	SubjectType SubjectType `json:"subjectType"`
}

func (o *CreateCloudSourceRegulationV1Input) GetCollection() string {
	if o == nil {
		return ""
	}
	return o.Collection
}

func (o *CreateCloudSourceRegulationV1Input) GetRegulationType() RegulationType {
	if o == nil {
		return RegulationType("")
	}
	return o.RegulationType
}

func (o *CreateCloudSourceRegulationV1Input) GetSubjectIds() []string {
	if o == nil {
		return []string{}
	}
	return o.SubjectIds
}

func (o *CreateCloudSourceRegulationV1Input) GetSubjectType() SubjectType {
	if o == nil {
		return SubjectType("")
	}
	return o.SubjectType
}
