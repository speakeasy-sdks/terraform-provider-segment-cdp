// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateCloudSourceRegulationV1InputRegulationType - The regulation type to create.
type CreateCloudSourceRegulationV1InputRegulationType string

const (
	CreateCloudSourceRegulationV1InputRegulationTypeDeleteInternal     CreateCloudSourceRegulationV1InputRegulationType = "DELETE_INTERNAL"
	CreateCloudSourceRegulationV1InputRegulationTypeDeleteOnly         CreateCloudSourceRegulationV1InputRegulationType = "DELETE_ONLY"
	CreateCloudSourceRegulationV1InputRegulationTypeSuppressOnly       CreateCloudSourceRegulationV1InputRegulationType = "SUPPRESS_ONLY"
	CreateCloudSourceRegulationV1InputRegulationTypeSuppressWithDelete CreateCloudSourceRegulationV1InputRegulationType = "SUPPRESS_WITH_DELETE"
	CreateCloudSourceRegulationV1InputRegulationTypeUnsuppress         CreateCloudSourceRegulationV1InputRegulationType = "UNSUPPRESS"
)

func (e CreateCloudSourceRegulationV1InputRegulationType) ToPointer() *CreateCloudSourceRegulationV1InputRegulationType {
	return &e
}

func (e *CreateCloudSourceRegulationV1InputRegulationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DELETE_INTERNAL":
		fallthrough
	case "DELETE_ONLY":
		fallthrough
	case "SUPPRESS_ONLY":
		fallthrough
	case "SUPPRESS_WITH_DELETE":
		fallthrough
	case "UNSUPPRESS":
		*e = CreateCloudSourceRegulationV1InputRegulationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCloudSourceRegulationV1InputRegulationType: %v", v)
	}
}

// CreateCloudSourceRegulationV1InputSubjectType - The subject type. Must be `objectId` for Cloud Sources.
type CreateCloudSourceRegulationV1InputSubjectType string

const (
	CreateCloudSourceRegulationV1InputSubjectTypeObjectID CreateCloudSourceRegulationV1InputSubjectType = "OBJECT_ID"
)

func (e CreateCloudSourceRegulationV1InputSubjectType) ToPointer() *CreateCloudSourceRegulationV1InputSubjectType {
	return &e
}

func (e *CreateCloudSourceRegulationV1InputSubjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OBJECT_ID":
		*e = CreateCloudSourceRegulationV1InputSubjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCloudSourceRegulationV1InputSubjectType: %v", v)
	}
}

// CreateCloudSourceRegulationV1Input - The input to create a Cloud Source-scoped regulation.
type CreateCloudSourceRegulationV1Input struct {
	// The Cloud Source collection to regulate.
	Collection string `json:"collection"`
	// The regulation type to create.
	RegulationType CreateCloudSourceRegulationV1InputRegulationType `json:"regulationType"`
	// The list of `userId` or `objectId` values of the subjects to regulate.
	//
	// Config API note: equal to `parent` but allows an array.
	SubjectIds []string `json:"subjectIds"`
	// The subject type. Must be `objectId` for Cloud Sources.
	SubjectType CreateCloudSourceRegulationV1InputSubjectType `json:"subjectType"`
}
