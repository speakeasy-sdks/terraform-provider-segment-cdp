// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateWorkspaceRegulationV1InputRegulationType - The regulation type to create.
type CreateWorkspaceRegulationV1InputRegulationType string

const (
	CreateWorkspaceRegulationV1InputRegulationTypeDeleteInternal     CreateWorkspaceRegulationV1InputRegulationType = "DELETE_INTERNAL"
	CreateWorkspaceRegulationV1InputRegulationTypeDeleteOnly         CreateWorkspaceRegulationV1InputRegulationType = "DELETE_ONLY"
	CreateWorkspaceRegulationV1InputRegulationTypeSuppressOnly       CreateWorkspaceRegulationV1InputRegulationType = "SUPPRESS_ONLY"
	CreateWorkspaceRegulationV1InputRegulationTypeSuppressWithDelete CreateWorkspaceRegulationV1InputRegulationType = "SUPPRESS_WITH_DELETE"
	CreateWorkspaceRegulationV1InputRegulationTypeUnsuppress         CreateWorkspaceRegulationV1InputRegulationType = "UNSUPPRESS"
)

func (e CreateWorkspaceRegulationV1InputRegulationType) ToPointer() *CreateWorkspaceRegulationV1InputRegulationType {
	return &e
}

func (e *CreateWorkspaceRegulationV1InputRegulationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DELETE_INTERNAL":
		fallthrough
	case "DELETE_ONLY":
		fallthrough
	case "SUPPRESS_ONLY":
		fallthrough
	case "SUPPRESS_WITH_DELETE":
		fallthrough
	case "UNSUPPRESS":
		*e = CreateWorkspaceRegulationV1InputRegulationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWorkspaceRegulationV1InputRegulationType: %v", v)
	}
}

// CreateWorkspaceRegulationV1InputSubjectType - The subject type. Use `objectId` for Cloud Source regulations.
type CreateWorkspaceRegulationV1InputSubjectType string

const (
	CreateWorkspaceRegulationV1InputSubjectTypeObjectID CreateWorkspaceRegulationV1InputSubjectType = "OBJECT_ID"
	CreateWorkspaceRegulationV1InputSubjectTypeUserID   CreateWorkspaceRegulationV1InputSubjectType = "USER_ID"
)

func (e CreateWorkspaceRegulationV1InputSubjectType) ToPointer() *CreateWorkspaceRegulationV1InputSubjectType {
	return &e
}

func (e *CreateWorkspaceRegulationV1InputSubjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OBJECT_ID":
		fallthrough
	case "USER_ID":
		*e = CreateWorkspaceRegulationV1InputSubjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWorkspaceRegulationV1InputSubjectType: %v", v)
	}
}

// CreateWorkspaceRegulationV1Input - The input to create a Workspace regulation.
type CreateWorkspaceRegulationV1Input struct {
	// The regulation type to create.
	RegulationType CreateWorkspaceRegulationV1InputRegulationType `json:"regulationType"`
	// The list of `userId` or `objectId` values of the subjects to regulate.
	//
	// Config API note: equal to `parent` but allows an array.
	SubjectIds []string `json:"subjectIds"`
	// The subject type. Use `objectId` for Cloud Source regulations.
	SubjectType CreateWorkspaceRegulationV1InputSubjectType `json:"subjectType"`
}
