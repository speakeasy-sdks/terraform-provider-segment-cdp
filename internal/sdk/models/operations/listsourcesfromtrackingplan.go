// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ds-terraform/terraform-provider-segment_public_api/internal/sdk/models/shared"
	"net/http"
)

type ListSourcesFromTrackingPlanRequest struct {
	// Pagination options.
	//
	// This parameter exists in v1.
	Pagination     shared.PaginationInput `queryParam:"style=deepObject,explode=true,name=pagination"`
	TrackingPlanID string                 `pathParam:"style=simple,explode=false,name=trackingPlanId"`
}

func (o *ListSourcesFromTrackingPlanRequest) GetPagination() shared.PaginationInput {
	if o == nil {
		return shared.PaginationInput{}
	}
	return o.Pagination
}

func (o *ListSourcesFromTrackingPlanRequest) GetTrackingPlanID() string {
	if o == nil {
		return ""
	}
	return o.TrackingPlanID
}

// ListSourcesFromTrackingPlanTrackingPlansResponse200ResponseBody - OK
type ListSourcesFromTrackingPlanTrackingPlansResponse200ResponseBody struct {
	// Lists all Sources associated with a Tracking Plan.
	Data *shared.ListSourcesFromTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *ListSourcesFromTrackingPlanTrackingPlansResponse200ResponseBody) GetData() *shared.ListSourcesFromTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSourcesFromTrackingPlanTrackingPlansResponseResponseBody - OK
type ListSourcesFromTrackingPlanTrackingPlansResponseResponseBody struct {
	// Lists all Sources associated with a Tracking Plan.
	Data *shared.ListSourcesFromTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *ListSourcesFromTrackingPlanTrackingPlansResponseResponseBody) GetData() *shared.ListSourcesFromTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSourcesFromTrackingPlanTrackingPlansResponseBody - OK
type ListSourcesFromTrackingPlanTrackingPlansResponseBody struct {
	// Lists all Sources associated with a Tracking Plan.
	Data *shared.ListSourcesFromTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *ListSourcesFromTrackingPlanTrackingPlansResponseBody) GetData() *shared.ListSourcesFromTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSourcesFromTrackingPlanResponseBody - OK
type ListSourcesFromTrackingPlanResponseBody struct {
	// Lists all Sources associated with a Tracking Plan.
	Data *shared.ListSourcesFromTrackingPlanV1Output `json:"data,omitempty"`
}

func (o *ListSourcesFromTrackingPlanResponseBody) GetData() *shared.ListSourcesFromTrackingPlanV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type ListSourcesFromTrackingPlanResponse struct {
	// OK
	TwoHundredApplicationJSONObject *ListSourcesFromTrackingPlanResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *ListSourcesFromTrackingPlanTrackingPlansResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *ListSourcesFromTrackingPlanTrackingPlansResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *ListSourcesFromTrackingPlanTrackingPlansResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListSourcesFromTrackingPlanResponse) GetTwoHundredApplicationJSONObject() *ListSourcesFromTrackingPlanResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ListSourcesFromTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *ListSourcesFromTrackingPlanTrackingPlansResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *ListSourcesFromTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *ListSourcesFromTrackingPlanTrackingPlansResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *ListSourcesFromTrackingPlanResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *ListSourcesFromTrackingPlanTrackingPlansResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *ListSourcesFromTrackingPlanResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListSourcesFromTrackingPlanResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *ListSourcesFromTrackingPlanResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListSourcesFromTrackingPlanResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
