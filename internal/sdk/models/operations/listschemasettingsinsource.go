// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ds-terraform/terraform-provider-segment_public_api/internal/sdk/models/shared"
	"net/http"
)

type ListSchemaSettingsInSourceRequest struct {
	SourceID string `pathParam:"style=simple,explode=false,name=sourceId"`
}

func (o *ListSchemaSettingsInSourceRequest) GetSourceID() string {
	if o == nil {
		return ""
	}
	return o.SourceID
}

// ListSchemaSettingsInSourceSourcesResponse200ResponseBody - OK
type ListSchemaSettingsInSourceSourcesResponse200ResponseBody struct {
	// Returns a list of settings for the Source.
	Data *shared.ListSchemaSettingsInSourceV1Output `json:"data,omitempty"`
}

func (o *ListSchemaSettingsInSourceSourcesResponse200ResponseBody) GetData() *shared.ListSchemaSettingsInSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSchemaSettingsInSourceSourcesResponseResponseBody - OK
type ListSchemaSettingsInSourceSourcesResponseResponseBody struct {
	// Returns a list of settings for the Source.
	Data *shared.ListSchemaSettingsInSourceV1Output `json:"data,omitempty"`
}

func (o *ListSchemaSettingsInSourceSourcesResponseResponseBody) GetData() *shared.ListSchemaSettingsInSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSchemaSettingsInSourceSourcesResponseBody - OK
type ListSchemaSettingsInSourceSourcesResponseBody struct {
	// Returns a list of settings for the Source.
	Data *shared.ListSchemaSettingsInSourceV1Output `json:"data,omitempty"`
}

func (o *ListSchemaSettingsInSourceSourcesResponseBody) GetData() *shared.ListSchemaSettingsInSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

// ListSchemaSettingsInSourceResponseBody - OK
type ListSchemaSettingsInSourceResponseBody struct {
	// Returns a list of settings for the Source.
	Data *shared.ListSchemaSettingsInSourceV1Output `json:"data,omitempty"`
}

func (o *ListSchemaSettingsInSourceResponseBody) GetData() *shared.ListSchemaSettingsInSourceV1Output {
	if o == nil {
		return nil
	}
	return o.Data
}

type ListSchemaSettingsInSourceResponse struct {
	// OK
	TwoHundredApplicationJSONObject *ListSchemaSettingsInSourceResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1PlusJSONObject *ListSchemaSettingsInSourceSourcesResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1alphaPlusJSONObject *ListSchemaSettingsInSourceSourcesResponseResponseBody
	// OK
	TwoHundredApplicationVndSegmentV1betaPlusJSONObject *ListSchemaSettingsInSourceSourcesResponse200ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListSchemaSettingsInSourceResponse) GetTwoHundredApplicationJSONObject() *ListSchemaSettingsInSourceResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ListSchemaSettingsInSourceResponse) GetTwoHundredApplicationVndSegmentV1PlusJSONObject() *ListSchemaSettingsInSourceSourcesResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1PlusJSONObject
}

func (o *ListSchemaSettingsInSourceResponse) GetTwoHundredApplicationVndSegmentV1alphaPlusJSONObject() *ListSchemaSettingsInSourceSourcesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1alphaPlusJSONObject
}

func (o *ListSchemaSettingsInSourceResponse) GetTwoHundredApplicationVndSegmentV1betaPlusJSONObject() *ListSchemaSettingsInSourceSourcesResponse200ResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationVndSegmentV1betaPlusJSONObject
}

func (o *ListSchemaSettingsInSourceResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListSchemaSettingsInSourceResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *ListSchemaSettingsInSourceResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListSchemaSettingsInSourceResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
