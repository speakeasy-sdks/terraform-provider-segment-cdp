// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ds-terraform/terraform-provider-segment_public_api/internal/sdk/models/shared"
	"net/http"
)

type UpdateSubscriptionForDestinationRequest struct {
	UpdateSubscriptionForDestinationAlphaInput shared.UpdateSubscriptionForDestinationAlphaInput `request:"mediaType=application/vnd.segment.v1alpha+json"`
	DestinationID                              string                                            `pathParam:"style=simple,explode=false,name=destinationId"`
	ID                                         string                                            `pathParam:"style=simple,explode=false,name=id"`
}

func (o *UpdateSubscriptionForDestinationRequest) GetUpdateSubscriptionForDestinationAlphaInput() shared.UpdateSubscriptionForDestinationAlphaInput {
	if o == nil {
		return shared.UpdateSubscriptionForDestinationAlphaInput{}
	}
	return o.UpdateSubscriptionForDestinationAlphaInput
}

func (o *UpdateSubscriptionForDestinationRequest) GetDestinationID() string {
	if o == nil {
		return ""
	}
	return o.DestinationID
}

func (o *UpdateSubscriptionForDestinationRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// UpdateSubscriptionForDestinationResponseBody - OK
type UpdateSubscriptionForDestinationResponseBody struct {
	// Returns the updated Destination subscription.
	Data *shared.UpdateSubscriptionForDestinationAlphaOutput `json:"data,omitempty"`
}

func (o *UpdateSubscriptionForDestinationResponseBody) GetData() *shared.UpdateSubscriptionForDestinationAlphaOutput {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateSubscriptionForDestinationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Resource not found
	RequestErrorEnvelope *shared.RequestErrorEnvelope
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Object *UpdateSubscriptionForDestinationResponseBody
}

func (o *UpdateSubscriptionForDestinationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateSubscriptionForDestinationResponse) GetRequestErrorEnvelope() *shared.RequestErrorEnvelope {
	if o == nil {
		return nil
	}
	return o.RequestErrorEnvelope
}

func (o *UpdateSubscriptionForDestinationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateSubscriptionForDestinationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateSubscriptionForDestinationResponse) GetObject() *UpdateSubscriptionForDestinationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
