{
  "openapi": "3.0.3",
  "info": {
    "version": "36.2.0",
    "x-logo": {
      "url": "https://segment.com/docs/images/twilio-segment-logo.png",
      "backgroundColor": "#ebf4ff",
      "altText": "Twilio Segment logo"
    },
    "contact": {
      "email": "friends@segment.com",
      "name": "Segment",
      "url": "https://docs.segmentapis.com"
    },
    "title": "Segment Public API",
    "description": "The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.\n\nAll CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.\n\nSee the next sections for more information on how to use the Segment Public API.\n"
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://api.segmentapis.com"
    },
    {
      "description": "Staging",
      "url": "https://api.segmentapis.build"
    }
  ],
  "security": [
    {
      "token": []
    }
  ],
  "tags": [
    {
      "name": "Introduction",
      "description": "The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.\n\nAll CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.\n\nSee the next sections for more information on how to use the Segment Public API.\n"
    },
    {
      "name": "Getting Started",
      "description": "The Segment Public API requires that you have an authentication token before you send requests. This section explains how to get a token and add it to your requests.\n\n## Get an API token\n\n1. Log in to the Segment App, and choose the Workspace you want to generate a token for. Each Segment Workspace requires a separate token. <!--TODO: screenshot-->\n2. Click **Settings** in the left menu to access Workspace Settings. Navigate to the **Access Management** tab, and click **Tokens**. This tab lists any existing tokens created for the Workspace.\n3. Click **+Create Token** , and follow the prompts to generate a new token. Be sure to select a Public API token, and not a Config API token. Once generated, store the token somewhere safe, like a password store or other secrets manager.\n\n## Create a test request\n\nThe Segment Public API only accepts requests in the HTTP 1.1 or HTTP 2 protocols over port 443 (HTTPS). All communications must be encrypted, so requests on port 80 (plain HTTP) will be refused.\n\nThe Segment Public API can be accessed through multiple regions, depending on data residency policies: for US-based Workspaces, use `api.segmentapis.com`. For EU-based Workspaces, `eu1.api.segmentapis.com`.\n\nYou must send the token as an `Authorization` header in your requests. Use the following format: `Authorization: Bearer $TOKEN`, where `$TOKEN` is the variable containing the value of the token.\n\nFor example, in a US-based Workspace:\n\n```\ncurl \\\n  --request GET \\\n  --url https://api.segmentapis.com/ \\\n  --header \"Authorization: Bearer $TOKEN\"\n```\n\nIn an EU-based Workspace:\n\n```\ncurl \\\n  --request GET \\\n  --url https://eu1.api.segmentapis.com/ \\\n  --header \"Authorization: Bearer $TOKEN\"\n```\n\nLearn more about how the Segment Public API handles [authentication](/tag/Authentication) in the next section.\n\n## Install and use an SDK\n\nSDKs for the Public API are available in [JavaScript/TypeScript](https://github.com/segmentio/public-api-sdk-typescript), [Go](https://github.com/segmentio/public-api-sdk-go), [Java](https://github.com/segmentio/public-api-sdk-java) and [Swift](https://github.com/segmentio/public-api-sdk-swift). If you develop in one of these platforms, installing and using the SDK is a simpler way to call Public API.\n\n### JavaScript and TypeScript (Node.js)\n\nTo install the `@segment/public-api-sdk-typescript` package, you can use either `npm` or `yarn`, depending on which package manager you prefer. Here are the installation instructions for each:\n\n#### NPM\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Run the following command:\n\n```\nnpm install @segment/public-api-sdk-typescript\n```\n\n#### Yarn\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Run the following command:\n\n```\nyarn add @segment/public-api-sdk-typescript\n```\n\nAfter doing the above, the package should be installed and ready for use in your project.\n\n### Go\n\nTo install the `segmentio/public-api-sdk-go` package, you will need to have the Go programming language installed on your system. You can check if you have Go installed by running the following command in your terminal:\n\n```\ngo version\n```\n\nIf Go is installed, this command will print the version number. If Go is not installed, you can follow the instructions on the Go website to install it: https://golang.org/doc/install\n\nOnce you have Go installed, you can install the `segmentio/public-api-sdk-go` package using the `go get` command. Here are the installation instructions:\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Run the following command:\n\n```\ngo get github.com/segmentio/public-api-sdk-go\n```\n\nThis will download the package and all of its dependencies to your system. After the installation is complete, you can import and use the package in your Go code.\n\nHere is an example of how to import and use the package in a Go program:\n\n```\nimport \"github.com/segmentio/public-api-sdk-go\"\n```\n\nNote: You may need to add the `$GOPATH/bin` directory to your `$PATH` environment variable in order to use the package in your Go code. You can do this by running the following command in your terminal:\n\n```\nexport PATH=$PATH:$GOPATH/bin\n```\n\nAfter doing the above, the package should be installed and ready for use in your project.\n\n### Java\n\nTo install the `public-api-sdk-java` package, you will need to have the Java Development Kit (JDK) installed on your system. You can check if you have the JDK installed by running the following command in your terminal:\n\n```\njava -version\n```\n\nIf the JDK is installed, this command will print the version number. If the JDK is not installed, you can follow the instructions on the Oracle website to install it: https://www.oracle.com/java/technologies/javase-downloads.html\n\nOnce you have the JDK installed, you can install the @segment/public-api-sdk-java package using your preferred build tool. Here are the installation instructions for three popular build tools: Maven and Gradle.\n\n#### Maven\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Create a new file called `pom.xml` in this directory with the following contents:\n\n```xml\n<project>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.example</groupId>\n  <artifactId>my-project</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <dependencies>\n    <dependency>\n      <groupId>com.segment.publicapi</groupId>\n      <artifactId>segment-publicapi</artifactId>\n      <version>33.0.4</version>\n    </dependency>\n  </dependencies>\n</project>\n```\n\n- Run the following command to download and install the package and its dependencies: `mvn install`.\n\n#### Gradle\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Create a new file called `build.gradle`, or edit the existing one, and make sure it contains the following declaration:\n\n```gradle\ndependencies {\n  implementation \"com.segment.publicapi:segment-publicapi:33.0.4\"\n}\n```\n\nAfter doing the above, the package should be installed and ready for use in your project.\n\n### Swift\n\nTo install the Swift Public API SDK, you will need to add it as a dependency to your project. You can do this using Swift Package Manager.\n\nFirst, open your project in Xcode and navigate to the Swift Packages tab. Click the `+` button to add a new package dependency. Enter the repository URL for public-api: https://github.com/segmentio/public-api-sdk-swift.git.\n\nNext, select the version of the SDK that you want to use, and click `Next`. Xcode will automatically resolve the dependencies for your project, and you should now be able to use Public API in your code.\n\nAlternatively, you can add the following entry to your `Package.swift` file directly:\n\n```swift\n.package(name: \"PublicApi\", url: \"git@github.com:segmentio/public-api-sdk-swift.git\", branch: \"master\")\n```\n\nTo use Public API, you will need to import it at the top of your Swift file:\n\n```swift\nimport PublicApi\n```\n\nAfter doing the above, the package should be installed and ready for use in your project.\n"
    },
    {
      "name": "Benefits",
      "description": "The Segment Public API offers several benefits over the legacy Config API. These benefits include, but are not limited to:\n\n- More consistent endpoints, which enables more efficient onboarding.\n- Improved error handling and reporting.\n- Support for pagination and per-endpoint API versioning to improve API workflows.\n"
    },
    {
      "name": "Migration",
      "description": "Learn more about the benefits of the Segment Public API over Config API in the [benefits](/tag/Benefits) section.\n\nThe Config API and Public API do not share common endpoints, but they are conceptually similar.\n\nTo begin migration, Segment recommends that you inspect the Config API endpoints you use, and find their counterparts in the Public API.\n\n## Differences in operation\n\n### URL patterns\n\nExisting Config API URLs will not work against Public API. Segment provides a new simplified format. Most of the URLs in Public API follow the format below:\n\n    VERB /object\n    VERB /object/id\n    VERB /object/id/nested-object\n    VERB /object/id/nested-object/id\n\nExamples:\n\n    GET /sources\n    PUT /destinations/fP7qoQw2HTWt9WdMr718gn\n    GET /destinations/fP7qoQw2HTWt9WdMr718gn/subscriptions/aJCn6DQsTLw9aBTqd34uQf\n\nSome exceptions exist, like `GET /warehouses/{warehouseId}/connected-sources/{sourceId}/selective-syncs` where items nest further, but those are rare.\n\n### Slugs vs IDs\n\nThe Config API uses slugs, like `my-source` or `google-analytics` to identify objects. The Public API uses IDs. IDs provide the following advantages:\n\n- No guarantees or expectations of size, ordering, collation or format to these IDs\n- Once an object receives an ID, it will not change during the lifespan of that object\n- No objects will ever share an ID, even over time\n\n### The Public API implies workspace IDs\n\nThe Public API scopes all operations to a Workspace. The Workspace ID itself is not passed into the requests, but Segment looks it up as a result of authorizing the request.\n\nThe Public API removes fields like `parent` and `workspace`, which exist in Config API endpoints, as they are no longer needed.\n\n### Enum values\n\nSegment made all enumerated values in Public API use `SCREAMING_UNDERSCORE` casing across the board. No more guessing whether a field should have the value `likeThis` , `LikeThis`, `like-this`, `like_this`, etc. They’re all formatted the same in both inputs and outputs now.\n\n### Rate limits\n\nThere is a completely new rate limiting system in place in Public API. Please refer to [Rate Limits](/tag/Rate-Limits) to learn more.\n\n### Object limits\n\nSome objects (like Sources) are subject to limits depending on the Workspace type you use (team, business, etc). These limits are not different between Config API and Public API.\n\nEndpoints operating on collections of items are generally limited to 200 items per call, unless otherwise noted in their documentation.\n\n### Payload size limits\n\nCustomers often ask about size limits for some endpoints, like `Create Tracking Plan` and `Update Function`. Segment may split these endpoints into multiple smaller / batchable operations so request sizes are not an issue, but in the meantime the Public API caps:\n\n- Tracking Plan endpoints at about 2mb requests\n- Functions endpoints at about 25mb requests\n\nTo learn more, please refer to [Payload limits](/tag/Payload-Limits).\n"
    },
    {
      "name": "Authentication",
      "description": "The Segment Public API uses API Tokens to authenticate and authorize requests. You can generate tokens by accessing Segment's Workspace settings. See [Getting Started](/tag/Getting-Started) for more information.\n\n## Scope\n\nAPI Tokens are unique and scoped to the Segment Workspace in which you create them. Tokens identify and authorize actions that users or automations can perform using the Segment Public API.\n\n> **Note**: You must create a separate API Token for each Workspace you want to manage using the Segment Public API.\n\n## Permissions and security\n\nEach API Token has an associated identity and a set of permissions. These permissions set forth the actions you can perform in the Workspace.\n\nWorkspace Admins and Owners can grant or revoke a specific token's permissions by accessing Segment's Workspace settings.\n\n## Authenticating requests\n\nEvery request must include a header that contains an API token. Create these headers in the following format:\n\n```\nAuthorization: Bearer <your_token_here>\n```\n\nAll API requests must be over HTTPS. Plain HTTP calls and calls without authentication will fail.\n"
    },
    {
      "name": "Error Handling",
      "description": "The Segment Public API uses standard HTTP response codes to represent the state of an operation. Response codes in the `2xx` range were completed successfully, while those in the `4xx` and `5xx` ranges indicate a problem. The API also uses a [response envelope](/tag/Error-Handling#section/Response-Envelopes) format that makes it easy to navigate through response details.\n\n## Status codes overview\n\n| Code | Message              | Overview                                                                                                                                                                                                                                              |\n| ---- | -------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 200  | OK                   | A request was accepted and handled successfully.                                                                                                                                                                                                      |\n| 201  | Created              | A new resource was created successfully.                                                                                                                                                                                                              |\n| 401  | Unauthorized         | No authorization, or incorrect authorization provided for the resource. <br /> <br />This could mean: <br /> <br />- A missing API Token <br />- An invalid API token <br />- The provided API token does not have permission to access the resource. |\n| 404  | Not found            | The requested resource does not exist or cannot be found.                                                                                                                                                                                             |\n| 409  | Conflict             | There was a conflict when processing this request that prevented it from being fulfilled.                                                                                                                                                             |\n| 413  | Payload too large    | The request body is larger than limits defined by the server.                                                                                                                                                                                         |\n| 422  | Unprocessable entity | The request contained invalid parameters and was not accepted. <br /> <br />This usually means the request was missing required parameters, or included parameters that did not pass validation.                                                      |\n| 429  | Too many requests    | Too many sequential or concurrent requests to a specific resource or endpoint were made.                                                                                                                                                              |\n| 5xx  | Server error         | Segment was unable to serve the request due to an internal failure.                                                                                                                                                                                   |\n\n## Response envelopes\n\nThe Segment Public API uses a consistent envelope format in all response bodies. This makes it easy to read the response data, and check for and handle any potential errors.\n\nThe following two examples illustrate the responses.\n\n```json5\n{\n  data: {\n    hello: 'world',\n    // ... other keys and values\n  },\n}\n```\n\n```json\n{\n  \"errors\": [\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"id\\\" is required\",\n      \"field\": \"id\"\n    }\n  ]\n}\n```\n\nResponses will never contain both `data` and `error` keys.\n\n### The `data` object\n\nAn object that contains the successful response from an API call. Responses in the `2xx` range always contain valid data, and conform to the `SuccessResponse` type specified above.\n\nThe following request and response pair shows a successful request and its response:\n\n```bash\ncurl https://api.segmentapis.com/warehouses/4w5kMU6vycSjfjt87k3pZB \\\n  --header 'Authorization: Bearer <token>'\n```\n\nA successful response always includes a `data` field.\n\n```json5\n{\n  data: {\n    warehouse: {\n      id: '4w5kMU6vycSjfjt87k3pZB',\n      workspaceId: '3i5paCz7b2MaaA8Wi7xXwe',\n      enabled: true,\n      // ...\n    },\n  },\n}\n```\n\n### The `errors` object\n\nThis section includes errors that prevented a request from completing. Responses in the `4xx` and `5xx` ranges always contain an `errors` array, as specified in the `ErrorResponse` type above, which describes the errors that prevented the request from finishing.\n\nGiven the following invalid request:\n\n```\ncurl --request POST \\\n  --url https://api.segmentapis.com/warehouses \\\n  --header 'Authorization: Bearer <token> ' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"warehouse\": {}\n  }'\n```\n\nThe response includes a list of errors that contains all errors that occurred during the request:\n\n```\nHTTP/1.1 422 Unprocessable Entity\n```\n\n```json\n{\n  \"errors\": [\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"metadataId\\\" is required\",\n      \"field\": \"warehouse.metadataId\"\n    },\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"settings\\\" is required\",\n      \"field\": \"warehouse.settings\"\n    }\n  ]\n}\n```\n\n### The error object\n\nAll errors in the Segment Public API use a consistent format. They always include a `type` field, which explains the type of error encountered, and may include optional fields to provide extra information and metadata about the failure.\n\n```typescript\n/** RequestError represents any error that could occur while executing a request. */\ntype RequestError = {\n  /** The type of error (validation, server, conflict, etc) */\n  type: string\n\n  /** An optional error message attached to the error */\n  message?: string\n\n  /** An optional field that triggered the error */\n  field?: string\n\n  /** An optional extra data object that can be associated with this error */\n  data?: object\n}\n```\n\nThe next section introduces [Validation Errors](/tag/Request-Validation), and explains how to handle and recover from requests that fail validation.\n"
    },
    {
      "name": "Request Validation",
      "description": "The Segment Public API validates all incoming requests. Be aware of two common request validation scenarios: Authentication Validation and Input Validation.\n\n## Authentication validation\n\nYou must authenticate each request with a valid API token. Requests that don't provide an authentication token, or provide an invalid or insufficient token, return authentication errors.\n\nSee the [Authentication section](/tag/Authentication) to learn more.\n\n## Input validation\n\nEach request validates against a set of required parameters described in the Segment Public API reference documentation for the request operation.\n\nRequests return Validation Errors if they fail to meet the schema requirements. These errors show which parts of the request are invalid.\n\n```\ncurl \\\n  --request POST \\\n  --url https://api.segmentapis.com/warehouses \\\n  --header 'Authorization: Bearer <token> ' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"warehouse\": {}\n  }'\n```\n\nThe response includes a list of errors which contains all errors that occurred during the request. In this case, both of the required `warehouse.metadataId` and `warehouse.settings` parameters are missing from the request.\n\n```json\nHTTP/1.1 422 Unprocessable Entity\n\n{\n  \"errors\": [\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"metadataId\\\" is required\",\n      \"field\": \"warehouse.metadataId\"\n    },\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"settings\\\" is required\",\n      \"field\": \"warehouse.settings\"\n    }\n  ]\n}\n```\n"
    },
    {
      "name": "Rate Limits",
      "description": "Segment has limits on the number of requests you can issue to the Public API at one time, and calculates these limits based on:\n\n- The sender IP address\n- The authentication token\n- Complexity and performance requirements of the request\n\nEvery successful HTTP response contains the following HTTP headers:\n\n- `X-RateLimit-Consumed`: the number of requests performed during the current rate limiting window.\n- `X-RateLimit-Remaining`: the number of requests remaining in the current rate limiting window.\n- `X-RateLimit-Reset`: a timestamp, in [RFC 5322 format](https://www.rfc-editor.org/rfc/rfc5322#section-3.3), denoting when the limit will be reset (that is, when a new window will begin).\n\n## Rate limit errors\n\nRate limited requests fail with the `429` status code. The failure includes a descriptive response which contains metadata about the request limits.\n\n### Rate limit error object\n\n| Field                  | Description                                                                                                                   |\n| ---------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `message`              | A message that explains the rate limit error.                                                                                 |\n| `data.msBeforeNext`    | A number of milliseconds before the rate limit is lifted.                                                                     |\n| `data.remainingPoints` | Same as the `X-RateLimit-Remaining` response header. The number of requests remaining in the current rate limiting window.    |\n| `data.consumedPoints`  | Same as the `X-RateLimit-Consumed` response header. The number of requests performed during the current rate limiting window. |\n\nThe example below shows a response that shows the remaining and consumed points.\n\n```json\n{\n  \"errors\": [\n    {\n      \"type\": \"RequestError\",\n      \"message\": \"Too many requests\",\n      \"data\": {\n        \"remainingPoints\": 0,\n        \"msBeforeNext\": 57647,\n        \"consumedPoints\": 21\n      }\n    }\n  ]\n}\n```\n\n## Common rate limit causes\n\nThe most common causes for rate limits include, but are not limited to:\n\n- Too many requests made against a resource in a short period of time.\n- Requesting a large page count or too many pages in a paginated resource too quickly.\n- N+1 requests that are issued in a `for` loop with a large number of elements.\n- Programs that restart automatically after crashing.\n\n## Reducing your call volume\n\nThe Segment Public API includes generous rate limits that allow normal workflows to complete. If you receive rate limit errors, review your requests for places where you can reduce the number of individual calls, and use the best practices listed below to avoid or mitigate rate limit overages.\n\n- Use list-based endpoints whenever possible. Avoid loading multiple hundreds of items using single-resource endpoints. For example, request a batch of Destinations, rather than iterating over a list of single Destinations.\n- Consider using exponential backoffs when retrying operations.\n- Avoid writing code that invokes the Segment Public API in a `for` loop. If you _must_ use `for` loops, consider stopping code execution briefly using `sleep` calls between items in a list.\n- [Contact Segment support](https://segment.com/help/contact/) if you think your workflows are being affected by unreasonable rate limits.\n"
    },
    {
      "name": "Payload Limits",
      "description": "To provide the highest possible quality of service to all customers, Segment has limits on the amount data you can send to the Segment Public API in a single request.\n\nThis API supports HTTP requests with bodies containing up to **25mb** (26,214,400 bytes) worth of data.\n\n## Payload limit error\n\nRequests with payload over this limit fail with the `413` status code:\n\n```json\n{\n  \"errors\": [\n    {\n      \"type\": \"PayloadLimitError\",\n      \"message\": \"The payload limit size of 25mb has been reached\"\n    }\n  ]\n}\n```\n"
    },
    {
      "name": "Pagination",
      "description": "All top-level resources in the Segment Public API return paginated requests using token based pagination. List-based API endpoints require pagination parameters to return results. If you omit pagination parameters, the requests fail validation.\n\n## Pagination parameters\n\nEvery list-based operation in the Segment Public API requires pagination parameters. These parameters pass as a pagination object either through query or body parameters.\n\n### The `pagination` object\n\nThe pagination input object contains two main properties: cursor and count.\n\n```typescript\ntype Pagination {\n  cursor?: string // optional cursor representing the position in a paginated list\n  count: number // integer number of items to retrieve in a page, between 1 and 200\n}\n```\n\nYou can provide pagination parameters by using either query or body parameters. The examples below show both ways to format pagination parameters.\n\n```json\n// As query params\n/warehouses?pagination.count=3&pagination.cursor=Mw%3D%3D\n\n// as body params\n{\n  \"pagination\": {\n    \"count\": 3,\n    \"cursor\": \"Mw==\"\n  }\n}\n```\n\n### Pagination response\n\nPagination responses include the pagination metadata that you can use to access the next page of the data. The example below shows the pagination object, which keeps track of which page was just returned, and which pages are before and after the current page.\n\n```json\n{\n  \"data\": {\n    \"warehouses\": [\n      ...\n    ],\n    \"pagination\": {\n      \"current\": \"MA==\",\n      \"next\": \"Mw==\",\n      \"previous\": null,\n      \"totalEntries\": 20\n    }\n  }\n}\n```\n\n<!--(TODO Add link if/when we publish docs for this)\n> tip \"\"\n> Bonus: The Javascript/TypeScript library can use the `paginate` function to automatically paginate resources.-->\n"
    },
    {
      "name": "Versioning",
      "description": "The Segment Public API supports `alpha`, `beta`, and `stable` versions. Each version carries its own guarantees, trade-offs, and risks. Because customers can access all three API versions, you can use the version that best fits your organization's needs.\n\nSegment doesn't lock you into a global API version. You can choose which endpoint version fits your needs and which trade-offs you prefer.\n\nThe following table offers an overview of each version:\n\n| Version                                            | Overview                                                                                                                                                                                                                              |\n| -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alpha <br />`application/vnd.segment.alpha+json`   | - Fairly unstable <br />- Basic documentation <br />- Breaking changes are common and expected <br />- Strict rate limits <br />- Use at your own risk                                                                                |\n| beta <br /> `application/vnd.segment.beta+json`    | - Fairly stable <br />- Basic documentation with examples and corner cases <br />- Breaking changes are possible <br />- Flexible rate limits <br />- Should be safe for non-critical workflows                                       |\n| stable <br />`application/vnd.segment.stable+json` | - Highest level of stability <br />- Comprehensive documentation that includes examples, corner cases, and limitations <br />- No breaking changes expected\\* <br />- Standard rate limits <br />- Safe to use for critical workflows |\n\n## Accessing versions\n\nEach available endpoint is tagged with its corresponding supported versions so that you can choose the API version that best supports your use case.\n\n### Standard API calls\n\nStandard API call requests are forwarded to the endpoint's most stable available version.\n\nThe Segment Public API first checks for an endpoint's `stable` version, then falls back to a `beta` version, if one exists. If no mature API versions are available, Segment falls back to an `alpha` version.\n\n### Versioned API calls\n\nYou can pass in the specific version of the API call you want to access as an HTTP header. Do this when you want to access API features currently unavailable on the `stable` version.\n\nThe following example shows a correctly formatted request to the `alpha` version of the `sources` route:\n\n```\ncurl \\\n  --request GET\n  --url 'https://api.segmentapis.com/sources' \\\n  --header \"Authorization: Bearer $TOKEN\" \\\n  --header 'Accept: application/vnd.segment.alpha+json'\n```\n\nThe next example shows the same request made to the same endpoint's `beta` version.\n\n```\ncurl \\\n  --request GET\n  --url 'https://api.segmentapis.com/sources' \\\n  --header \"Authorization: Bearer $TOKEN\" \\\n  --header 'Accept: application/vnd.segment.beta+json'\n```\n\n## Backwards-incompatible or breaking changes\n\nNew endpoint versions become available when Segment makes new, backwards-incompatible (\"breaking\") changes to the Segment Public API. Segment reserves the right to make breaking changes to the API, though such changes will occur infrequently. To minimize disruption to your workflow, Segment adds special release versions to new, backwards-incompatible routes.\n"
    },
    {
      "name": "Warehouses",
      "description": "A Warehouse is a central repository of data collected from one or more Sources. This is what commonly comes to mind when you think about a relational database: structured data that fits into rows and columns.\n\nUsing the Segment Public API, you can create, delete, update, list, validate and connect Warehouses.\n"
    },
    {
      "name": "Sources",
      "description": "In Segment, you create a Source (or more than one!) for each website or app you want to track. While it’s not required that you have a single Source for each server, site or app, Segment recommends that you create a Source for each unique source of data.\n\n## Migrate from the Config API\n\nLike the Segment Public API, the Config API has one endpoint to retrieve details about a Workspace. The [getSource endpoint](https://reference.segmentapis.com/#5a852761-54d5-46da-8437-6e14e63449f3) returns the following fields:\n\n| Config API     | Public API                                      |\n| -------------- | ----------------------------------------------- |\n| `name`         | See note on names vs IDs in the migration guide |\n| `name`         | `slug` (`workspace/` prefix removed)            |\n| `display_name` | `name`                                          |\n| `create_time`  | None                                            |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "IAM Users",
      "description": "Segment’s access management tools let Workspace owners manage which users can access different parts of their Segment Workspaces.\n"
    },
    {
      "name": "IAM Groups",
      "description": "A User Group is a set of Team Members with a set of shared policies. A Segment Team Member can be a member of one or many Groups. All roles in the Segment App are additive, which means that you can assign group memberships and individual roles to a single team member. For example, a single user can inherit roles from a Group definition AND have access to more resources through individually assigned roles.\n"
    },
    {
      "name": "Tracking Plans",
      "description": "A Tracking Plan is a data spec outlining the events and properties you intend to collect across your Segment Sources.\n\nThe Segment Tracking Plan feature allows you to validate your expected events against the live events that Segment receives. Segment generates violations when an event doesn’t match the spec’d event in the Tracking Plan.\n\nYou can store your Tracking Plans in your Workspace, and connect them to one or more Sources.\n\nUsing the Segment Public API, you can create, delete, update, list, and connect Tracking Plans and their Rules.\n\n## Migrate from the Config API\n\nThe [getTrackingPlan endpoint](https://reference.segmentapis.com/#1092fe01-379b-4ca1-8b1d-9f42b33d2899) returns the following fields:\n\n| Config API     | Public API  |\n| -------------- | ----------- |\n| `display_name` | `name`      |\n| `name`         | `slug`      |\n| `updateTime`   | `updatedAt` |\n| `createTime`   | `createdAt` |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Spaces",
      "description": "A space is a separate Personas environment. Consider the two main reasons you might use spaces:\n\n- To separate your development and production environments (highly recommended)\n- To separate environments for distinct teams or geographical regions\n"
    },
    {
      "name": "Deletion and Suppression",
      "description": "In keeping with Segment's commitment to support GDPR and future privacy regulations such as the CCPA, you can delete and suppress data about end users if you identify that user with a `userId`, should they revoke or alter their consent to data collection. For instance, if an end user in the EU invokes their Right to Object or Right to Erasure under the GDPR, you can use the following features in Segment to block ongoing data collection about the user, and delete all historical data across Segment’s systems, connected S3 buckets and Warehouses, and supported downstream partners.\n\nRegulations enable you to issue a single request to delete and suppress data about a user by `userId`. All regulations are by default scoped to your Workspace and target all Sources within the Workspace. This way, you don't need to page over every Source within Segment to delete data about a user across all your users.\n\nAll deletion and suppression actions within Segment are asynchronous, and fall under the umbrella of what Segment calls \"Regulations.\" Regulations are requests to Segment to impart control over your data flow. You can issue these requests with the Segment Public API using the endpoints below.\n\nYou can't replay data deleted through Regulations. For standard replay requests, Segment asks that you wait for deletions to complete and not submit any new deletion requests for the period of time that Segment replays data for you.\n\n## Migrate from the Config API\n\nDeletion and Suppression got an overhaul in the Segment Public API. They’re now divided into Workspace, Source, and Cloud Source-related endpoints. The Public API simplifies these endpoints: the `attributes` input field is no longer required, and you can now pass an array of IDs to regulate (instead of a `parent`).\n"
    },
    {
      "name": "Destinations",
      "description": "Destinations receive data _from_ Segment.\n\nIn the Segment Public API, you can manipulate Destinations and the connections between Sources and Destinations, as well as list and inspect their relationships.\n\n## Migrate from the Config API\n\nLike Segment Public API, Config API allows creating, retrieving, updating and deleting Destination objects. See the table below for some key differences:\n\n| Config API     | Public API                                      |\n| -------------- | ----------------------------------------------- |\n| catalogId      | Not returned                                    |\n| config         | `settings`                                      |\n| connectionMode | Not returned                                    |\n| createTime     | Not returned                                    |\n| displayName    | `name`                                          |\n| enabled        | `enabled`                                       |\n| name           | See note on names vs IDs in the migration guide |\n| parent         | `sourceId` (prefix removed)                     |\n| updateTime     | Not returned                                    |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Edge Functions",
      "description": "Edge functions enables you to write event enrichment and transformation logic in Javascript outside\nyour client codebase and deployed to applications over-the-air dynamically.\n\n## Availability\n\nEdge Functions are in Private Alpha testing and available to select customers. To opt in, contact your Customer Success Manager and ensure that you have one of Segment's new Mobile SDKs (Swift or Kotlin) configured.\n\n## Migrate from the Config API\n\n| Config API | Public API                                                            |\n| ---------- | --------------------------------------------------------------------- |\n| `name`     | Use the Source `id` (See note on names vs IDs in the migration guide) |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Destination Filters",
      "description": "The Destination Filters API provides fine-grained controls that allow you to conditionally prevent data delivery to specific destinations. You can filter entire events (for example, selectively drop them) or block/allow individual fields in events before you send them. You can conditionally apply filters to each event based on the contents of that event’s payload. For example, you could apply a filter to Track events with a `plan` property equal to `Professional`, or you could apply a filter to events with a user email address that does not match `*@example.com`.\n\n## Use cases\n\nUse Destination Filters to:\n\n- Reduce the delivery volume of events to a Destination to save on costs\n- Filter out Personally Identifying Information (PII) from the events sent to a Destination that shouldn't receive or store PII\n- Prevent internal user activity from reaching an analytics tool\n- Send the events that you care about to an custom webhook\n\n## Availability\n\nDestination Filters are available to all Business customers and support cloud-based (server-side) and web device-mode destinations. Mobile device-mode destinations are in beta and only support [Swift](https://segment.com/docs/connections/sources/catalog/libraries/mobile/swift-ios/), [Kotlin](https://segment.com/docs/connections/sources/catalog/libraries/mobile/kotlin-android/), and [React Native 2.0](https://segment.com/docs/connections/sources/catalog/libraries/mobile/react-native/) libraries. S3 and Warehouse Destinations are not yet supported.\n\n## Types of filters\n\nThere are three filters that can be applied to events:\n| Type | Action |\n| ---------------- | ---------------------------------------- |\n| drop | Do not send the event to the destination |\n| sample | Send only a percentage of events through to the destination. You can optionally sample based on a field. For example, you can sample 10% of users by sampling on userId instead of a random 10% of all events, which is the default. |\n| allow_properties | Allow properties in the event by specifying nested JSON objects (for example, context, properties.productDetails, etc.) and a list of fields that should be retained in that nested object, with all others dropped before the event is sent to the destination.|\n| drop_properties | Drop properties in the event by specifying nested JSON objects (for example, context, properties.productDetails, etc.) and a list of fields to drop from those nested objects before the event is sent to the destination. |\n\nThe `allow_properties` and `drop_properties` filters may only filter fields inside the following top-level fields of Segment events:\n\n- `properties`\n- `context`\n- `traits`\n\n## Filter order\n\nFilters are applied in the following order for each event:\n\n1. `drop`\n2. `sample`\n3. `allow_properties`\n4. `drop_properties`\n\n## Conditional filters\n\nFilters can optionally be applied to an event by writing an \"if\" statement using Filter Query Language (\"FQL\"), Segment’s simple query language for streaming JSON. FQL statements evaluate to true or false based on the contents of each event, allowing you to only apply filters to specific events.\n\nFor example, given the following event payload:\n\n```\n{\n  \"event\": \"Button Clicked\",\n  \"type\": \"track\",\n  \"context\": {\n    \"library\": {\n      \"name\": \"analytics.js\",\n      \"version\": \"1.0\",\n    }\n  }\n}\n```\n\nThe following FQL statements will evaluate to \"true\", causing the filter to be applied:\n\n- `event = 'Button Clicked'`\n- `event = 'Button Clicked' and type = 'track'`\n- `match(context.library.version, '1.*')`\n- `type = 'identify' or type = 'track'`\n\nAnd the following FQL statements will evaluate to \"false\", causing the filter to be skipped:\n\n- `event = 'Screen Tapped'`\n- `context.path.path = '/login'`\n- `match (context.library.version, '2.*')`\n\nFor more detailed documentation including a list of all operators and functions, see the [FQL Documentation](https://segment.com/docs/api/public-api/fql).\n\n## Universal filters\n\nTo apply a filter to all events going to a destination, you can supply an \"if\" statement of \"all\". All actions in that filter will be applied to events before being delivered to that destination.\n\n## Limits\n\nDestination Filters currently have the following limits:\n\n- Each Destination may have no more than 10 filters.\n- FQL \"if\" statements may be a maximum of 3Kb in size.\n- Filters may have a maximum of 4 actions.\n- Allow / Drop properties filters may target a maximum of 8 objects and each object may have a maximum of 64 fields in the allow or drop.\n- The Preview API \"input\" payload may be a maximum of 128Kb.\n\nIf you would like any of these limits lifted, please reach out to Segment at friends@segment.com.\n\n## API models\n\n### Filter\n\n| Attribute   | Type     | Description                                                                                                                                       |           |\n| ----------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\n| name        | string   | The URL path of this filter.                                                                                                                      | read-only |\n| enabled     | boolean  | Whether or not this filter should be active.                                                                                                      |           |\n| title       | string   | A human-readable title for this filter.                                                                                                           |           |\n| description | string   | A longer human-readable description of this filter.                                                                                               |           |\n| if          | string   | A FQL statement that causes this filter’s action to be applied if it evaluates to true. \"all\" will cause the filter to be applied to all events   | required  |\n| actions     | []action | The filtering action to take on events that match the \"if\" statement. Must be one of: \"drop\", \"sample\", \"allow_properties\", or \"drop_properties\". | required  |\n\n## Action\n\n### Drop\n\nThe `drop` action will cause the event to be dropped and not sent to the destination if the \"if\" statement evaluates to true.\n\n| Attribute | Type   | Description                                                |          |\n| --------- | ------ | ---------------------------------------------------------- | -------- |\n| type      | string | The action name. For the drop action, this must be \"drop\". | required |\n\n### Sample\n\nThe `sample` action will allow only a percentage of events through. It can sample randomly or, if given a path attribute, it can sample a percentage of events based on the contents of a field. This is useful for sampling all events for a percentage of users rather than a percentage of all events for all users.\n\n| Attribute | Type   | Description                                                                                                                                                                            |          |\n| --------- | ------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- |\n| type      | string | The action name. For the sample action, this must be \"sample\".                                                                                                                         | required |\n| percent   | float  | A percentage in the range [0.0, 1.0] that determines the percent of events to allow through. 0.0 will allow no events and 1.0 will allow all events. The default is 0.0.               | required |\n| path      | string | If non-empty, events will be sampled based on the value at this path. For example, if path is userId, a percentage of users will have their events allowed through to the destination. |          |\n\n### Allow properties\n\nThe allow_properties action takes a list of nested objects (for example, `context`, `properties.orderDetails`) and a list of fields for each object that should be allowed, with all other fields in those objects dropped.\n| Attribute | Type | Description | |\n| --------- | ------ | ---------------------------------------------------------------------------------------------------------- | -------- |\n| type | string | The action name. For the allow properties action, this must be \"allow_properties\". | required |\n| fields | map of string → list of string | A map of nested JSON objects that should have their properties filtered. The map key is the path to the nested JSON object (for example, context.ip, properties, etc.) and the value is a list of string that specifies which fields within the object to allow. Nested JSON objects not specified in this map will be untouched by this filter | required |\n\n### Drop properties\n\nThe drop_properties action takes a list of nested objects (for example, `context`, `properties.orderDetails`) and a list of fields for each object that should be dropped, with all other fields in those objects untouched.\n| Attribute | Type | Description | |\n| --------- | ------------------------------ | ---------------------------------------------------------------------------------- | -------- |\n| type | string | The action name. For the drop properties action, this must be \"drop_properties\". | required |\n| fields | map of string → list of string | A map of nested JSON objects that should have their properties filtered. The map key is the path to the nested JSON object (for example, context.ip, properties, etc.) and the value is a list of string that specifies which fields within the object to drop. Nested JSON objects not specified in this map will be untouched by this filter | required |\n\n## Migrate from the Config API\n\n## Destination filter model\n\n| Config API field | Public API counterpart     |\n| ---------------- | -------------------------- |\n| name             | Use the `id` field instead |\n| enabled          | `enabled`                  |\n| title            | `title`                    |\n| description      | `description`              |\n| if               | `if`                       |\n| actions          | `actions`                  |\n\n## Action model differences\n\n### Type property\n\n| Config API       | Public API counterpart |\n| ---------------- | ---------------------- |\n| drop_event       | `drop`                 |\n| sample_event     | `sample`               |\n| whitelist_fields | `allow_properties`     |\n| blacklist_fields | `drop_properties`      |\n\n### Fields property\n\nThe type of `fields` property has been changed:\n\n| Config API                             | Public API counterpart         |\n| -------------------------------------- | ------------------------------ |\n| map of string → Field List (see below) | map of string → list of string |\n\n#### Field list\n\n| Attribute | Type     | Description                                                                                                |\n| --------- | -------- | ---------------------------------------------------------------------------------------------------------- |\n| fields    | []string | One or more JSON object field names. Nested fields (that is, dot-separated field names) are not supported. |\n\nTo migrate, replace any usages of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Functions",
      "description": "Functions let you create your own Sources and Destinations directly within your Workspace to bring new types of data into Segment and send data to new tools with JavaScript - no extra infrastructure required.\n\n## Migrate from the Config API\n\nThe [getFunction endpoint](https://reference.segmentapis.com/#7963d88e-2e1b-41eb-9fa2-66a113c12f1c) returns the following fields:\n\n| Config API    | Public API     |\n| ------------- | -------------- |\n| `id`          | `id`           |\n| `type`        | `resourceType` |\n| `created_at`  | `createdAt`    |\n| `created_by`  | `createdBy`    |\n| `description` | `description`  |\n| `logo_url`    | `logoUrl`      |\n| `catalog_id`  | `catalogId`    |\n"
    },
    {
      "name": "Labels",
      "description": "Workspace owners can use Labels to grant users access to groups of resources. When you add a Label to a Source or Personas Space, any users to whom you assign that Label gain access to those resources.\n\nTo create or configure labels, go to the Labels tab in your Workspace settings. Only Workspace Owners can manage labels for the entire Workspace.\n"
    },
    {
      "name": "Profiles Sync",
      "description": "A Profiles Sync Warehouse is a central repository of data collected from your workspace. It is what commonly comes to mind when you think about a relational database: structured data that fits into rows and columns.\n\nUsing Segment’s Public API, you can create, delete, update, and list Spaces Warehouses connections.\n"
    },
    {
      "name": "Reverse ETL",
      "description": "Reverse ETL allows the use of a database (aka: Segment Warehouse) as a source of\ndata to be connected and sent to supported Segment Destinations. Previously, it\nwas only possible to use a Segment Warehouse as a destination.\n\n## Sync schedule JSON configuration\n\nThe structure of `scheduleConfig` varies with the value in `scheduleStrategy`.\nAll strategies will employ a key/value object with _minimum_ depth of 1.\n\n### Strategy: \"manual\"\n\nWhen `scheduleStrategy` is \"manual\", this field can be excluded altogether. With\nthis strategy, syncs will never be triggered automatically, so they must be\nrequested manually.\n\n### Strategy: \"periodic\"\n\nWhen `scheduleStrategy` is \"periodic\", the only supported key is \"interval\",\nwhich will be a string that is in a format accepted by Go's\n[time.ParseDuration][go-time-parse-duration] function. For example, \"3h\" will\nsync every 3 hours, while \"30m\" will sync every 30 minutes. The interval must be\ngreater than 10 minutes (\"10m\") and shorter than 1 week (\"168h\").\n\nAn example config would look like this:\n\n```json\n{\n  \"interval\": \"1h\"\n}\n```\n\n### Strategy: \"specific_days\"\n\nWhen `scheduleStrategy` is \"specific_days\", there are only 3 supported keys:\n\"days\", \"hours\" and \"timezone\".\n\nThe \"days\" field must be an array of numbers, corresponding to the desired days\nof the week that syncs should run. Each item must be a number from 0 (Sunday) up\nto 6 (Saturday). There needs to be at least 1 item, but also no more than 7.\n\nFor example: `[0, 6]` would correspond to the weekend (Saturday and Sunday)\nwhile `[1, 2, 3, 4, 5]` would correspond to the weekdays (Monday through\nFriday).\n\nThe \"hours\" field must be an array of numbers, corresponding to the desired\nhours of the day that syncs should run. Each item must be a number from 0 (12am\nor 0:00) up to 23 (11pm or 23:00). There needs to be at least 1 item, but also\nno more than 24.\n\nFor example: `[0, 12]` would correspond to the running at midnight (12:00am /\n0:00) and noon (12:00pm / 12:00).\n\nThe \"timezone\" field must be a valid value from the IANA database used by\nGolang, which should match the list found [here][iana-timezones]. This allows\nthe \"hours\" above to reflect your own time zone which may be easier to\nconfigure, but you can also choose \"UTC\" if you want to avoid things like DST\n(daylight savings).\n\nAn example config would look like:\n\n```json\n{\n  \"days\": [0, 6],\n  \"hours\": [0, 6, 12, 18],\n  \"timezone\": \"America/Los_Angeles\"\n}\n```\n\nThis would run syncs 4 times per day (midnight, 6am, noon, 6pm) but only on\nweekends (Saturday and Sunday).\n\n[go-time-parse-duration]: https://pkg.go.dev/time#ParseDuration\n[iana-timezones]: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n"
    },
    {
      "name": "Transformations",
      "description": "With Transformations, you can change data as it flows through Segment to:\n- Correct bad data\n- Customize data for a specific destination\n- Align events with your tracking plan\n\nWith Segment's Public API, you can use Transformations for several use cases:\n1. Rename Track events\n- Use `newEventName` in the `createTransformation` or `updateTransformation` API call.\n2. Rename a property (Track events) or a trait (Identify or Group events)\n- Use `propertyRenames` in the `createTransformation` or `updateTransformation` API call.\n3. Update a property value to a different static value or add a new property and set a static value\n- Use `propertyValueTransformations` in the `createTransformation` or `updateTransformation` API call.\n- Segment currently supports setting static values for top-level fields with `propertyValueTransformations`. However, Segment doesn't support changing fields outside the properties or traits object with `propertyRenames`.\n\nVisit [Segment's Transformations docs](https://segment.com/docs/protocols/transform/) to learn more.\n"
    },
    {
      "name": "Testing",
      "description": "The `echo` endpoint lets you test Segment Public API connectivity, responses, versioning, and error handling.\n"
    },
    {
      "name": "Selective Sync",
      "description": "Warehouse Selective Sync allows you to manage the data that you send to your Warehouses. You can use this feature to stop syncing specific events (also known as collections) or properties that aren’t relevant, and may slow down your Warehouse syncs.\n"
    },
    {
      "name": "Audiences",
      "description": "Audiences play a key role in gaining a deeper understanding of your users. Audiences allow you to group users or profiles based on shared characteristics, behaviors, and attributes. Using events passed into Segment, traits, and computed traits you can create Audiences which can help unlock more relevant engagement and communication.\n\n> **Note**: The Audience API is currently in a Private Beta. If you are interested in joining the Private Beta, then please reach out to your customer success manager.\n"
    },
    {
      "name": "Computed Traits",
      "description": "Computed traits allow you to quickly create new traits for a user or profile based on that user's tracked interactions. Using the events and event properties that you send through page and track calls, Segment will calculate and keep up-to-date, over time, the value for your defined computed trait. These can be computations like the total number of orders a customer has completed, the lifetime revenue of a customer, the most frequent user to determine which user is most active in an account, or the unique visitors count to assess how many visitors from a single domain.\n\n> **Note**: The Computed Traits API is currently in a Private Beta. If you are interested in joining the Private Beta, then please reach out to your customer success manager.\n\nNote that when using a unique list computed trait, Segment limits the number of Event Properties that can be added to the specific trait to 10,000. If your computed trait exceeds this limit, Segment will not persist any new Event Properties and will drop new trait keys and corresponding values.\n"
    },
    {
      "name": "API Calls",
      "description": "The Segment Public API lets you get cumulative API call counts for a usage period.\n"
    },
    {
      "name": "Monthly Tracked Users",
      "description": ""
    },
    {
      "name": "Catalog",
      "description": "These endpoints let you list all the Sources, Destinations, and Destination settings that Segment supports.\n\n## Migrate from the Config API\n\nLike the Segment Public API, the Config API has endpoints to navigate the catalog of Integrations supported by Segment. See the sections below for some key differences:\n\n### Source catalog items\n\n| Config API  | Public API                                      |\n| ----------- | ----------------------------------------------- |\n| name        | See note on names vs IDs in the migration guide |\n| displayName | `name`                                          |\n| description | `description`                                   |\n| categories  | `categories`                                    |\n| logos       | `logos`                                         |\n| type        | Removed                                         |\n\n### Destination catalog items\n\n| Config API                 | Public API                                      |\n| -------------------------- | ----------------------------------------------- |\n| browserUnbundlingPublic    | `supportedFeatures.browserUnbundlingPublic`     |\n| browserUnbundlingSupported | `supportedFeatures.browserUnbundling`           |\n| categories                 | `categories`                                    |\n| components                 | `components`                                    |\n| description                | `description`                                   |\n| displayName                | `name`,                                         |\n| id                         | `id`                                            |\n| logos                      | `logos`                                         |\n| methods                    | `supportedMethods`                              |\n| name                       | See note on names vs IDs in the migration guide |\n| platforms                  | `supportedPlatforms`                            |\n| previousNames              | `previousNames`                                 |\n| settings                   | `options`                                       |\n| slug                       | `slug`                                          |\n| status                     | `status`                                        |\n| type                       | Not returned                                    |\n| website                    | `website`                                       |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Events",
      "description": ""
    },
    {
      "name": "Workspaces",
      "description": "A Workspace is a group of Sources that you administer and Segment bills together. Workspaces help companies manage access for different users and data Sources and let you collaborate with team members, add permissions, and share Sources across your team using a shared billing account.\n\nWhen you first log in to your Segment account, you can create a new Workspace, or choose to log into an existing Workspace if your account is part of an existing organization.\n\nAs the Segment Public API scopes tokens to a Workspace, all operations within the API are also limited to the Workspace to which that token belongs.\n\n## Migrate from the Config API\n\nLike the Segment Public API, the Config API has one endpoint to retrieve details about a Workspace. The [getWorkspace endpoint](https://reference.segmentapis.com/#7ed2968b-c4a5-4cfb-b4bf-7d28c7b38bd2) returns the following fields:\n\n| Config API     | Public API                           |\n| -------------- | ------------------------------------ |\n| `create_time`  | Not returned                         |\n| `display_name` | `name`                               |\n| `id`           | `id`                                 |\n| `name`         | `slug` (`workspace/` prefix removed) |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Audit Trail",
      "description": "Segment offers an in-app 90 day Audit Trail for Business Tier accounts.\n\nThe Segment Public API lets you automate consuming these Audit Trail events.\n"
    },
    {
      "name": "IAM Roles",
      "description": "A role gives a user access to resources within a Workspace. Roles are additive, and can combine to configure a custom policy for a Team Member or a Group. A policy is at least one role plus one resource applied to an individual user or group.\n"
    }
  ],
  "paths": {
    "/warehouses/{warehouseId}/connected-sources/{sourceId}": {
      "post": {
        "summary": "Add Connection from Source to Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Connects a Source to a Warehouse.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Modified` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "addConnectionFromSourceToWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.addConnectionFromSourceToWarehouse('kjU72LCJexvrqL7G4TMHHN', 'rh5BDZp6QDHvXFCkibm1pR'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    System.out.println(api.addConnectionFromSourceToWarehouse(\"kjU72LCJexvrqL7G4TMHHN\", \"rh5BDZp6QDHvXFCkibm1pR\").getData());\n  }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Remove Source Connection from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Disconnects a Source from a Warehouse.",
        "operationId": "removeSourceConnectionFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.removeSourceConnectionFromWarehouse('kjU72LCJexvrqL7G4TMHHN', 'rh5BDZp6QDHvXFCkibm1pR'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    System.out.println(api.removeSourceConnectionFromWarehouse(\"kjU72LCJexvrqL7G4TMHHN\", \"rh5BDZp6QDHvXFCkibm1pR\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}/labels": {
      "post": {
        "summary": "Add Labels to Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds an existing label to a Source.\n\n\n\n• When called, this endpoint may generate the `Source Modified` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "addLabelsToSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLabelsToSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "type",
                    "value": "web"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLabelsToSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "type",
                    "value": "web"
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLabelsToSourceAlphaInput"
              },
              "example": {
                "labels": [
                  {
                    "key": "type",
                    "value": "web"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddLabelsToSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "type",
                        "value": "web"
                      },
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddLabelsToSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "type",
                        "value": "web"
                      },
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddLabelsToSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "type",
                        "value": "web"
                      },
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddLabelsToSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "type",
                        "value": "web"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.addLabelsToSource('rh5BDZp6QDHvXFCkibm1pR', { labels: [{ key: 'type', value: 'web' }] }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    AddLabelsToSourceV1Input input = AddLabelsToSourceV1Input.fromJson(\"{\\\"labels\\\":[{\\\"key\\\":\\\"type\\\",\\\"value\\\":\\\"web\\\"}]}\");\n    System.out.println(api.addLabelsToSource(\"rh5BDZp6QDHvXFCkibm1pR\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "put": {
        "summary": "Replace Labels in Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Replaces all labels in a Source.",
        "operationId": "replaceLabelsInSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "environment",
                    "value": "prod"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "environment",
                    "value": "prod"
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceLabelsInSourceAlphaInput"
              },
              "example": {
                "labels": [
                  {
                    "key": "environment",
                    "value": "prod"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceLabelsInSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.sources.replaceLabelsInSource('rh5BDZp6QDHvXFCkibm1pR', { labels: [{ key: 'environment', value: 'prod' }] })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    ReplaceLabelsInSourceV1Input input = ReplaceLabelsInSourceV1Input.fromJson(\n      \"{\\\"labels\\\":[{\\\"key\\\":\\\"environment\\\",\\\"value\\\":\\\"prod\\\"}]}\"\n    );\n    System.out.println(api.replaceLabelsInSource(\"rh5BDZp6QDHvXFCkibm1pR\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/users/{userId}/permissions": {
      "post": {
        "summary": "Add Permissions to User",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "example": "sgJDWk3K21k6LE3tLU9nRK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of access permissions to a user.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Policy Created\n* User Policy Updated\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "addPermissionsToUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2NhjDLkczvmxFKr1ma6KdGvd7r2",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                        "subjectType": "user",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2NhjDLkczvmxFKr1ma6KdGvd7r2",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                        "subjectType": "user",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2Nhj5TcFf976y1P4VhN49KSjoZR",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                        "subjectType": "user",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "55P3eB1tNooNfXyitxYC9C",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                        "subjectType": "user",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamUsers.addPermissionsToUser('sgJDWk3K21k6LE3tLU9nRK', {\n      permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    AddPermissionsToUserV1Input input = AddPermissionsToUserV1Input.fromJson(\n      \"{\\\"permissions\\\":[{\\\"roleId\\\":\\\"1WDUuRLxv84rrfCNUwvkrRtkxnS\\\",\\\"resources\\\":[{\\\"id\\\":\\\"9aQ1Lj62S4bomZKLF4DPqW\\\",\\\"type\\\":\\\"WORKSPACE\\\"}]}]}\"\n    );\n    System.out.println(api.addPermissionsToUser(\"sgJDWk3K21k6LE3tLU9nRK\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "put": {
        "summary": "Replace Permissions for User",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "example": "sgJDWk3K21k6LE3tLU9nRK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the list of access permissions for a user.\n\n\n\n• When called, this endpoint may generate the `Policy Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replacePermissionsForUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamUsers.replacePermissionsForUser('sgJDWk3K21k6LE3tLU9nRK', {\n      permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    ReplacePermissionsForUserV1Input input = ReplacePermissionsForUserV1Input.fromJson(\n      \"{\\\"permissions\\\":[{\\\"roleId\\\":\\\"1WDUuRLxv84rrfCNUwvkrRtkxnS\\\",\\\"resources\\\":[{\\\"id\\\":\\\"9aQ1Lj62S4bomZKLF4DPqW\\\",\\\"type\\\":\\\"WORKSPACE\\\"}]}]}\"\n    );\n    System.out.println(api.replacePermissionsForUser(\"sgJDWk3K21k6LE3tLU9nRK\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/groups/{userGroupId}/permissions": {
      "post": {
        "summary": "Add Permissions to User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of access permissions to a user group.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Policy Created\n* User Group Policy Updated\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "addPermissionsToUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2NhjGWCU1KB96p75RaslYdroIW1",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                        "subjectType": "group",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2NhjGWCU1KB96p75RaslYdroIW1",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                        "subjectType": "group",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2NhjDcvpJNzIae18q6Qt5nSjIIV",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                        "subjectType": "group",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2Nhj6Cn1XAH9jGDKX2zEwMwUhFS",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                        "subjectType": "group",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamGroups.addPermissionsToUserGroup('bBABwqbaDf2QdwTbW8bNEm', {\n      permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    AddPermissionsToUserGroupV1Input input = AddPermissionsToUserGroupV1Input.fromJson(\n      \"{\\\"permissions\\\":[{\\\"roleId\\\":\\\"1WDUuRLxv84rrfCNUwvkrRtkxnS\\\",\\\"resources\\\":[{\\\"id\\\":\\\"9aQ1Lj62S4bomZKLF4DPqW\\\",\\\"type\\\":\\\"WORKSPACE\\\"}]}]}\"\n    );\n    System.out.println(api.addPermissionsToUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "put": {
        "summary": "Replace Permissions for User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the list of access permissions for a user group.\n\n\n\n• When called, this endpoint may generate the `Policy Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replacePermissionsForUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamGroups.replacePermissionsForUserGroup('bBABwqbaDf2QdwTbW8bNEm', {\n      permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    ReplacePermissionsForUserGroupV1Input input = ReplacePermissionsForUserGroupV1Input.fromJson(\n      \"{\\\"permissions\\\":[{\\\"roleId\\\":\\\"1WDUuRLxv84rrfCNUwvkrRtkxnS\\\",\\\"resources\\\":[{\\\"id\\\":\\\"9aQ1Lj62S4bomZKLF4DPqW\\\",\\\"type\\\":\\\"WORKSPACE\\\"}]}]}\"\n    );\n    System.out.println(api.replacePermissionsForUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/tracking-plans/{trackingPlanId}/sources": {
      "post": {
        "summary": "Add Source to Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Connects a Source to a Tracking Plan.\n\n\n\n• When called, this endpoint may generate the `Source Modified` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "addSourceToTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Input"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Input"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Input"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.trackingPlans.addSourceToTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', { sourceId: 'qQEHquLrjRDN9j1ByrChyn' })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    AddSourceToTrackingPlanV1Input input = AddSourceToTrackingPlanV1Input.fromJson(\"{\\\"sourceId\\\":\\\"qQEHquLrjRDN9j1ByrChyn\\\"}\");\n    System.out.println(api.addSourceToTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Sources from Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Lists Sources connected to a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.\n\n\nThis endpoint requires the user to have at least the following permission(s): \n * Source Read-only\n * Tracking Plan Read-only",
        "operationId": "listSourcesFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.listSourcesFromTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', { count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    System.out.println(\n      api.listSourcesFromTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\", PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData()\n    );\n  }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Remove Source from Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "style": "deepObject",
            "description": "The id of the Source associated with the Tracking Plan.\n\nConfig API note: analogous to `sourceName`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the Source associated with the Tracking Plan.\n\nConfig API note: analogous to `sourceName`.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "qQEHquLrjRDN9j1ByrChyn"
          }
        ],
        "deprecated": false,
        "description": "Disconnects a Source from a Tracking Plan.\n\n\n\n• When called, this endpoint may generate the `Source Modified` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "removeSourceFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.removeSourceFromTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', 'qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    System.out.println(api.removeSourceFromTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\", \"qQEHquLrjRDN9j1ByrChyn\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/groups/{userGroupId}/users": {
      "post": {
        "summary": "Add Users to User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of users or invites to a user group.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Subjects Added to Group\n* User Added To User Group\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "addUsersToUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersToUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersToUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersToUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddUsersToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddUsersToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddUsersToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddUsersToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.addUsersToUserGroup('bBABwqbaDf2QdwTbW8bNEm', { emails: ['foo@example.com'] }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    AddUsersToUserGroupV1Input input = AddUsersToUserGroupV1Input.fromJson(\"{\\\"emails\\\":[\\\"foo@example.com\\\"]}\");\n    System.out.println(api.addUsersToUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Users from User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination for members of a group.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns users belonging to a user group.",
        "operationId": "listUsersFromUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "email": "papi@segment.com",
                        "name": ""
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.listUsersFromUserGroup('bBABwqbaDf2QdwTbW8bNEm', { count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    System.out.println(api.listUsersFromUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\", PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/messaging-subscriptions/batch": {
      "post": {
        "summary": "Batch Query Messaging Subscriptions for Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Get Messaging Subscriptions for space.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Spaces feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "batchQueryMessagingSubscriptionsForSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/BatchQueryMessagingSubscriptionsForSpaceAlphaInput"
              },
              "example": {
                "subscriptions": [
                  {
                    "key": "jacob@exmple.com",
                    "type": "EMAIL"
                  },
                  {
                    "key": "jane@exmple.com",
                    "type": "EMAIL"
                  },
                  {
                    "key": "pgibbonsexample.com",
                    "type": "EMAIL"
                  },
                  {
                    "key": "+12162226233",
                    "type": "SMS"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchQueryMessagingSubscriptionsForSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "successes": [
                      {
                        "key": "jacob@exmple.com",
                        "type": "EMAIL",
                        "status": "SUBSCRIBED",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "key": "jane@exmple.com",
                        "type": "EMAIL",
                        "status": "SUBSCRIBED",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "groups": [
                          {
                            "name": "promotions",
                            "id": "grp_id",
                            "status": "SUBSCRIBED",
                            "updatedAt": "2006-01-02T15:04:05.000Z"
                          }
                        ]
                      },
                      {
                        "key": "2162226233",
                        "type": "SMS",
                        "status": "DID_NOT_SUBSCRIBE",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "failures": [
                      {
                        "key": "pgibbonsexample.com",
                        "type": "EMAIL",
                        "errors": [
                          {
                            "code": "INVALID_EMAIL",
                            "message": "Email is not valid"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Spaces"
        ],
        "tags": [
          "Spaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.spaces.batchQueryMessagingSubscriptionsForSpace('9aQ1Lj62S4bomZKLF4DPqW', {\n      subscriptions: [\n        { key: 'jacob@exmple.com', type: 'EMAIL' },\n        { key: 'jane@exmple.com', type: 'EMAIL' },\n        { key: 'pgibbonsexample.com', type: 'EMAIL' },\n        { key: '+12162226233', type: 'SMS' },\n      ],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SpacesApi api = new SpacesApi();\n    BatchQueryMessagingSubscriptionsForSpaceAlphaInput input = BatchQueryMessagingSubscriptionsForSpaceAlphaInput.fromJson(\n      \"{\\\"subscriptions\\\":[{\\\"key\\\":\\\"jacob@exmple.com\\\",\\\"type\\\":\\\"EMAIL\\\"},{\\\"key\\\":\\\"jane@exmple.com\\\",\\\"type\\\":\\\"EMAIL\\\"},{\\\"key\\\":\\\"pgibbonsexample.com\\\",\\\"type\\\":\\\"EMAIL\\\"},{\\\"key\\\":\\\"+12162226233\\\",\\\"type\\\":\\\"SMS\\\"}]}\"\n    );\n    System.out.println(api.batchQueryMessagingSubscriptionsForSpace(\"9aQ1Lj62S4bomZKLF4DPqW\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/regulations/cloudsources/{sourceId}": {
      "post": {
        "summary": "Create Cloud Source Regulation",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a Source-scoped regulation.\n\n      Config API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createCloudSourceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": [
                  "test_object_id"
                ],
                "collection": "some-app-collection"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": [
                  "test_object_id"
                ],
                "collection": "some-app-collection"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": [
                  "test_object_id"
                ],
                "collection": "some-app-collection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deletionAndSuppression.createCloudSourceRegulation('qQEHquLrjRDN9j1ByrChyn', {\n      regulationType: 'SUPPRESS_ONLY',\n      subjectType: 'OBJECT_ID',\n      subjectIds: ['test_object_id'],\n      collection: 'some-app-collection',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();\n    CreateCloudSourceRegulationV1Input input = CreateCloudSourceRegulationV1Input.fromJson(\n      \"{\\\"regulationType\\\":\\\"SUPPRESS_ONLY\\\",\\\"subjectType\\\":\\\"OBJECT_ID\\\",\\\"subjectIds\\\":[\\\"test_object_id\\\"],\\\"collection\\\":\\\"some-app-collection\\\"}\"\n    );\n    System.out.println(api.createCloudSourceRegulation(\"qQEHquLrjRDN9j1ByrChyn\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/destinations": {
      "post": {
        "summary": "Create Destination",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Destination.\n\n\n\n• When called, this endpoint may generate the `Integration Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "547610a5db31d978f14a5c4e",
                "name": "my destination v1",
                "settings": {
                  "apiKey": "XYZ",
                  "retarget": true
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "547610a5db31d978f14a5c4e",
                "name": "my destination beta",
                "settings": {
                  "apiKey": "XYZ",
                  "retarget": true
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "547610a5db31d978f14a5c4e",
                "name": "Example destination",
                "settings": {
                  "apiKey": "XYZ",
                  "retarget": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "6424a4cbb03b3d8fe288f003",
                      "enabled": true,
                      "name": "my destination v1",
                      "settings": {
                        "apiKey": "••••••••••",
                        "retarget": true
                      },
                      "metadata": {
                        "id": "547610a5db31d978f14a5c4e",
                        "name": "Blueshift",
                        "description": "Blueshift's predictive marketing automates behavioral messaging on email, push notifications, display, Facebook and more",
                        "slug": "blueshift",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/Blueshift-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/Fqsz0q3QPujUyMACLPLr"
                        },
                        "options": [
                          {
                            "name": "apiKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your API key can be found in Account Profile > API Keys",
                            "required": true,
                            "label": "API Key"
                          },
                          {
                            "name": "retarget",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This will retarget page calls on the client-side",
                            "required": true,
                            "label": "Retarget"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "SMS & Push Notifications",
                          "Advertising",
                          "Email Marketing"
                        ],
                        "website": "http://getblueshift.com/",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-blueshift",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/blueshift",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Blueshift"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "6424a4cbb03b3d8fe288f003",
                      "enabled": true,
                      "name": "my destination v1",
                      "settings": {
                        "apiKey": "••••••••••",
                        "retarget": true
                      },
                      "metadata": {
                        "id": "547610a5db31d978f14a5c4e",
                        "name": "Blueshift",
                        "description": "Blueshift's predictive marketing automates behavioral messaging on email, push notifications, display, Facebook and more",
                        "slug": "blueshift",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/Blueshift-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/Fqsz0q3QPujUyMACLPLr"
                        },
                        "options": [
                          {
                            "name": "apiKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your API key can be found in Account Profile > API Keys",
                            "required": true,
                            "label": "API Key"
                          },
                          {
                            "name": "retarget",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This will retarget page calls on the client-side",
                            "required": true,
                            "label": "Retarget"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "SMS & Push Notifications",
                          "Advertising",
                          "Email Marketing"
                        ],
                        "website": "http://getblueshift.com/",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-blueshift",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/blueshift",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Blueshift"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "6424a4b9b03b3d8fe288f001",
                      "enabled": true,
                      "name": "my destination beta",
                      "settings": {
                        "apiKey": "••••••••••",
                        "retarget": true
                      },
                      "metadata": {
                        "id": "547610a5db31d978f14a5c4e",
                        "name": "Blueshift",
                        "description": "Blueshift's predictive marketing automates behavioral messaging on email, push notifications, display, Facebook and more",
                        "slug": "blueshift",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/Blueshift-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/Fqsz0q3QPujUyMACLPLr"
                        },
                        "options": [
                          {
                            "name": "apiKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your API key can be found in Account Profile > API Keys",
                            "required": true,
                            "label": "API Key"
                          },
                          {
                            "name": "retarget",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This will retarget page calls on the client-side",
                            "required": true,
                            "label": "Retarget"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "SMS & Push Notifications",
                          "Advertising",
                          "Email Marketing"
                        ],
                        "website": "http://getblueshift.com/",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-blueshift",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/blueshift",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Blueshift"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "6424a495b03b3d8fe288efff",
                      "enabled": true,
                      "name": "Example destination",
                      "settings": {
                        "apiKey": "••••••••••",
                        "retarget": true
                      },
                      "metadata": {
                        "id": "547610a5db31d978f14a5c4e",
                        "name": "Blueshift",
                        "description": "Blueshift's predictive marketing automates behavioral messaging on email, push notifications, display, Facebook and more",
                        "slug": "blueshift",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/Blueshift-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/Fqsz0q3QPujUyMACLPLr"
                        },
                        "options": [
                          {
                            "name": "apiKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your API key can be found in Account Profile > API Keys",
                            "required": true,
                            "label": "API Key"
                          },
                          {
                            "name": "retarget",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This will retarget page calls on the client-side",
                            "required": true,
                            "label": "Retarget"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "SMS & Push Notifications",
                          "Advertising",
                          "Email Marketing"
                        ],
                        "website": "http://getblueshift.com/",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-blueshift",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/blueshift",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Blueshift"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinations.createDestination({\n      sourceId: 'rh5BDZp6QDHvXFCkibm1pR',\n      metadataId: '547610a5db31d978f14a5c4e',\n      name: 'my destination v1',\n      settings: { apiKey: 'XYZ', retarget: true },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    CreateDestinationV1Input input = CreateDestinationV1Input.fromJson(\n      \"{\\\"sourceId\\\":\\\"rh5BDZp6QDHvXFCkibm1pR\\\",\\\"metadataId\\\":\\\"547610a5db31d978f14a5c4e\\\",\\\"name\\\":\\\"my destination v1\\\",\\\"settings\\\":{\\\"apiKey\\\":\\\"XYZ\\\",\\\"retarget\\\":true}}\"\n    );\n    System.out.println(api.createDestination(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Destinations",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Required pagination params for the request.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 1
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Destinations.",
        "operationId": "listDestinations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDestinationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [
                      {
                        "id": "5GFhvtz8fha42Cm4B9E6L8",
                        "enabled": true,
                        "name": "",
                        "settings": {
                          "region": "us-west",
                          "roleAddress": "arn::...",
                          "secretId": "secrettt",
                          "stream": "bla"
                        },
                        "metadata": {
                          "id": "57da359580412f644ff33fb9",
                          "name": "Amazon Kinesis",
                          "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                          "slug": "amazon-kinesis",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                            "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                          },
                          "options": [
                            {
                              "name": "region",
                              "type": "string",
                              "defaultValue": "us-west-2",
                              "description": "The Kinesis Stream's AWS region key",
                              "required": true,
                              "label": "AWS Kinesis Stream Region"
                            },
                            {
                              "name": "roleAddress",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                              "required": true,
                              "label": "Role Address"
                            },
                            {
                              "name": "secretId",
                              "type": "string",
                              "defaultValue": "#SEGMENT_WORKSPACE_ID",
                              "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                              "required": true,
                              "label": "Secret ID (Read-Only)"
                            },
                            {
                              "name": "stream",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The Kinesis Stream Name",
                              "required": true,
                              "label": "AWS Kinesis Stream Name"
                            },
                            {
                              "name": "useMessageId",
                              "type": "boolean",
                              "defaultValue": false,
                              "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                              "required": false,
                              "label": "Use Segment Message ID"
                            }
                          ],
                          "status": "PUBLIC",
                          "categories": [
                            "Analytics",
                            "Raw Data"
                          ],
                          "website": "https://aws.amazon.com/kinesis/streams/",
                          "components": [
                            {
                              "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                              "type": "SERVER"
                            }
                          ],
                          "previousNames": [
                            "Amazon Kinesis"
                          ],
                          "supportedMethods": {
                            "track": true,
                            "pageview": true,
                            "identify": true,
                            "group": true,
                            "alias": true
                          },
                          "supportedPlatforms": {
                            "browser": true,
                            "mobile": true,
                            "server": true,
                            "warehouse": false
                          },
                          "supportedFeatures": {
                            "cloudModeInstances": "0",
                            "deviceModeInstances": "0",
                            "replay": true,
                            "browserUnbundling": false,
                            "browserUnbundlingPublic": true
                          },
                          "actions": [],
                          "presets": [],
                          "contacts": [],
                          "partnerOwned": false
                        },
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDestinationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [
                      {
                        "id": "5GFhvtz8fha42Cm4B9E6L8",
                        "enabled": true,
                        "name": "",
                        "settings": {
                          "region": "us-west",
                          "roleAddress": "arn::...",
                          "secretId": "secrettt",
                          "stream": "bla"
                        },
                        "metadata": {
                          "id": "57da359580412f644ff33fb9",
                          "name": "Amazon Kinesis",
                          "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                          "slug": "amazon-kinesis",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                            "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                          },
                          "options": [
                            {
                              "name": "region",
                              "type": "string",
                              "defaultValue": "us-west-2",
                              "description": "The Kinesis Stream's AWS region key",
                              "required": true,
                              "label": "AWS Kinesis Stream Region"
                            },
                            {
                              "name": "roleAddress",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                              "required": true,
                              "label": "Role Address"
                            },
                            {
                              "name": "secretId",
                              "type": "string",
                              "defaultValue": "#SEGMENT_WORKSPACE_ID",
                              "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                              "required": true,
                              "label": "Secret ID (Read-Only)"
                            },
                            {
                              "name": "stream",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The Kinesis Stream Name",
                              "required": true,
                              "label": "AWS Kinesis Stream Name"
                            },
                            {
                              "name": "useMessageId",
                              "type": "boolean",
                              "defaultValue": false,
                              "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                              "required": false,
                              "label": "Use Segment Message ID"
                            }
                          ],
                          "status": "PUBLIC",
                          "categories": [
                            "Analytics",
                            "Raw Data"
                          ],
                          "website": "https://aws.amazon.com/kinesis/streams/",
                          "components": [
                            {
                              "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                              "type": "SERVER"
                            }
                          ],
                          "previousNames": [
                            "Amazon Kinesis"
                          ],
                          "supportedMethods": {
                            "track": true,
                            "pageview": true,
                            "identify": true,
                            "group": true,
                            "alias": true
                          },
                          "supportedPlatforms": {
                            "browser": true,
                            "mobile": true,
                            "server": true,
                            "warehouse": false
                          },
                          "supportedFeatures": {
                            "cloudModeInstances": "0",
                            "deviceModeInstances": "0",
                            "replay": true,
                            "browserUnbundling": false,
                            "browserUnbundlingPublic": true
                          },
                          "actions": [],
                          "presets": [],
                          "contacts": [],
                          "partnerOwned": false
                        },
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDestinationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [
                      {
                        "id": "5GFhvtz8fha42Cm4B9E6L8",
                        "enabled": true,
                        "name": "",
                        "settings": {
                          "region": "us-west",
                          "roleAddress": "arn::...",
                          "secretId": "secrettt",
                          "stream": "bla"
                        },
                        "metadata": {
                          "id": "57da359580412f644ff33fb9",
                          "name": "Amazon Kinesis",
                          "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                          "slug": "amazon-kinesis",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                            "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                          },
                          "options": [
                            {
                              "name": "region",
                              "type": "string",
                              "defaultValue": "us-west-2",
                              "description": "The Kinesis Stream's AWS region key",
                              "required": true,
                              "label": "AWS Kinesis Stream Region"
                            },
                            {
                              "name": "roleAddress",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                              "required": true,
                              "label": "Role Address"
                            },
                            {
                              "name": "secretId",
                              "type": "string",
                              "defaultValue": "#SEGMENT_WORKSPACE_ID",
                              "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                              "required": true,
                              "label": "Secret ID (Read-Only)"
                            },
                            {
                              "name": "stream",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The Kinesis Stream Name",
                              "required": true,
                              "label": "AWS Kinesis Stream Name"
                            },
                            {
                              "name": "useMessageId",
                              "type": "boolean",
                              "defaultValue": false,
                              "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                              "required": false,
                              "label": "Use Segment Message ID"
                            }
                          ],
                          "status": "PUBLIC",
                          "categories": [
                            "Analytics",
                            "Raw Data"
                          ],
                          "website": "https://aws.amazon.com/kinesis/streams/",
                          "components": [
                            {
                              "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                              "type": "SERVER"
                            }
                          ],
                          "previousNames": [
                            "Amazon Kinesis"
                          ],
                          "supportedMethods": {
                            "track": true,
                            "pageview": true,
                            "identify": true,
                            "group": true,
                            "alias": true
                          },
                          "supportedPlatforms": {
                            "browser": true,
                            "mobile": true,
                            "server": true,
                            "warehouse": false
                          },
                          "supportedFeatures": {
                            "cloudModeInstances": "0",
                            "deviceModeInstances": "0",
                            "replay": true,
                            "browserUnbundling": false,
                            "browserUnbundlingPublic": true
                          },
                          "actions": [],
                          "presets": [],
                          "contacts": [],
                          "partnerOwned": false
                        },
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDestinationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [
                      {
                        "id": "5GFhvtz8fha42Cm4B9E6L8",
                        "enabled": true,
                        "name": "",
                        "settings": {
                          "region": "us-west",
                          "roleAddress": "arn::...",
                          "secretId": "secrettt",
                          "stream": "bla"
                        },
                        "metadata": {
                          "id": "57da359580412f644ff33fb9",
                          "name": "Amazon Kinesis",
                          "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                          "slug": "amazon-kinesis",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                            "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                          },
                          "options": [
                            {
                              "name": "region",
                              "type": "string",
                              "defaultValue": "us-west-2",
                              "description": "The Kinesis Stream's AWS region key",
                              "required": true,
                              "label": "AWS Kinesis Stream Region"
                            },
                            {
                              "name": "roleAddress",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                              "required": true,
                              "label": "Role Address"
                            },
                            {
                              "name": "secretId",
                              "type": "string",
                              "defaultValue": "#SEGMENT_WORKSPACE_ID",
                              "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                              "required": true,
                              "label": "Secret ID (Read-Only)"
                            },
                            {
                              "name": "stream",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The Kinesis Stream Name",
                              "required": true,
                              "label": "AWS Kinesis Stream Name"
                            },
                            {
                              "name": "useMessageId",
                              "type": "boolean",
                              "defaultValue": false,
                              "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                              "required": false,
                              "label": "Use Segment Message ID"
                            }
                          ],
                          "status": "PUBLIC",
                          "categories": [
                            "Analytics",
                            "Raw Data"
                          ],
                          "website": "https://aws.amazon.com/kinesis/streams/",
                          "components": [
                            {
                              "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                              "type": "SERVER"
                            }
                          ],
                          "previousNames": [
                            "Amazon Kinesis"
                          ],
                          "supportedMethods": {
                            "track": true,
                            "pageview": true,
                            "identify": true,
                            "group": true,
                            "alias": true
                          },
                          "supportedPlatforms": {
                            "browser": true,
                            "mobile": true,
                            "server": true,
                            "warehouse": false
                          },
                          "supportedFeatures": {
                            "cloudModeInstances": "0",
                            "deviceModeInstances": "0",
                            "replay": true,
                            "browserUnbundling": false,
                            "browserUnbundlingPublic": true
                          },
                          "actions": [],
                          "presets": [],
                          "contacts": [],
                          "partnerOwned": false
                        },
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.listDestinations({ count: 1 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    System.out.println(api.listDestinations(PaginationInput.fromJson(\"{\\\"count\\\":1}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/destinations/{destinationId}/subscriptions": {
      "post": {
        "summary": "Create Destination Subscription",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a new Destination subscription.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createDestinationSubscription",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationSubscriptionAlphaInput"
              },
              "example": {
                "name": "Example Subscription",
                "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                "trigger": "type = \"track\"",
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationSubscriptionAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationSubscription": {
                      "id": "fwY8GVfEbHDnpx5yFWCKZG",
                      "name": "Example Subscription",
                      "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                      "actionSlug": "someActionSlug",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "modelId": "",
                      "enabled": false,
                      "trigger": "type = \"track\"",
                      "settings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinations.createDestinationSubscription('fP7qoQw2HTWt9WdMr718gn', {\n      name: 'Example Subscription',\n      actionId: 'jiMz7MfHNeHmUckzRnUGkU',\n      trigger: 'type = \"track\"',\n      enabled: false,\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    CreateDestinationSubscriptionAlphaInput input = CreateDestinationSubscriptionAlphaInput.fromJson(\n      \"{\\\"name\\\":\\\"Example Subscription\\\",\\\"actionId\\\":\\\"jiMz7MfHNeHmUckzRnUGkU\\\",\\\"trigger\\\":\\\"type = \\\\\\\"track\\\\\\\"\\\",\\\"enabled\\\":false}\"\n    );\n    System.out.println(api.createDestinationSubscription(\"fP7qoQw2HTWt9WdMr718gn\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Subscriptions from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination options.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 3
            }
          }
        ],
        "deprecated": false,
        "description": "Lists subscriptions for a Destination.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listSubscriptionsFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSubscriptionsFromDestinationAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    },
                    "subscriptions": [
                      {
                        "id": "eoeXaMeAYcB2XvEApJDrQs",
                        "name": "Test Subscription",
                        "actionId": "uD9jEQ4DxJZzhzVqppM7UD",
                        "actionSlug": "Public API Slug",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "modelId": "",
                        "enabled": true,
                        "trigger": "type = \"track\"",
                        "settings": {}
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.listSubscriptionsFromDestination('fP7qoQw2HTWt9WdMr718gn', { count: 3 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    System.out.println(api.listSubscriptionsFromDestination(\"fP7qoQw2HTWt9WdMr718gn\", PaginationInput.fromJson(\"{\\\"count\\\":3}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}/edge-functions": {
      "post": {
        "summary": "Create Edge Functions",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Create EdgeFunctions for your Source given a valid upload URL for an Edge Functions bundle.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createEdgeFunctions",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEdgeFunctionsAlphaInput"
              },
              "example": {
                "uploadURL": "<upload_url>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateEdgeFunctionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "edgeFunctions": {
                      "id": "18de22b4-5d40-4253-8c1e-4631e302ccb2",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "downloadURL": "https://cdn.edgefn.segment.build/qQEHquLrjRDN9j1ByrChyn/18de22b4-5d40-4253-8c1e-4631e302ccb2.js",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "version": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Edge Functions"
        ],
        "tags": [
          "Edge Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.edgeFunctions.createEdgeFunctions('qQEHquLrjRDN9j1ByrChyn', { uploadURL: '<upload_url>' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    EdgeFunctionsApi api = new EdgeFunctionsApi();\n    CreateEdgeFunctionsAlphaInput input = CreateEdgeFunctionsAlphaInput.fromJson(\"{\\\"uploadURL\\\":\\\"<upload_url>\\\"}\");\n    System.out.println(api.createEdgeFunctions(\"qQEHquLrjRDN9j1ByrChyn\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/destination/{destinationId}/filters": {
      "post": {
        "summary": "Create Filter for Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a filter in a Destination.\n\n\n\n• When called, this endpoint may generate the `Destination Filter Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createFilterForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "enabled": true
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "enabled": true
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "2DrXiU3g89bTXEKys3dhDAYAlIk",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "type = \"identify\"",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Filter \"Identify\" events",
                      "description": "Drop Identify tracking from this destination",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "2DrXiU3g89bTXEKys3dhDAYAlIk",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "type = \"identify\"",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Filter \"Identify\" events",
                      "description": "Drop Identify tracking from this destination",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "2DrXi853HCPQrDXWdqxfi5tS1GX",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "type = \"identify\"",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Filter \"Identify\" events",
                      "description": "Drop Identify tracking from this destination",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "2DrXhZUwilV5MHOwaOTg9NEhGNl",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "type = \"identify\"",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Filter \"Identify\" events",
                      "description": "Drop Identify tracking from this destination",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinationFilters.createFilterForDestination('fP7qoQw2HTWt9WdMr718gn', {\n      sourceId: 'rh5BDZp6QDHvXFCkibm1pR',\n      title: 'Filter \"Identify\" events',\n      description: 'Drop Identify tracking from this destination',\n      if: 'type = \"identify\"',\n      actions: [{ type: 'DROP' }],\n      enabled: true,\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationFiltersApi api = new DestinationFiltersApi();\n    CreateFilterForDestinationV1Input input = CreateFilterForDestinationV1Input.fromJson(\n      \"{\\\"sourceId\\\":\\\"rh5BDZp6QDHvXFCkibm1pR\\\",\\\"title\\\":\\\"Filter \\\\\\\"Identify\\\\\\\" events\\\",\\\"description\\\":\\\"Drop Identify tracking from this destination\\\",\\\"if\\\":\\\"type = \\\\\\\"identify\\\\\\\"\\\",\\\"actions\\\":[{\\\"type\\\":\\\"DROP\\\"}],\\\"enabled\\\":true}\"\n    );\n    System.out.println(api.createFilterForDestination(\"fP7qoQw2HTWt9WdMr718gn\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Filters from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 3
            }
          }
        ],
        "deprecated": false,
        "description": "Lists filters for a Destination.",
        "operationId": "listFiltersFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "xx6AySGeFExzdv2Gw2EuhV",
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "if": "!(type = \"track\")",
                        "actions": [
                          {
                            "type": "DROP"
                          }
                        ],
                        "title": "Allow Track",
                        "description": "Allows track calls through to the destination.",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "xx6AySGeFExzdv2Gw2EuhV",
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "if": "!(type = \"track\")",
                        "actions": [
                          {
                            "type": "DROP"
                          }
                        ],
                        "title": "Allow Track",
                        "description": "Allows track calls through to the destination.",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "xx6AySGeFExzdv2Gw2EuhV",
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "if": "!(type = \"track\")",
                        "actions": [
                          {
                            "type": "DROP"
                          }
                        ],
                        "title": "Allow Track",
                        "description": "Allows track calls through to the destination.",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "xx6AySGeFExzdv2Gw2EuhV",
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "if": "event = \"Order Completed\"",
                        "actions": [
                          {
                            "type": "DROP_PROPERTIES",
                            "fields": {
                              "properties": [
                                "userId",
                                "secretValue"
                              ]
                            }
                          }
                        ],
                        "title": "Order Completed",
                        "description": "This filter probably does nothing",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinationFilters.listFiltersFromDestination('fP7qoQw2HTWt9WdMr718gn', { count: 3 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationFiltersApi api = new DestinationFiltersApi();\n    System.out.println(api.listFiltersFromDestination(\"fP7qoQw2HTWt9WdMr718gn\", PaginationInput.fromJson(\"{\\\"count\\\":3}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/functions": {
      "post": {
        "summary": "Create Function",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createFunction",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.createFunction({\n      code: '// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions',\n      settings: [\n        { name: 'apiKey', label: 'api key', type: 'STRING', description: 'api key', required: false, sensitive: false },\n        { name: 'mySecret', label: 'my secret key', type: 'STRING', description: 'secret key', required: false, sensitive: true },\n      ],\n      displayName: 'PAPI Source Function',\n      resourceType: 'SOURCE',\n      logoUrl: 'https://placekitten.com/200/139',\n      description: 'My source function',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    CreateFunctionV1Input input = CreateFunctionV1Input.fromJson(\n      \"{\\\"code\\\":\\\"// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions\\\",\\\"settings\\\":[{\\\"name\\\":\\\"apiKey\\\",\\\"label\\\":\\\"api key\\\",\\\"type\\\":\\\"STRING\\\",\\\"description\\\":\\\"api key\\\",\\\"required\\\":false,\\\"sensitive\\\":false},{\\\"name\\\":\\\"mySecret\\\",\\\"label\\\":\\\"my secret key\\\",\\\"type\\\":\\\"STRING\\\",\\\"description\\\":\\\"secret key\\\",\\\"required\\\":false,\\\"sensitive\\\":true}],\\\"displayName\\\":\\\"PAPI Source Function\\\",\\\"resourceType\\\":\\\"SOURCE\\\",\\\"logoUrl\\\":\\\"https://placekitten.com/200/139\\\",\\\"description\\\":\\\"My source function\\\"}\"\n    );\n    System.out.println(api.createFunction(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Functions",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "resourceType",
            "style": "deepObject",
            "description": "The Function type.\n\nConfig API note: equal to `type`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The Function type.\n\nConfig API note: equal to `type`.",
              "enum": [
                "DESTINATION",
                "INSERT_DESTINATION",
                "SOURCE"
              ],
              "type": "string",
              "title": "resourceType"
            },
            "example": "SOURCE"
          }
        ],
        "deprecated": false,
        "description": "Lists all Functions in a Workspace.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functions": [
                      {
                        "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                        "displayName": "PAPI Source Function",
                        "description": "My source function",
                        "logoUrl": "https://placekitten.com/200/139",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                        "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                        "resourceType": "SOURCE"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functions": [
                      {
                        "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                        "displayName": "PAPI Source Function",
                        "description": "My source function",
                        "logoUrl": "https://placekitten.com/200/139",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                        "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                        "resourceType": "SOURCE"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functions": [
                      {
                        "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                        "displayName": "PAPI Source Function",
                        "description": "My source function",
                        "logoUrl": "https://placekitten.com/200/139",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                        "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                        "resourceType": "SOURCE"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functions": [
                      {
                        "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                        "displayName": "PAPI Source Function",
                        "description": "My source function",
                        "logoUrl": "https://placekitten.com/200/139",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                        "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                        "resourceType": "SOURCE"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.listFunctions({ count: 10 }, 'SOURCE'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    System.out.println(api.listFunctions(PaginationInput.fromJson(\"{\\\"count\\\":10}\"), \"SOURCE\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/functions/{functionId}/deploy": {
      "post": {
        "summary": "Create Function Deployment",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfn_rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deploys a Function. Only applicable to Source Function instances.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createFunctionDeployment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functionDeployment": {
                      "status": "SUCCESS"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functionDeployment": {
                      "status": "SUCCESS"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functionDeployment": {
                      "status": "SUCCESS"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functionDeployment": {
                      "status": "SUCCESS"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.createFunctionDeployment('sfn_rh5BDZp6QDHvXFCkibm1pR'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    System.out.println(api.createFunctionDeployment(\"sfn_rh5BDZp6QDHvXFCkibm1pR\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/insert-function-instances": {
      "post": {
        "summary": "Create Insert Function Instance",
        "parameters": [],
        "deprecated": false,
        "description": "Creates an insert Function instance connected to the given Destination.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createInsertFunctionInstance",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInsertFunctionInstanceAlphaInput"
              },
              "example": {
                "functionId": "76365637324e715a67535831",
                "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                "name": "Example insert function instance",
                "settings": {
                  "apiKey": "XYZ"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInsertFunctionInstanceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "insertFunctionInstance": {
                      "id": "64edfa55c43ed978ee4f2b7c",
                      "name": "Example insert function instance",
                      "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                      "classId": "76365637324e715a67535831",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "settings": {
                        "apiKey": "XYZ"
                      },
                      "encryptedSettings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.createInsertFunctionInstance({\n      functionId: '76365637324e715a67535831',\n      integrationId: 'fP7qoQw2HTWt9WdMr718gn',\n      name: 'Example insert function instance',\n      settings: { apiKey: 'XYZ' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    CreateInsertFunctionInstanceAlphaInput input = CreateInsertFunctionInstanceAlphaInput.fromJson(\n      \"{\\\"functionId\\\":\\\"76365637324e715a67535831\\\",\\\"integrationId\\\":\\\"fP7qoQw2HTWt9WdMr718gn\\\",\\\"name\\\":\\\"Example insert function instance\\\",\\\"settings\\\":{\\\"apiKey\\\":\\\"XYZ\\\"}}\"\n    );\n    System.out.println(api.createInsertFunctionInstance(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Insert Function Instances",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "functionId",
            "style": "deepObject",
            "description": "The insert Function class id to lookup.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The insert Function class id to lookup.",
              "type": "string",
              "title": "functionId"
            },
            "example": "76365637324e715a67535831"
          }
        ],
        "deprecated": false,
        "description": "Lists all insert Function instances connected to the given insert Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listInsertFunctionInstances",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInsertFunctionInstancesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "instances": [
                      {
                        "id": "64edfa56c43ed978ee4f2b7d",
                        "name": "Example insert function instance",
                        "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                        "classId": "76365637324e715a67535831",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "settings": {
                          "apiKey": "XYZ"
                        },
                        "encryptedSettings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.listInsertFunctionInstances({ count: 10 }, '76365637324e715a67535831'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    System.out.println(api.listInsertFunctionInstances(PaginationInput.fromJson(\"{\\\"count\\\":10}\"), \"76365637324e715a67535831\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/invites": {
      "post": {
        "summary": "Create Invites",
        "parameters": [],
        "deprecated": false,
        "description": "Invites a list of users to join a Workspace.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Non-Segment User Invited to Workspace\n* Policy Created\n* New Segment User Invited to Workspace\n\nConfig API omitted fields:\n- `parent`\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createInvites",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitesV1Input"
              },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitesV1Input"
              },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitesV1Input"
              },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [
                      "foo@example.com"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamUsers.createInvites({\n      invites: [\n        {\n          email: 'foo@example.com',\n          permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n        },\n      ],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    CreateInvitesV1Input input = CreateInvitesV1Input.fromJson(\n      \"{\\\"invites\\\":[{\\\"email\\\":\\\"foo@example.com\\\",\\\"permissions\\\":[{\\\"roleId\\\":\\\"1WDUuRLxv84rrfCNUwvkrRtkxnS\\\",\\\"resources\\\":[{\\\"id\\\":\\\"9aQ1Lj62S4bomZKLF4DPqW\\\",\\\"type\\\":\\\"WORKSPACE\\\"}]}]}]}\"\n    );\n    System.out.println(api.createInvites(input).getData());\n  }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete Invites",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "emails",
            "style": "deepObject",
            "description": "The list of emails to delete invites for.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The list of emails to delete invites for.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "emails"
            },
            "example": [
              "foo@example.com"
            ]
          }
        ],
        "deprecated": false,
        "description": "Removes a list of invitations to join a Workspace.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Invite Deleted\n* Group Memberships Deleted\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "deleteInvites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.deleteInvites(['foo@example.com']))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    System.out.println(api.deleteInvites(Arrays.asList(\"foo@example.com\")).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Invites",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of invitations to join a Workspace.\n\nConfig API omitted fields:\n- `parent`\n",
        "operationId": "listInvites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    },
                    "invites": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    },
                    "invites": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    },
                    "invites": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    },
                    "invites": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.listInvites({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    System.out.println(api.listInvites(PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/labels": {
      "post": {
        "summary": "Create Label",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new label.\n\n\n\n• When called, this endpoint may generate the `Label Created` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createLabel",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelV1Input"
              },
              "example": {
                "label": {
                  "key": "environment",
                  "value": "yolo",
                  "description": "an environment for courageous devs"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelV1Input"
              },
              "example": {
                "label": {
                  "key": "environment",
                  "value": "yolo",
                  "description": "an environment for courageous devs"
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelV1Input"
              },
              "example": {
                "label": {
                  "key": "environment",
                  "value": "yolo",
                  "description": "an environment for courageous devs"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "label": {
                      "key": "environment",
                      "value": "yolo",
                      "description": "an environment for courageous devs"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "label": {
                      "key": "environment",
                      "value": "yolo",
                      "description": "an environment for courageous devs"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "label": {
                      "key": "environment",
                      "value": "yolo",
                      "description": "an environment for courageous devs"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "label": {
                      "key": "environment",
                      "value": "yolo",
                      "description": "an environment for courageous devs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "Labels"
        ],
        "tags": [
          "Labels"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.labels.createLabel({ label: { key: 'environment', value: 'yolo', description: 'an environment for courageous devs' } })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    LabelsApi api = new LabelsApi();\n    CreateLabelV1Input input = CreateLabelV1Input.fromJson(\n      \"{\\\"label\\\":{\\\"key\\\":\\\"environment\\\",\\\"value\\\":\\\"yolo\\\",\\\"description\\\":\\\"an environment for courageous devs\\\"}}\"\n    );\n    System.out.println(api.createLabel(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Labels",
        "parameters": [],
        "deprecated": false,
        "description": "Returns a list of all available labels.",
        "operationId": "listLabels",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListLabelsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "dev",
                        "description": ""
                      },
                      {
                        "key": "environment",
                        "value": "prod",
                        "description": ""
                      },
                      {
                        "key": "type",
                        "value": "web",
                        "description": "labels source as web"
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListLabelsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "dev",
                        "description": ""
                      },
                      {
                        "key": "environment",
                        "value": "prod",
                        "description": ""
                      },
                      {
                        "key": "type",
                        "value": "web",
                        "description": "labels source as web"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListLabelsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "dev",
                        "description": ""
                      },
                      {
                        "key": "environment",
                        "value": "prod",
                        "description": ""
                      },
                      {
                        "key": "type",
                        "value": "web",
                        "description": "labels source as web"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListLabelsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "dev",
                        "description": ""
                      },
                      {
                        "key": "environment",
                        "value": "prod",
                        "description": ""
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "Labels"
        ],
        "tags": [
          "Labels"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.labels.listLabels())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    LabelsApi api = new LabelsApi();\n    System.out.println(api.listLabels().getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/profiles-warehouses": {
      "post": {
        "summary": "Create Profiles Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a new Profiles Warehouse.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createProfilesWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfilesWarehouseAlphaInput"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {},
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateProfilesWarehouseAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "profilesWarehouse": {
                      "id": "eSrwSWY9u6JisZvHhZeK8o",
                      "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "workspaceId": "wk_123",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.profilesSync.createProfilesWarehouse('9aQ1Lj62S4bomZKLF4DPqW', { metadataId: 'CCIl4HLQPz', settings: {}, enabled: true })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ProfilesSyncApi api = new ProfilesSyncApi();\n    CreateProfilesWarehouseAlphaInput input = CreateProfilesWarehouseAlphaInput.fromJson(\n      \"{\\\"metadataId\\\":\\\"CCIl4HLQPz\\\",\\\"settings\\\":{},\\\"enabled\\\":true}\"\n    );\n    System.out.println(api.createProfilesWarehouse(\"9aQ1Lj62S4bomZKLF4DPqW\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Profiles Warehouse in Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all Profile Warehouses for a given space id.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Retrieved` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "listProfilesWarehouseInSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListProfilesWarehouseInSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "profilesWarehouses": [
                      {
                        "id": "eSrwSWY9u6JisZvHhZeK8o",
                        "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "workspaceId": "wk_123",
                        "enabled": true,
                        "metadata": {
                          "id": "CCIl4HLQPz",
                          "slug": "snowflake",
                          "name": "Snowflake",
                          "description": "Data warehouse built for the cloud",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                            "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                            "alt": ""
                          },
                          "options": []
                        },
                        "settings": {
                          "name": "Snowflake"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.profilesSync.listProfilesWarehouseInSpace('9aQ1Lj62S4bomZKLF4DPqW'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ProfilesSyncApi api = new ProfilesSyncApi();\n    System.out.println(api.listProfilesWarehouseInSpace(\"9aQ1Lj62S4bomZKLF4DPqW\", null).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/reverse-etl-models": {
      "post": {
        "summary": "Create Reverse Etl Model",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Reverse ETL Model.\n\n      \n\n• When called, this endpoint may generate the `Model Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createReverseEtlModel",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReverseEtlModelInput"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "name": "Model 1",
                "description": "This model is very useful.",
                "enabled": true,
                "query": "SELECT 'user_1' AS id",
                "queryIdentifierColumn": "id",
                "scheduleStrategy": "MANUAL",
                "scheduleConfig": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateReverseEtlModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reverseEtlModel": {
                      "id": "qyH51KjvLDyAESPKx7r4mo",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "name": "Model 1",
                      "description": "This model is very useful.",
                      "enabled": true,
                      "query": "SELECT 'user_1' AS id",
                      "queryIdentifierColumn": "id",
                      "scheduleStrategy": "MANUAL",
                      "scheduleConfig": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.reverseEtl.createReverseEtlModel({\n      sourceId: 'qQEHquLrjRDN9j1ByrChyn',\n      name: 'Model 1',\n      description: 'This model is very useful.',\n      enabled: true,\n      query: \"SELECT 'user_1' AS id\",\n      queryIdentifierColumn: 'id',\n      scheduleStrategy: 'MANUAL',\n      scheduleConfig: {},\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ReverseEtlApi api = new ReverseEtlApi();\n    CreateReverseEtlModelInput input = CreateReverseEtlModelInput.fromJson(\n      \"{\\\"sourceId\\\":\\\"qQEHquLrjRDN9j1ByrChyn\\\",\\\"name\\\":\\\"Model 1\\\",\\\"description\\\":\\\"This model is very useful.\\\",\\\"enabled\\\":true,\\\"query\\\":\\\"SELECT 'user_1' AS id\\\",\\\"queryIdentifierColumn\\\":\\\"id\\\",\\\"scheduleStrategy\\\":\\\"MANUAL\\\",\\\"scheduleConfig\\\":{}}\"\n    );\n    System.out.println(api.createReverseEtlModel(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Reverse Etl Models",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Reverse ETL Models.",
        "operationId": "listReverseEtlModels",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListReverseEtlModelsOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "models": [
                      {
                        "id": "9jkvh31ncg66pbYso3JZZ7",
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "name": "Model 1",
                        "description": "This model is very useful.",
                        "enabled": true,
                        "query": "SELECT 'user_1' AS id",
                        "queryIdentifierColumn": "id",
                        "scheduleStrategy": "MANUAL",
                        "scheduleConfig": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.listReverseEtlModels({ count: 10 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ReverseEtlApi api = new ReverseEtlApi();\n    System.out.println(api.listReverseEtlModels(PaginationInput.fromJson(\"{\\\"count\\\":10}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources": {
      "post": {
        "summary": "Create Source",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Source.\n\n\n\n• When called, this endpoint may generate the `Source Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceV1Input"
              },
              "example": {
                "slug": "my-test-source-rhpd18",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceV1Input"
              },
              "example": {
                "slug": "my-test-source-n2m2fc",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceAlphaInput"
              },
              "example": {
                "slug": "my-test-source-cxt5g8",
                "name": "My Source",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "pis7LXRkC99rXcsbinaow2",
                      "slug": "my-test-source-rhpd18",
                      "name": "my-test-source-rhpd18",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "BSLuRtPp59gcLn8VYHrCjGY5rMEuCBAU"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "pis7LXRkC99rXcsbinaow2",
                      "slug": "my-test-source-rhpd18",
                      "name": "my-test-source-rhpd18",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "BSLuRtPp59gcLn8VYHrCjGY5rMEuCBAU"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "raZPZFgAyreAKcFoumxFvr",
                      "slug": "my-test-source-n2m2fc",
                      "name": "my-test-source-n2m2fc",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "fibdSOFtzwlqNQVAdZMDkpWRZN2ZlDbq"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "wv25KW7oyuRWwkSFGqsdre",
                      "slug": "my-test-source-cxt5g8",
                      "name": "My Source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "QqBEE7sg42q82uW8Vrb3aBDk5Q1mNgrC"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.sources.createSource({ slug: 'my-test-source-rhpd18', enabled: true, metadataId: 'IqDTy1TpoU', settings: {} })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    CreateSourceV1Input input = CreateSourceV1Input.fromJson(\n      \"{\\\"slug\\\":\\\"my-test-source-rhpd18\\\",\\\"enabled\\\":true,\\\"metadataId\\\":\\\"IqDTy1TpoU\\\",\\\"settings\\\":{}}\"\n    );\n    System.out.println(api.createSource(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Sources",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Sources.",
        "operationId": "listSources",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      },
                      {
                        "id": "rh5BDZp6QDHvXFCkibm1pR",
                        "slug": "web",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "dfL8upyPumumx23SjgwHjs"
                        ],
                        "metadata": {
                          "id": "IqDTy1TpoU",
                          "slug": "javascript",
                          "name": "Javascript",
                          "categories": [
                            "Website"
                          ],
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      },
                      {
                        "id": "rh5BDZp6QDHvXFCkibm1pR",
                        "slug": "web",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "dfL8upyPumumx23SjgwHjs"
                        ],
                        "metadata": {
                          "id": "IqDTy1TpoU",
                          "slug": "javascript",
                          "name": "Javascript",
                          "categories": [
                            "Website"
                          ],
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      },
                      {
                        "id": "rh5BDZp6QDHvXFCkibm1pR",
                        "slug": "web",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "dfL8upyPumumx23SjgwHjs"
                        ],
                        "metadata": {
                          "id": "IqDTy1TpoU",
                          "slug": "javascript",
                          "name": "Javascript",
                          "categories": [
                            "Website"
                          ],
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      },
                      {
                        "id": "rh5BDZp6QDHvXFCkibm1pR",
                        "slug": "web",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "dfL8upyPumumx23SjgwHjs"
                        ],
                        "metadata": {
                          "id": "IqDTy1TpoU",
                          "slug": "javascript",
                          "name": "Javascript",
                          "categories": [
                            "Website"
                          ],
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.listSources({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    System.out.println(api.listSources(PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/regulations/sources/{sourceId}": {
      "post": {
        "summary": "Create Source Regulation",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a Source-scoped regulation.\n\n\n\n• When called, this endpoint may generate the `Source Regulation Created` event in the [audit trail](/tag/Audit-Trail).\n\nConfig API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createSourceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deletionAndSuppression.createSourceRegulation('qQEHquLrjRDN9j1ByrChyn', {\n      regulationType: 'SUPPRESS_ONLY',\n      subjectType: 'USER_ID',\n      subjectIds: ['test_user_id_1'],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();\n    CreateSourceRegulationV1Input input = CreateSourceRegulationV1Input.fromJson(\n      \"{\\\"regulationType\\\":\\\"SUPPRESS_ONLY\\\",\\\"subjectType\\\":\\\"USER_ID\\\",\\\"subjectIds\\\":[\\\"test_user_id_1\\\"]}\"\n    );\n    System.out.println(api.createSourceRegulation(\"qQEHquLrjRDN9j1ByrChyn\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Regulations from Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "status",
            "style": "deepObject",
            "description": "The status on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The status on which to filter returned regulations.",
              "enum": [
                "FAILED",
                "FINISHED",
                "INITIALIZED",
                "INVALID",
                "NOT_SUPPORTED",
                "PARTIAL_SUCCESS",
                "RUNNING"
              ],
              "type": "string",
              "title": "status"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "regulationTypes",
            "style": "deepObject",
            "description": "The regulation types on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The regulation types on which to filter returned regulations.",
              "type": "array",
              "items": {
                "enum": [
                  "DELETE_INTERNAL",
                  "DELETE_ONLY",
                  "SUPPRESS_ONLY",
                  "SUPPRESS_WITH_DELETE",
                  "UNSUPPRESS"
                ],
                "type": "string"
              },
              "title": "regulationTypes"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all Source-scoped regulations.",
        "operationId": "listRegulationsFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "suppressOnly",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "suppressOnly",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "suppressOnly",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "suppressOnly",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.listRegulationsFromSource('qQEHquLrjRDN9j1ByrChyn', { count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();\n    System.out.println(\n      api.listRegulationsFromSource(\"qQEHquLrjRDN9j1ByrChyn\", null, null, PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/tracking-plans": {
      "post": {
        "summary": "Create Tracking Plan",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackingPlanV1Input"
              },
              "example": {
                "name": "New TP",
                "type": "LIVE"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackingPlanV1Input"
              },
              "example": {
                "name": "New TP",
                "type": "LIVE"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackingPlanV1Input"
              },
              "example": {
                "name": "New TP",
                "type": "LIVE"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.createTrackingPlan({ name: 'New TP', type: 'LIVE' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    CreateTrackingPlanV1Input input = CreateTrackingPlanV1Input.fromJson(\"{\\\"name\\\":\\\"New TP\\\",\\\"type\\\":\\\"LIVE\\\"}\");\n    System.out.println(api.createTrackingPlan(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Tracking Plans",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "type",
            "style": "deepObject",
            "description": "Requests Tracking Plans of a certain type. If omitted, lists all types.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Requests Tracking Plans of a certain type. If omitted, lists all types.",
              "enum": [
                "ENGAGE",
                "LIVE",
                "PROPERTY_LIBRARY",
                "RULE_LIBRARY",
                "TEMPLATE"
              ],
              "type": "string",
              "title": "type"
            },
            "example": "LIVE"
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Tracking Plans.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listTrackingPlans",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTrackingPlansV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlans": [
                      {
                        "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                        "name": "New TP",
                        "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                        "slug": "",
                        "description": "",
                        "type": "LIVE",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "createdAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTrackingPlansV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlans": [
                      {
                        "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                        "name": "New TP",
                        "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                        "slug": "",
                        "description": "",
                        "type": "LIVE",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "createdAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTrackingPlansV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlans": [
                      {
                        "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                        "name": "New TP",
                        "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                        "slug": "",
                        "description": "",
                        "type": "LIVE",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "createdAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTrackingPlansV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlans": [
                      {
                        "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                        "name": "New TP",
                        "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                        "slug": "",
                        "description": "",
                        "type": "LIVE",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "createdAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.listTrackingPlans({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    System.out.println(api.listTrackingPlans(\"LIVE\", PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/transformations": {
      "post": {
        "summary": "Create Transformation",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Transformation.\n\n\n\n• When called, this endpoint may generate the `Transformation Created` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createTransformation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransformationV1Input"
              },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  {
                    "oldName": "old-name",
                    "newName": "new-name"
                  },
                  {
                    "oldName": "another-name-old",
                    "newName": "another-name-new"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.some-property",
                      "context.some-property"
                    ],
                    "propertyValue": "some property value"
                  }
                ],
                "if": "event = 'Example Event V1'"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransformationV1Input"
              },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  {
                    "oldName": "old-name",
                    "newName": "new-name"
                  },
                  {
                    "oldName": "another-name-old",
                    "newName": "another-name-new"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.some-property",
                      "context.some-property"
                    ],
                    "propertyValue": "some property value"
                  }
                ],
                "if": "event = 'Example Event Beta'"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransformationV1Input"
              },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  {
                    "oldName": "old-name",
                    "newName": "new-name"
                  },
                  {
                    "oldName": "another-name-old",
                    "newName": "another-name-new"
                  }
                ],
                "if": "event = 'Example Event Alpha'"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "2NhispQ7Fe92M4h69ZO0f0EoNbg",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event V1'",
                      "newEventName": "new-event-name",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-name",
                          "newName": "new-name"
                        },
                        {
                          "oldName": "another-name-old",
                          "newName": "another-name-new"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "context.some-property",
                            "properties.some-property"
                          ],
                          "propertyValue": "some property value"
                        }
                      ],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "2NhispQ7Fe92M4h69ZO0f0EoNbg",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event V1'",
                      "newEventName": "new-event-name",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-name",
                          "newName": "new-name"
                        },
                        {
                          "oldName": "another-name-old",
                          "newName": "another-name-new"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "context.some-property",
                            "properties.some-property"
                          ],
                          "propertyValue": "some property value"
                        }
                      ],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "2Nhir2nRrIQLF7T9vdzjK3e7FfV",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event Beta'",
                      "newEventName": "new-event-name",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-name",
                          "newName": "new-name"
                        },
                        {
                          "oldName": "another-name-old",
                          "newName": "another-name-new"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "context.some-property",
                            "properties.some-property"
                          ],
                          "propertyValue": "some property value"
                        }
                      ],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "2Nhip2En8hJEFX2MFz1cHNefhpK",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event Alpha'",
                      "newEventName": "new-event-name",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-name",
                          "newName": "new-name"
                        },
                        {
                          "oldName": "another-name-old",
                          "newName": "another-name-new"
                        }
                      ],
                      "propertyValueTransformations": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.transformations.createTransformation({\n      name: 'Name of the new transformation',\n      sourceId: 'qQEHquLrjRDN9j1ByrChyn',\n      enabled: true,\n      newEventName: 'new-event-name',\n      propertyRenames: [\n        { oldName: 'old-name', newName: 'new-name' },\n        { oldName: 'another-name-old', newName: 'another-name-new' },\n      ],\n      propertyValueTransformations: [\n        { propertyPaths: ['properties.some-property', 'context.some-property'], propertyValue: 'some property value' },\n      ],\n      if: \"event = 'Example Event V1'\",\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TransformationsApi api = new TransformationsApi();\n    CreateTransformationV1Input input = CreateTransformationV1Input.fromJson(\n      \"{\\\"name\\\":\\\"Name of the new transformation\\\",\\\"sourceId\\\":\\\"qQEHquLrjRDN9j1ByrChyn\\\",\\\"enabled\\\":true,\\\"newEventName\\\":\\\"new-event-name\\\",\\\"propertyRenames\\\":[{\\\"oldName\\\":\\\"old-name\\\",\\\"newName\\\":\\\"new-name\\\"},{\\\"oldName\\\":\\\"another-name-old\\\",\\\"newName\\\":\\\"another-name-new\\\"}],\\\"propertyValueTransformations\\\":[{\\\"propertyPaths\\\":[\\\"properties.some-property\\\",\\\"context.some-property\\\"],\\\"propertyValue\\\":\\\"some property value\\\"}],\\\"if\\\":\\\"event = 'Example Event V1'\\\"}\"\n    );\n    System.out.println(api.createTransformation(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Transformations",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 20
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all Transformations in the Workspace.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listTransformations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTransformationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformations": [
                      {
                        "id": "2Nhip2En8hJEFX2MFz1cHNefhpK",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Alpha'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "2Nhir2nRrIQLF7T9vdzjK3e7FfV",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Beta'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": [
                          {
                            "propertyPaths": [
                              "context.some-property",
                              "properties.some-property"
                            ],
                            "propertyValue": "some property value"
                          }
                        ]
                      },
                      {
                        "id": "c5EmPMhTGmgwoas8YCKXgs",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order cancelled event rename in destination",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "if": "event = 'Order Cancelled'",
                        "newEventName": "order_cancelled",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "ks7SJDAn4XvW4VykJSQVz7",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked event rename",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "newEventName": "user_clicked",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "pHrD51Ds35Zjfka84yXQE6",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "updated-name",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "547610a5db31d978f14a5c4e",
                        "if": "event=\"my-event\"",
                        "newEventName": "my-updated-event",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-property",
                            "newName": "new-property"
                          }
                        ],
                        "propertyValueTransformations": [
                          {
                            "propertyPaths": [
                              "properties.another-property"
                            ],
                            "propertyValue": "another property value"
                          }
                        ]
                      },
                      {
                        "id": "rBoBnPKiAek36M192XJsYQ",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit identify event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "type = 'identify'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Group",
                            "newName": "group"
                          }
                        ],
                        "propertyValueTransformations": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 6
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTransformationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformations": [
                      {
                        "id": "2Nhip2En8hJEFX2MFz1cHNefhpK",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Alpha'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "2Nhir2nRrIQLF7T9vdzjK3e7FfV",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Beta'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": [
                          {
                            "propertyPaths": [
                              "context.some-property",
                              "properties.some-property"
                            ],
                            "propertyValue": "some property value"
                          }
                        ]
                      },
                      {
                        "id": "c5EmPMhTGmgwoas8YCKXgs",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order cancelled event rename in destination",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "if": "event = 'Order Cancelled'",
                        "newEventName": "order_cancelled",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "ks7SJDAn4XvW4VykJSQVz7",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked event rename",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "newEventName": "user_clicked",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "pHrD51Ds35Zjfka84yXQE6",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "updated-name",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "547610a5db31d978f14a5c4e",
                        "if": "event=\"my-event\"",
                        "newEventName": "my-updated-event",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-property",
                            "newName": "new-property"
                          }
                        ],
                        "propertyValueTransformations": [
                          {
                            "propertyPaths": [
                              "properties.another-property"
                            ],
                            "propertyValue": "another property value"
                          }
                        ]
                      },
                      {
                        "id": "rBoBnPKiAek36M192XJsYQ",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit identify event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "type = 'identify'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Group",
                            "newName": "group"
                          }
                        ],
                        "propertyValueTransformations": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 6
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTransformationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformations": [
                      {
                        "id": "2Nhip2En8hJEFX2MFz1cHNefhpK",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Alpha'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "c5EmPMhTGmgwoas8YCKXgs",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order cancelled event rename in destination",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "if": "event = 'Order Cancelled'",
                        "newEventName": "order_cancelled",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "ks7SJDAn4XvW4VykJSQVz7",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked event rename",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "newEventName": "user_clicked",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "pHrD51Ds35Zjfka84yXQE6",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "updated-name",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "547610a5db31d978f14a5c4e",
                        "if": "event=\"my-event\"",
                        "newEventName": "my-updated-event",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-property",
                            "newName": "new-property"
                          }
                        ],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "rBoBnPKiAek36M192XJsYQ",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit identify event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "type = 'identify'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Group",
                            "newName": "group"
                          }
                        ],
                        "propertyValueTransformations": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 5
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTransformationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformations": [
                      {
                        "id": "c5EmPMhTGmgwoas8YCKXgs",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order cancelled event rename in destination",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "if": "event = 'Order Cancelled'",
                        "newEventName": "order_cancelled",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "ks7SJDAn4XvW4VykJSQVz7",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked event rename",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "newEventName": "user_clicked",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "pHrD51Ds35Zjfka84yXQE6",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit track event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Category",
                            "newName": "category"
                          }
                        ],
                        "propertyValueTransformations": []
                      },
                      {
                        "id": "rBoBnPKiAek36M192XJsYQ",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit identify event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "type = 'identify'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Group",
                            "newName": "group"
                          }
                        ],
                        "propertyValueTransformations": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 4
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.transformations.listTransformations({ count: 20 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TransformationsApi api = new TransformationsApi();\n    System.out.println(api.listTransformations(PaginationInput.fromJson(\"{\\\"count\\\":20}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/groups": {
      "post": {
        "summary": "Create User Group",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a user group.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* User Group Created\n* Policy Created\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupV1Input"
              },
              "example": {
                "name": "New User Group GS1qjmdtG9"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupV1Input"
              },
              "example": {
                "name": "New User Group QOMctw-IG8"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupV1Input"
              },
              "example": {
                "name": "New User Group OxSDYvhu1u"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "2NhjFb8VTqOsvVh3uQFHv3TTRsQ",
                      "name": "New User Group GS1qjmdtG9",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "2NhjFb8VTqOsvVh3uQFHv3TTRsQ",
                      "name": "New User Group GS1qjmdtG9",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "2NhjC5cICmEABmrd8FrhwP11yuT",
                      "name": "New User Group QOMctw-IG8",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "2Nhj2REiH2LjLF0WjvunNcxaErY",
                      "name": "New User Group OxSDYvhu1u",
                      "memberCount": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.createUserGroup({ name: 'New User Group GS1qjmdtG9' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    CreateUserGroupV1Input input = CreateUserGroupV1Input.fromJson(\"{\\\"name\\\":\\\"New User Group GS1qjmdtG9\\\"}\");\n    System.out.println(api.createUserGroup(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List User Groups",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination for user groups.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns all user groups.",
        "operationId": "listUserGroups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "PAPI Example Group",
                        "memberCount": 0,
                        "permissions": [
                          {
                            "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                            "roleName": "Workspace Owner",
                            "resources": [
                              {
                                "id": "9aQ1Lj62S4bomZKLF4DPqW",
                                "type": "WORKSPACE",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "PAPI Example Group",
                        "memberCount": 0,
                        "permissions": [
                          {
                            "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                            "roleName": "Workspace Owner",
                            "resources": [
                              {
                                "id": "9aQ1Lj62S4bomZKLF4DPqW",
                                "type": "WORKSPACE",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "PAPI Example Group",
                        "memberCount": 0,
                        "permissions": [
                          {
                            "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                            "roleName": "Workspace Owner",
                            "resources": [
                              {
                                "id": "9aQ1Lj62S4bomZKLF4DPqW",
                                "type": "WORKSPACE",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "Public API Group",
                        "memberCount": 1,
                        "permissions": [
                          {
                            "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                            "roleName": "Workspace Owner",
                            "resources": [
                              {
                                "id": "9aQ1Lj62S4bomZKLF4DPqW",
                                "type": "WORKSPACE",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.listUserGroups({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    System.out.println(api.listUserGroups(PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/validation": {
      "post": {
        "summary": "Create Validation in Warehouse",
        "parameters": [],
        "deprecated": false,
        "description": "Validates input settings against a Warehouse.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Settings Validation` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createValidationInWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValidationInWarehouseV1Input"
              },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValidationInWarehouseV1Input"
              },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValidationInWarehouseV1Input"
              },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.warehouses.createValidationInWarehouse({\n      metadataId: '55d3d3aea3c',\n      settings: { hostname: 'address.us-west-2.redshift.amazonaws.com', port: '5439', database: 'db', username: 'user', password: 'test' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    CreateValidationInWarehouseV1Input input = CreateValidationInWarehouseV1Input.fromJson(\n      \"{\\\"metadataId\\\":\\\"55d3d3aea3c\\\",\\\"settings\\\":{\\\"hostname\\\":\\\"address.us-west-2.redshift.amazonaws.com\\\",\\\"port\\\":\\\"5439\\\",\\\"database\\\":\\\"db\\\",\\\"username\\\":\\\"user\\\",\\\"password\\\":\\\"test\\\"}}\"\n    );\n    System.out.println(api.createValidationInWarehouse(input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses": {
      "post": {
        "summary": "Create Warehouse",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Warehouse.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseV1Input"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {}
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseV1Input"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {}
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseV1Input"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "ssGWSQt9NEMzLdsGVNdy8v",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "ssGWSQt9NEMzLdsGVNdy8v",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "2jueArTfpDgKeV4UkFj7fh",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "vFSfSopUC8Um1zVZxrZ3YH",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.createWarehouse({ metadataId: 'CCIl4HLQPz', settings: {} }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    CreateWarehouseV1Input input = CreateWarehouseV1Input.fromJson(\"{\\\"metadataId\\\":\\\"CCIl4HLQPz\\\",\\\"settings\\\":{}}\");\n    System.out.println(api.createWarehouse(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Warehouses",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 3
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Warehouses.",
        "operationId": "listWarehouses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWarehousesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWarehousesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWarehousesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWarehousesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.listWarehouses({ count: 3 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    System.out.println(api.listWarehouses(PaginationInput.fromJson(\"{\\\"count\\\":3}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/regulations": {
      "post": {
        "summary": "Create Workspace Regulation",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a Workspace-scoped regulation.\n\n\n\n• When called, this endpoint may generate the `Workspace Regulation Created` event in the [audit trail](/tag/Audit-Trail).\n\nConfig API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createWorkspaceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deletionAndSuppression.createWorkspaceRegulation({\n      regulationType: 'SUPPRESS_ONLY',\n      subjectType: 'USER_ID',\n      subjectIds: ['test_user_id_1'],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();\n    CreateWorkspaceRegulationV1Input input = CreateWorkspaceRegulationV1Input.fromJson(\n      \"{\\\"regulationType\\\":\\\"SUPPRESS_ONLY\\\",\\\"subjectType\\\":\\\"USER_ID\\\",\\\"subjectIds\\\":[\\\"test_user_id_1\\\"]}\"\n    );\n    System.out.println(api.createWorkspaceRegulation(input).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Workspace Regulations",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "status",
            "style": "deepObject",
            "description": "The status on which to filter the returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The status on which to filter the returned regulations.",
              "enum": [
                "FAILED",
                "FINISHED",
                "INITIALIZED",
                "INVALID",
                "NOT_SUPPORTED",
                "PARTIAL_SUCCESS",
                "RUNNING"
              ],
              "type": "string",
              "title": "status"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "regulationTypes",
            "style": "deepObject",
            "description": "The regulation types on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The regulation types on which to filter returned regulations.",
              "type": "array",
              "items": {
                "enum": [
                  "DELETE_INTERNAL",
                  "DELETE_ONLY",
                  "SUPPRESS_ONLY",
                  "SUPPRESS_WITH_DELETE",
                  "UNSUPPRESS"
                ],
                "type": "string"
              },
              "title": "regulationTypes"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 5
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all Workspace-scoped regulations.",
        "operationId": "listWorkspaceRegulations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "suppressOnly",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "suppressOnly",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "suppressOnly",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "suppressOnly",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.listWorkspaceRegulations({ count: 5 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();\n    System.out.println(api.listWorkspaceRegulations(null, null, PaginationInput.fromJson(\"{\\\"count\\\":5}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/destinations/{destinationId}": {
      "delete": {
        "summary": "Delete Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "6424a4a5b03b3d8fe288f000",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Destination.\n\n\n\n• When called, this endpoint may generate the `Integration Deleted` event in the [audit trail](/tag/Audit-Trail).\n\nConfig API omitted fields:\n- `catalogId`\n      ",
        "operationId": "deleteDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.deleteDestination('6424a4a5b03b3d8fe288f000'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    System.out.println(api.deleteDestination(\"6424a4a5b03b3d8fe288f000\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Destination by its id.\n\n      Config API omitted fields:\n- `catalogId`\n",
        "operationId": "getDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "fP7qoQw2HTWt9WdMr718gn",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "anonymizeIp": false,
                        "classic": false,
                        "contentGroupings": {},
                        "dimensions": {},
                        "domain": "",
                        "doubleClick": false,
                        "enableServerIdentify": false,
                        "enhancedEcommerce": false,
                        "enhancedLinkAttribution": false,
                        "identifyCategory": "",
                        "identifyEventName": "",
                        "ignoredReferrers": [],
                        "includeSearch": false,
                        "metrics": {},
                        "mobileTrackingId": "123",
                        "nameTracker": false,
                        "nonInteraction": false,
                        "optimize": "",
                        "preferAnonymousId": false,
                        "protocolMappings": {},
                        "reportUncaughtExceptions": false,
                        "resetCustomDimensionsOnPage": [],
                        "sampleRate": 100,
                        "sendUserId": false,
                        "serversideClassic": false,
                        "serversideTrackingId": "123",
                        "setAllMappedProps": true,
                        "siteSpeedSampleRate": 1,
                        "topLevelContextMapping": false,
                        "trackCategorizedPages": true,
                        "trackNamedPages": true,
                        "trackingId": "123",
                        "typeOverride": false,
                        "useGoogleAmpClientId": false,
                        "userDeletion": ""
                      },
                      "metadata": {
                        "id": "54521fd725e721e32a72eebb",
                        "name": "Google Universal Analytics",
                        "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                        "slug": "google-analytics",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                          "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                        },
                        "options": [
                          {
                            "name": "anonymizeIp",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                            "required": false,
                            "label": "Anonymize IP Addresses"
                          },
                          {
                            "name": "classic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics on Your Site"
                          },
                          {
                            "name": "contentGroupings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                            "required": false,
                            "label": "Content Groupings"
                          },
                          {
                            "name": "dimensions",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Dimensions"
                          },
                          {
                            "name": "domain",
                            "type": "string",
                            "defaultValue": "",
                            "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                            "required": false,
                            "label": "Cookie Domain Name"
                          },
                          {
                            "name": "doubleClick",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Works with both Universal and Classic tracking methods.",
                            "required": false,
                            "label": "Remarketing, Display Ads and Demographic Reports."
                          },
                          {
                            "name": "enableServerIdentify",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                            "required": false,
                            "label": "Enable Server Side Identify"
                          },
                          {
                            "name": "enhancedEcommerce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                            "required": false,
                            "label": "Enable Enhanced Ecommerce"
                          },
                          {
                            "name": "enhancedLinkAttribution",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                            "required": false,
                            "label": "Enable Enhanced Link Attribution"
                          },
                          {
                            "name": "identifyCategory",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                            "required": false,
                            "label": "Server Side Identify Event Category"
                          },
                          {
                            "name": "identifyEventName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                            "required": false,
                            "label": "Server Side Identify Event Action"
                          },
                          {
                            "name": "ignoredReferrers",
                            "type": "strings",
                            "defaultValue": [],
                            "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                            "required": false,
                            "label": "Ignored Referrers"
                          },
                          {
                            "name": "includeSearch",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                            "required": false,
                            "label": "Include the Querystring in Page Views"
                          },
                          {
                            "name": "metrics",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Metrics"
                          },
                          {
                            "name": "mobileTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                            "required": true,
                            "label": "Mobile Tracking ID"
                          },
                          {
                            "name": "nameTracker",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                            "required": false,
                            "label": "Name Tracker"
                          },
                          {
                            "name": "nonInteraction",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                            "required": false,
                            "label": "Add the non-interaction flag to all events"
                          },
                          {
                            "name": "optimize",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                            "required": false,
                            "label": "Optimize Container ID"
                          },
                          {
                            "name": "preferAnonymousId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                          },
                          {
                            "name": "protocolMappings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                            "required": false,
                            "label": "Map Traits or Properties to Measurement Protocol Params"
                          },
                          {
                            "name": "reportUncaughtExceptions",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                            "required": false,
                            "label": "Send Uncaught Exceptions to GA (Mobile)"
                          },
                          {
                            "name": "resetCustomDimensionsOnPage",
                            "type": "array",
                            "defaultValue": [],
                            "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                            "required": false,
                            "label": "Reset dimensions on Page calls"
                          },
                          {
                            "name": "sampleRate",
                            "type": "number",
                            "defaultValue": 100,
                            "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                            "required": false,
                            "label": "Sample Rate"
                          },
                          {
                            "name": "sendUserId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                            "required": false,
                            "label": "Send User-ID to GA"
                          },
                          {
                            "name": "serversideClassic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics for Your Serverside Tracking"
                          },
                          {
                            "name": "serversideTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                            "required": true,
                            "label": "Serverside Tracking ID"
                          },
                          {
                            "name": "setAllMappedProps",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                            "required": false,
                            "label": "Set Custom Dimensions & Metrics to the Page"
                          },
                          {
                            "name": "siteSpeedSampleRate",
                            "type": "number",
                            "defaultValue": 1,
                            "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                            "required": false,
                            "label": "Site Speed Sample Rate"
                          },
                          {
                            "name": "topLevelContextMapping",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                            "required": false,
                            "label": "Track Named Pages"
                          },
                          {
                            "name": "trackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                            "required": true,
                            "label": "Website Tracking ID"
                          },
                          {
                            "name": "typeOverride",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                            "required": false,
                            "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                          },
                          {
                            "name": "useGoogleAmpClientId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                            "required": false,
                            "label": "Use Google AMP Client ID"
                          },
                          {
                            "name": "userDeletion",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                            "required": false,
                            "label": "User Deletion"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://google.com/analytics",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Google Analytics",
                          "Google Universal Analytics"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "fP7qoQw2HTWt9WdMr718gn",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "anonymizeIp": false,
                        "classic": false,
                        "contentGroupings": {},
                        "dimensions": {},
                        "domain": "",
                        "doubleClick": false,
                        "enableServerIdentify": false,
                        "enhancedEcommerce": false,
                        "enhancedLinkAttribution": false,
                        "identifyCategory": "",
                        "identifyEventName": "",
                        "ignoredReferrers": [],
                        "includeSearch": false,
                        "metrics": {},
                        "mobileTrackingId": "123",
                        "nameTracker": false,
                        "nonInteraction": false,
                        "optimize": "",
                        "preferAnonymousId": false,
                        "protocolMappings": {},
                        "reportUncaughtExceptions": false,
                        "resetCustomDimensionsOnPage": [],
                        "sampleRate": 100,
                        "sendUserId": false,
                        "serversideClassic": false,
                        "serversideTrackingId": "123",
                        "setAllMappedProps": true,
                        "siteSpeedSampleRate": 1,
                        "topLevelContextMapping": false,
                        "trackCategorizedPages": true,
                        "trackNamedPages": true,
                        "trackingId": "123",
                        "typeOverride": false,
                        "useGoogleAmpClientId": false,
                        "userDeletion": ""
                      },
                      "metadata": {
                        "id": "54521fd725e721e32a72eebb",
                        "name": "Google Universal Analytics",
                        "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                        "slug": "google-analytics",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                          "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                        },
                        "options": [
                          {
                            "name": "anonymizeIp",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                            "required": false,
                            "label": "Anonymize IP Addresses"
                          },
                          {
                            "name": "classic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics on Your Site"
                          },
                          {
                            "name": "contentGroupings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                            "required": false,
                            "label": "Content Groupings"
                          },
                          {
                            "name": "dimensions",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Dimensions"
                          },
                          {
                            "name": "domain",
                            "type": "string",
                            "defaultValue": "",
                            "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                            "required": false,
                            "label": "Cookie Domain Name"
                          },
                          {
                            "name": "doubleClick",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Works with both Universal and Classic tracking methods.",
                            "required": false,
                            "label": "Remarketing, Display Ads and Demographic Reports."
                          },
                          {
                            "name": "enableServerIdentify",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                            "required": false,
                            "label": "Enable Server Side Identify"
                          },
                          {
                            "name": "enhancedEcommerce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                            "required": false,
                            "label": "Enable Enhanced Ecommerce"
                          },
                          {
                            "name": "enhancedLinkAttribution",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                            "required": false,
                            "label": "Enable Enhanced Link Attribution"
                          },
                          {
                            "name": "identifyCategory",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                            "required": false,
                            "label": "Server Side Identify Event Category"
                          },
                          {
                            "name": "identifyEventName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                            "required": false,
                            "label": "Server Side Identify Event Action"
                          },
                          {
                            "name": "ignoredReferrers",
                            "type": "strings",
                            "defaultValue": [],
                            "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                            "required": false,
                            "label": "Ignored Referrers"
                          },
                          {
                            "name": "includeSearch",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                            "required": false,
                            "label": "Include the Querystring in Page Views"
                          },
                          {
                            "name": "metrics",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Metrics"
                          },
                          {
                            "name": "mobileTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                            "required": true,
                            "label": "Mobile Tracking ID"
                          },
                          {
                            "name": "nameTracker",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                            "required": false,
                            "label": "Name Tracker"
                          },
                          {
                            "name": "nonInteraction",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                            "required": false,
                            "label": "Add the non-interaction flag to all events"
                          },
                          {
                            "name": "optimize",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                            "required": false,
                            "label": "Optimize Container ID"
                          },
                          {
                            "name": "preferAnonymousId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                          },
                          {
                            "name": "protocolMappings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                            "required": false,
                            "label": "Map Traits or Properties to Measurement Protocol Params"
                          },
                          {
                            "name": "reportUncaughtExceptions",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                            "required": false,
                            "label": "Send Uncaught Exceptions to GA (Mobile)"
                          },
                          {
                            "name": "resetCustomDimensionsOnPage",
                            "type": "array",
                            "defaultValue": [],
                            "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                            "required": false,
                            "label": "Reset dimensions on Page calls"
                          },
                          {
                            "name": "sampleRate",
                            "type": "number",
                            "defaultValue": 100,
                            "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                            "required": false,
                            "label": "Sample Rate"
                          },
                          {
                            "name": "sendUserId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                            "required": false,
                            "label": "Send User-ID to GA"
                          },
                          {
                            "name": "serversideClassic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics for Your Serverside Tracking"
                          },
                          {
                            "name": "serversideTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                            "required": true,
                            "label": "Serverside Tracking ID"
                          },
                          {
                            "name": "setAllMappedProps",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                            "required": false,
                            "label": "Set Custom Dimensions & Metrics to the Page"
                          },
                          {
                            "name": "siteSpeedSampleRate",
                            "type": "number",
                            "defaultValue": 1,
                            "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                            "required": false,
                            "label": "Site Speed Sample Rate"
                          },
                          {
                            "name": "topLevelContextMapping",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                            "required": false,
                            "label": "Track Named Pages"
                          },
                          {
                            "name": "trackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                            "required": true,
                            "label": "Website Tracking ID"
                          },
                          {
                            "name": "typeOverride",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                            "required": false,
                            "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                          },
                          {
                            "name": "useGoogleAmpClientId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                            "required": false,
                            "label": "Use Google AMP Client ID"
                          },
                          {
                            "name": "userDeletion",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                            "required": false,
                            "label": "User Deletion"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://google.com/analytics",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Google Analytics",
                          "Google Universal Analytics"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "fP7qoQw2HTWt9WdMr718gn",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "anonymizeIp": false,
                        "classic": false,
                        "contentGroupings": {},
                        "dimensions": {},
                        "domain": "",
                        "doubleClick": false,
                        "enableServerIdentify": false,
                        "enhancedEcommerce": false,
                        "enhancedLinkAttribution": false,
                        "identifyCategory": "",
                        "identifyEventName": "",
                        "ignoredReferrers": [],
                        "includeSearch": false,
                        "metrics": {},
                        "mobileTrackingId": "123",
                        "nameTracker": false,
                        "nonInteraction": false,
                        "optimize": "",
                        "preferAnonymousId": false,
                        "protocolMappings": {},
                        "reportUncaughtExceptions": false,
                        "resetCustomDimensionsOnPage": [],
                        "sampleRate": 100,
                        "sendUserId": false,
                        "serversideClassic": false,
                        "serversideTrackingId": "123",
                        "setAllMappedProps": true,
                        "siteSpeedSampleRate": 1,
                        "topLevelContextMapping": false,
                        "trackCategorizedPages": true,
                        "trackNamedPages": true,
                        "trackingId": "123",
                        "typeOverride": false,
                        "useGoogleAmpClientId": false,
                        "userDeletion": ""
                      },
                      "metadata": {
                        "id": "54521fd725e721e32a72eebb",
                        "name": "Google Universal Analytics",
                        "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                        "slug": "google-analytics",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                          "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                        },
                        "options": [
                          {
                            "name": "anonymizeIp",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                            "required": false,
                            "label": "Anonymize IP Addresses"
                          },
                          {
                            "name": "classic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics on Your Site"
                          },
                          {
                            "name": "contentGroupings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                            "required": false,
                            "label": "Content Groupings"
                          },
                          {
                            "name": "dimensions",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Dimensions"
                          },
                          {
                            "name": "domain",
                            "type": "string",
                            "defaultValue": "",
                            "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                            "required": false,
                            "label": "Cookie Domain Name"
                          },
                          {
                            "name": "doubleClick",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Works with both Universal and Classic tracking methods.",
                            "required": false,
                            "label": "Remarketing, Display Ads and Demographic Reports."
                          },
                          {
                            "name": "enableServerIdentify",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                            "required": false,
                            "label": "Enable Server Side Identify"
                          },
                          {
                            "name": "enhancedEcommerce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                            "required": false,
                            "label": "Enable Enhanced Ecommerce"
                          },
                          {
                            "name": "enhancedLinkAttribution",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                            "required": false,
                            "label": "Enable Enhanced Link Attribution"
                          },
                          {
                            "name": "identifyCategory",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                            "required": false,
                            "label": "Server Side Identify Event Category"
                          },
                          {
                            "name": "identifyEventName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                            "required": false,
                            "label": "Server Side Identify Event Action"
                          },
                          {
                            "name": "ignoredReferrers",
                            "type": "strings",
                            "defaultValue": [],
                            "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                            "required": false,
                            "label": "Ignored Referrers"
                          },
                          {
                            "name": "includeSearch",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                            "required": false,
                            "label": "Include the Querystring in Page Views"
                          },
                          {
                            "name": "metrics",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Metrics"
                          },
                          {
                            "name": "mobileTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                            "required": true,
                            "label": "Mobile Tracking ID"
                          },
                          {
                            "name": "nameTracker",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                            "required": false,
                            "label": "Name Tracker"
                          },
                          {
                            "name": "nonInteraction",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                            "required": false,
                            "label": "Add the non-interaction flag to all events"
                          },
                          {
                            "name": "optimize",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                            "required": false,
                            "label": "Optimize Container ID"
                          },
                          {
                            "name": "preferAnonymousId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                          },
                          {
                            "name": "protocolMappings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                            "required": false,
                            "label": "Map Traits or Properties to Measurement Protocol Params"
                          },
                          {
                            "name": "reportUncaughtExceptions",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                            "required": false,
                            "label": "Send Uncaught Exceptions to GA (Mobile)"
                          },
                          {
                            "name": "resetCustomDimensionsOnPage",
                            "type": "array",
                            "defaultValue": [],
                            "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                            "required": false,
                            "label": "Reset dimensions on Page calls"
                          },
                          {
                            "name": "sampleRate",
                            "type": "number",
                            "defaultValue": 100,
                            "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                            "required": false,
                            "label": "Sample Rate"
                          },
                          {
                            "name": "sendUserId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                            "required": false,
                            "label": "Send User-ID to GA"
                          },
                          {
                            "name": "serversideClassic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics for Your Serverside Tracking"
                          },
                          {
                            "name": "serversideTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                            "required": true,
                            "label": "Serverside Tracking ID"
                          },
                          {
                            "name": "setAllMappedProps",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                            "required": false,
                            "label": "Set Custom Dimensions & Metrics to the Page"
                          },
                          {
                            "name": "siteSpeedSampleRate",
                            "type": "number",
                            "defaultValue": 1,
                            "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                            "required": false,
                            "label": "Site Speed Sample Rate"
                          },
                          {
                            "name": "topLevelContextMapping",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                            "required": false,
                            "label": "Track Named Pages"
                          },
                          {
                            "name": "trackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                            "required": true,
                            "label": "Website Tracking ID"
                          },
                          {
                            "name": "typeOverride",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                            "required": false,
                            "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                          },
                          {
                            "name": "useGoogleAmpClientId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                            "required": false,
                            "label": "Use Google AMP Client ID"
                          },
                          {
                            "name": "userDeletion",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                            "required": false,
                            "label": "User Deletion"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://google.com/analytics",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Google Analytics",
                          "Google Universal Analytics"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "fP7qoQw2HTWt9WdMr718gn",
                      "enabled": true,
                      "name": "",
                      "settings": {
                        "mobileTrackingId": "123",
                        "serversideTrackingId": "123",
                        "trackingId": "123"
                      },
                      "metadata": {
                        "id": "54521fd725e721e32a72eebb",
                        "name": "Google Universal Analytics",
                        "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                        "slug": "google-analytics",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                          "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                        },
                        "options": [
                          {
                            "name": "anonymizeIp",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                            "required": false,
                            "label": "Anonymize IP Addresses"
                          },
                          {
                            "name": "classic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics on Your Site"
                          },
                          {
                            "name": "contentGroupings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                            "required": false,
                            "label": "Content Groupings"
                          },
                          {
                            "name": "dimensions",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Dimensions"
                          },
                          {
                            "name": "domain",
                            "type": "string",
                            "defaultValue": "",
                            "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                            "required": false,
                            "label": "Cookie Domain Name"
                          },
                          {
                            "name": "doubleClick",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Works with both Universal and Classic tracking methods.",
                            "required": false,
                            "label": "Remarketing, Display Ads and Demographic Reports."
                          },
                          {
                            "name": "enableServerIdentify",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                            "required": false,
                            "label": "Enable Server Side Identify"
                          },
                          {
                            "name": "enhancedEcommerce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                            "required": false,
                            "label": "Enable Enhanced Ecommerce"
                          },
                          {
                            "name": "enhancedLinkAttribution",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                            "required": false,
                            "label": "Enable Enhanced Link Attribution"
                          },
                          {
                            "name": "identifyCategory",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                            "required": false,
                            "label": "Server Side Identify Event Category"
                          },
                          {
                            "name": "identifyEventName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                            "required": false,
                            "label": "Server Side Identify Event Action"
                          },
                          {
                            "name": "ignoredReferrers",
                            "type": "strings",
                            "defaultValue": [],
                            "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                            "required": false,
                            "label": "Ignored Referrers"
                          },
                          {
                            "name": "includeSearch",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                            "required": false,
                            "label": "Include the Querystring in Page Views"
                          },
                          {
                            "name": "metrics",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Metrics"
                          },
                          {
                            "name": "mobileTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                            "required": true,
                            "label": "Mobile Tracking ID"
                          },
                          {
                            "name": "nameTracker",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                            "required": false,
                            "label": "Name Tracker"
                          },
                          {
                            "name": "nonInteraction",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                            "required": false,
                            "label": "Add the non-interaction flag to all events"
                          },
                          {
                            "name": "optimize",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                            "required": false,
                            "label": "Optimize Container ID"
                          },
                          {
                            "name": "preferAnonymousId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                          },
                          {
                            "name": "protocolMappings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                            "required": false,
                            "label": "Map Traits or Properties to Measurement Protocol Params"
                          },
                          {
                            "name": "reportUncaughtExceptions",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                            "required": false,
                            "label": "Send Uncaught Exceptions to GA (Mobile)"
                          },
                          {
                            "name": "resetCustomDimensionsOnPage",
                            "type": "array",
                            "defaultValue": [],
                            "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                            "required": false,
                            "label": "Reset dimensions on Page calls"
                          },
                          {
                            "name": "sampleRate",
                            "type": "number",
                            "defaultValue": 100,
                            "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                            "required": false,
                            "label": "Sample Rate"
                          },
                          {
                            "name": "sendUserId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                            "required": false,
                            "label": "Send User-ID to GA"
                          },
                          {
                            "name": "serversideClassic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics for Your Serverside Tracking"
                          },
                          {
                            "name": "serversideTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                            "required": true,
                            "label": "Serverside Tracking ID"
                          },
                          {
                            "name": "setAllMappedProps",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                            "required": false,
                            "label": "Set Custom Dimensions & Metrics to the Page"
                          },
                          {
                            "name": "siteSpeedSampleRate",
                            "type": "number",
                            "defaultValue": 1,
                            "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                            "required": false,
                            "label": "Site Speed Sample Rate"
                          },
                          {
                            "name": "topLevelContextMapping",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                            "required": false,
                            "label": "Track Named Pages"
                          },
                          {
                            "name": "trackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                            "required": true,
                            "label": "Website Tracking ID"
                          },
                          {
                            "name": "typeOverride",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                            "required": false,
                            "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                          },
                          {
                            "name": "useGoogleAmpClientId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                            "required": false,
                            "label": "Use Google AMP Client ID"
                          },
                          {
                            "name": "userDeletion",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                            "required": false,
                            "label": "User Deletion"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://google.com/analytics",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Google Analytics",
                          "Google Universal Analytics"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.getDestination('fP7qoQw2HTWt9WdMr718gn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    System.out.println(api.getDestination(\"fP7qoQw2HTWt9WdMr718gn\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Destination.\n\n**Note**: if you attempt to update read-only settings for your destination you'll encounter the following behavior:\n\n  * If only read-only properties are being updated, the endpoint will return an HTTP 400 error.\n  * If there's a mix of writable and read-only properties in the payload, the request will be accepted, the writable properties will be updated and the read-only properties ignored.\n\n\n\n\n• When called, this endpoint may generate the `Integration Disabled` event in the [audit trail](/tag/Audit-Trail).\n\nConfig API omitted fields:\n- `updateMask`\n         ",
        "operationId": "updateDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDestinationV1Input"
              },
              "example": {
                "enabled": false
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDestinationV1Input"
              },
              "example": {
                "enabled": false
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDestinationV1Input"
              },
              "example": {
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "fP7qoQw2HTWt9WdMr718gn",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "anonymizeIp": false,
                        "classic": false,
                        "contentGroupings": {},
                        "dimensions": {},
                        "domain": "",
                        "doubleClick": false,
                        "enableServerIdentify": false,
                        "enhancedEcommerce": false,
                        "enhancedLinkAttribution": false,
                        "identifyCategory": "",
                        "identifyEventName": "",
                        "ignoredReferrers": [],
                        "includeSearch": false,
                        "metrics": {},
                        "mobileTrackingId": "123",
                        "nameTracker": false,
                        "nonInteraction": false,
                        "optimize": "",
                        "preferAnonymousId": false,
                        "protocolMappings": {},
                        "reportUncaughtExceptions": false,
                        "resetCustomDimensionsOnPage": [],
                        "sampleRate": 100,
                        "sendUserId": false,
                        "serversideClassic": false,
                        "serversideTrackingId": "123",
                        "setAllMappedProps": true,
                        "siteSpeedSampleRate": 1,
                        "topLevelContextMapping": false,
                        "trackCategorizedPages": true,
                        "trackNamedPages": true,
                        "trackingId": "123",
                        "typeOverride": false,
                        "useGoogleAmpClientId": false,
                        "userDeletion": ""
                      },
                      "metadata": {
                        "id": "54521fd725e721e32a72eebb",
                        "name": "Google Universal Analytics",
                        "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                        "slug": "google-analytics",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                          "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                        },
                        "options": [
                          {
                            "name": "anonymizeIp",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                            "required": false,
                            "label": "Anonymize IP Addresses"
                          },
                          {
                            "name": "classic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics on Your Site"
                          },
                          {
                            "name": "contentGroupings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                            "required": false,
                            "label": "Content Groupings"
                          },
                          {
                            "name": "dimensions",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Dimensions"
                          },
                          {
                            "name": "domain",
                            "type": "string",
                            "defaultValue": "",
                            "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                            "required": false,
                            "label": "Cookie Domain Name"
                          },
                          {
                            "name": "doubleClick",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Works with both Universal and Classic tracking methods.",
                            "required": false,
                            "label": "Remarketing, Display Ads and Demographic Reports."
                          },
                          {
                            "name": "enableServerIdentify",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                            "required": false,
                            "label": "Enable Server Side Identify"
                          },
                          {
                            "name": "enhancedEcommerce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                            "required": false,
                            "label": "Enable Enhanced Ecommerce"
                          },
                          {
                            "name": "enhancedLinkAttribution",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                            "required": false,
                            "label": "Enable Enhanced Link Attribution"
                          },
                          {
                            "name": "identifyCategory",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                            "required": false,
                            "label": "Server Side Identify Event Category"
                          },
                          {
                            "name": "identifyEventName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                            "required": false,
                            "label": "Server Side Identify Event Action"
                          },
                          {
                            "name": "ignoredReferrers",
                            "type": "strings",
                            "defaultValue": [],
                            "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                            "required": false,
                            "label": "Ignored Referrers"
                          },
                          {
                            "name": "includeSearch",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                            "required": false,
                            "label": "Include the Querystring in Page Views"
                          },
                          {
                            "name": "metrics",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Metrics"
                          },
                          {
                            "name": "mobileTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                            "required": true,
                            "label": "Mobile Tracking ID"
                          },
                          {
                            "name": "nameTracker",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                            "required": false,
                            "label": "Name Tracker"
                          },
                          {
                            "name": "nonInteraction",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                            "required": false,
                            "label": "Add the non-interaction flag to all events"
                          },
                          {
                            "name": "optimize",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                            "required": false,
                            "label": "Optimize Container ID"
                          },
                          {
                            "name": "preferAnonymousId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                          },
                          {
                            "name": "protocolMappings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                            "required": false,
                            "label": "Map Traits or Properties to Measurement Protocol Params"
                          },
                          {
                            "name": "reportUncaughtExceptions",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                            "required": false,
                            "label": "Send Uncaught Exceptions to GA (Mobile)"
                          },
                          {
                            "name": "resetCustomDimensionsOnPage",
                            "type": "array",
                            "defaultValue": [],
                            "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                            "required": false,
                            "label": "Reset dimensions on Page calls"
                          },
                          {
                            "name": "sampleRate",
                            "type": "number",
                            "defaultValue": 100,
                            "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                            "required": false,
                            "label": "Sample Rate"
                          },
                          {
                            "name": "sendUserId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                            "required": false,
                            "label": "Send User-ID to GA"
                          },
                          {
                            "name": "serversideClassic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics for Your Serverside Tracking"
                          },
                          {
                            "name": "serversideTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                            "required": true,
                            "label": "Serverside Tracking ID"
                          },
                          {
                            "name": "setAllMappedProps",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                            "required": false,
                            "label": "Set Custom Dimensions & Metrics to the Page"
                          },
                          {
                            "name": "siteSpeedSampleRate",
                            "type": "number",
                            "defaultValue": 1,
                            "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                            "required": false,
                            "label": "Site Speed Sample Rate"
                          },
                          {
                            "name": "topLevelContextMapping",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                            "required": false,
                            "label": "Track Named Pages"
                          },
                          {
                            "name": "trackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                            "required": true,
                            "label": "Website Tracking ID"
                          },
                          {
                            "name": "typeOverride",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                            "required": false,
                            "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                          },
                          {
                            "name": "useGoogleAmpClientId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                            "required": false,
                            "label": "Use Google AMP Client ID"
                          },
                          {
                            "name": "userDeletion",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                            "required": false,
                            "label": "User Deletion"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://google.com/analytics",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Google Analytics",
                          "Google Universal Analytics"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "fP7qoQw2HTWt9WdMr718gn",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "anonymizeIp": false,
                        "classic": false,
                        "contentGroupings": {},
                        "dimensions": {},
                        "domain": "",
                        "doubleClick": false,
                        "enableServerIdentify": false,
                        "enhancedEcommerce": false,
                        "enhancedLinkAttribution": false,
                        "identifyCategory": "",
                        "identifyEventName": "",
                        "ignoredReferrers": [],
                        "includeSearch": false,
                        "metrics": {},
                        "mobileTrackingId": "123",
                        "nameTracker": false,
                        "nonInteraction": false,
                        "optimize": "",
                        "preferAnonymousId": false,
                        "protocolMappings": {},
                        "reportUncaughtExceptions": false,
                        "resetCustomDimensionsOnPage": [],
                        "sampleRate": 100,
                        "sendUserId": false,
                        "serversideClassic": false,
                        "serversideTrackingId": "123",
                        "setAllMappedProps": true,
                        "siteSpeedSampleRate": 1,
                        "topLevelContextMapping": false,
                        "trackCategorizedPages": true,
                        "trackNamedPages": true,
                        "trackingId": "123",
                        "typeOverride": false,
                        "useGoogleAmpClientId": false,
                        "userDeletion": ""
                      },
                      "metadata": {
                        "id": "54521fd725e721e32a72eebb",
                        "name": "Google Universal Analytics",
                        "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                        "slug": "google-analytics",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                          "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                        },
                        "options": [
                          {
                            "name": "anonymizeIp",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                            "required": false,
                            "label": "Anonymize IP Addresses"
                          },
                          {
                            "name": "classic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics on Your Site"
                          },
                          {
                            "name": "contentGroupings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                            "required": false,
                            "label": "Content Groupings"
                          },
                          {
                            "name": "dimensions",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Dimensions"
                          },
                          {
                            "name": "domain",
                            "type": "string",
                            "defaultValue": "",
                            "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                            "required": false,
                            "label": "Cookie Domain Name"
                          },
                          {
                            "name": "doubleClick",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Works with both Universal and Classic tracking methods.",
                            "required": false,
                            "label": "Remarketing, Display Ads and Demographic Reports."
                          },
                          {
                            "name": "enableServerIdentify",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                            "required": false,
                            "label": "Enable Server Side Identify"
                          },
                          {
                            "name": "enhancedEcommerce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                            "required": false,
                            "label": "Enable Enhanced Ecommerce"
                          },
                          {
                            "name": "enhancedLinkAttribution",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                            "required": false,
                            "label": "Enable Enhanced Link Attribution"
                          },
                          {
                            "name": "identifyCategory",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                            "required": false,
                            "label": "Server Side Identify Event Category"
                          },
                          {
                            "name": "identifyEventName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                            "required": false,
                            "label": "Server Side Identify Event Action"
                          },
                          {
                            "name": "ignoredReferrers",
                            "type": "strings",
                            "defaultValue": [],
                            "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                            "required": false,
                            "label": "Ignored Referrers"
                          },
                          {
                            "name": "includeSearch",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                            "required": false,
                            "label": "Include the Querystring in Page Views"
                          },
                          {
                            "name": "metrics",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Metrics"
                          },
                          {
                            "name": "mobileTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                            "required": true,
                            "label": "Mobile Tracking ID"
                          },
                          {
                            "name": "nameTracker",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                            "required": false,
                            "label": "Name Tracker"
                          },
                          {
                            "name": "nonInteraction",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                            "required": false,
                            "label": "Add the non-interaction flag to all events"
                          },
                          {
                            "name": "optimize",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                            "required": false,
                            "label": "Optimize Container ID"
                          },
                          {
                            "name": "preferAnonymousId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                          },
                          {
                            "name": "protocolMappings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                            "required": false,
                            "label": "Map Traits or Properties to Measurement Protocol Params"
                          },
                          {
                            "name": "reportUncaughtExceptions",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                            "required": false,
                            "label": "Send Uncaught Exceptions to GA (Mobile)"
                          },
                          {
                            "name": "resetCustomDimensionsOnPage",
                            "type": "array",
                            "defaultValue": [],
                            "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                            "required": false,
                            "label": "Reset dimensions on Page calls"
                          },
                          {
                            "name": "sampleRate",
                            "type": "number",
                            "defaultValue": 100,
                            "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                            "required": false,
                            "label": "Sample Rate"
                          },
                          {
                            "name": "sendUserId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                            "required": false,
                            "label": "Send User-ID to GA"
                          },
                          {
                            "name": "serversideClassic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics for Your Serverside Tracking"
                          },
                          {
                            "name": "serversideTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                            "required": true,
                            "label": "Serverside Tracking ID"
                          },
                          {
                            "name": "setAllMappedProps",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                            "required": false,
                            "label": "Set Custom Dimensions & Metrics to the Page"
                          },
                          {
                            "name": "siteSpeedSampleRate",
                            "type": "number",
                            "defaultValue": 1,
                            "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                            "required": false,
                            "label": "Site Speed Sample Rate"
                          },
                          {
                            "name": "topLevelContextMapping",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                            "required": false,
                            "label": "Track Named Pages"
                          },
                          {
                            "name": "trackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                            "required": true,
                            "label": "Website Tracking ID"
                          },
                          {
                            "name": "typeOverride",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                            "required": false,
                            "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                          },
                          {
                            "name": "useGoogleAmpClientId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                            "required": false,
                            "label": "Use Google AMP Client ID"
                          },
                          {
                            "name": "userDeletion",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                            "required": false,
                            "label": "User Deletion"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://google.com/analytics",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Google Analytics",
                          "Google Universal Analytics"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "fP7qoQw2HTWt9WdMr718gn",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "anonymizeIp": false,
                        "classic": false,
                        "contentGroupings": {},
                        "dimensions": {},
                        "domain": "",
                        "doubleClick": false,
                        "enableServerIdentify": false,
                        "enhancedEcommerce": false,
                        "enhancedLinkAttribution": false,
                        "identifyCategory": "",
                        "identifyEventName": "",
                        "ignoredReferrers": [],
                        "includeSearch": false,
                        "metrics": {},
                        "mobileTrackingId": "123",
                        "nameTracker": false,
                        "nonInteraction": false,
                        "optimize": "",
                        "preferAnonymousId": false,
                        "protocolMappings": {},
                        "reportUncaughtExceptions": false,
                        "resetCustomDimensionsOnPage": [],
                        "sampleRate": 100,
                        "sendUserId": false,
                        "serversideClassic": false,
                        "serversideTrackingId": "123",
                        "setAllMappedProps": true,
                        "siteSpeedSampleRate": 1,
                        "topLevelContextMapping": false,
                        "trackCategorizedPages": true,
                        "trackNamedPages": true,
                        "trackingId": "123",
                        "typeOverride": false,
                        "useGoogleAmpClientId": false,
                        "userDeletion": ""
                      },
                      "metadata": {
                        "id": "54521fd725e721e32a72eebb",
                        "name": "Google Universal Analytics",
                        "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                        "slug": "google-analytics",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                          "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                        },
                        "options": [
                          {
                            "name": "anonymizeIp",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                            "required": false,
                            "label": "Anonymize IP Addresses"
                          },
                          {
                            "name": "classic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics on Your Site"
                          },
                          {
                            "name": "contentGroupings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                            "required": false,
                            "label": "Content Groupings"
                          },
                          {
                            "name": "dimensions",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Dimensions"
                          },
                          {
                            "name": "domain",
                            "type": "string",
                            "defaultValue": "",
                            "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                            "required": false,
                            "label": "Cookie Domain Name"
                          },
                          {
                            "name": "doubleClick",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Works with both Universal and Classic tracking methods.",
                            "required": false,
                            "label": "Remarketing, Display Ads and Demographic Reports."
                          },
                          {
                            "name": "enableServerIdentify",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                            "required": false,
                            "label": "Enable Server Side Identify"
                          },
                          {
                            "name": "enhancedEcommerce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                            "required": false,
                            "label": "Enable Enhanced Ecommerce"
                          },
                          {
                            "name": "enhancedLinkAttribution",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                            "required": false,
                            "label": "Enable Enhanced Link Attribution"
                          },
                          {
                            "name": "identifyCategory",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                            "required": false,
                            "label": "Server Side Identify Event Category"
                          },
                          {
                            "name": "identifyEventName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                            "required": false,
                            "label": "Server Side Identify Event Action"
                          },
                          {
                            "name": "ignoredReferrers",
                            "type": "strings",
                            "defaultValue": [],
                            "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                            "required": false,
                            "label": "Ignored Referrers"
                          },
                          {
                            "name": "includeSearch",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                            "required": false,
                            "label": "Include the Querystring in Page Views"
                          },
                          {
                            "name": "metrics",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Metrics"
                          },
                          {
                            "name": "mobileTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                            "required": true,
                            "label": "Mobile Tracking ID"
                          },
                          {
                            "name": "nameTracker",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                            "required": false,
                            "label": "Name Tracker"
                          },
                          {
                            "name": "nonInteraction",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                            "required": false,
                            "label": "Add the non-interaction flag to all events"
                          },
                          {
                            "name": "optimize",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                            "required": false,
                            "label": "Optimize Container ID"
                          },
                          {
                            "name": "preferAnonymousId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                          },
                          {
                            "name": "protocolMappings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                            "required": false,
                            "label": "Map Traits or Properties to Measurement Protocol Params"
                          },
                          {
                            "name": "reportUncaughtExceptions",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                            "required": false,
                            "label": "Send Uncaught Exceptions to GA (Mobile)"
                          },
                          {
                            "name": "resetCustomDimensionsOnPage",
                            "type": "array",
                            "defaultValue": [],
                            "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                            "required": false,
                            "label": "Reset dimensions on Page calls"
                          },
                          {
                            "name": "sampleRate",
                            "type": "number",
                            "defaultValue": 100,
                            "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                            "required": false,
                            "label": "Sample Rate"
                          },
                          {
                            "name": "sendUserId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                            "required": false,
                            "label": "Send User-ID to GA"
                          },
                          {
                            "name": "serversideClassic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics for Your Serverside Tracking"
                          },
                          {
                            "name": "serversideTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                            "required": true,
                            "label": "Serverside Tracking ID"
                          },
                          {
                            "name": "setAllMappedProps",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                            "required": false,
                            "label": "Set Custom Dimensions & Metrics to the Page"
                          },
                          {
                            "name": "siteSpeedSampleRate",
                            "type": "number",
                            "defaultValue": 1,
                            "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                            "required": false,
                            "label": "Site Speed Sample Rate"
                          },
                          {
                            "name": "topLevelContextMapping",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                            "required": false,
                            "label": "Track Named Pages"
                          },
                          {
                            "name": "trackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                            "required": true,
                            "label": "Website Tracking ID"
                          },
                          {
                            "name": "typeOverride",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                            "required": false,
                            "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                          },
                          {
                            "name": "useGoogleAmpClientId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                            "required": false,
                            "label": "Use Google AMP Client ID"
                          },
                          {
                            "name": "userDeletion",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                            "required": false,
                            "label": "User Deletion"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://google.com/analytics",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Google Analytics",
                          "Google Universal Analytics"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "fP7qoQw2HTWt9WdMr718gn",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "anonymizeIp": false,
                        "classic": false,
                        "contentGroupings": {},
                        "dimensions": {},
                        "domain": "",
                        "doubleClick": false,
                        "enableServerIdentify": false,
                        "enhancedEcommerce": false,
                        "enhancedLinkAttribution": false,
                        "identifyCategory": "",
                        "identifyEventName": "",
                        "ignoredReferrers": [],
                        "includeSearch": false,
                        "metrics": {},
                        "mobileTrackingId": "123",
                        "nameTracker": false,
                        "nonInteraction": false,
                        "optimize": "",
                        "preferAnonymousId": false,
                        "protocolMappings": {},
                        "reportUncaughtExceptions": false,
                        "resetCustomDimensionsOnPage": [],
                        "sampleRate": 100,
                        "sendUserId": false,
                        "serversideClassic": false,
                        "serversideTrackingId": "123",
                        "setAllMappedProps": true,
                        "siteSpeedSampleRate": 1,
                        "topLevelContextMapping": false,
                        "trackCategorizedPages": true,
                        "trackNamedPages": true,
                        "trackingId": "123",
                        "typeOverride": false,
                        "useGoogleAmpClientId": false,
                        "userDeletion": ""
                      },
                      "metadata": {
                        "id": "54521fd725e721e32a72eebb",
                        "name": "Google Universal Analytics",
                        "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                        "slug": "google-analytics",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                          "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                        },
                        "options": [
                          {
                            "name": "anonymizeIp",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                            "required": false,
                            "label": "Anonymize IP Addresses"
                          },
                          {
                            "name": "classic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics on Your Site"
                          },
                          {
                            "name": "contentGroupings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                            "required": false,
                            "label": "Content Groupings"
                          },
                          {
                            "name": "dimensions",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Dimensions"
                          },
                          {
                            "name": "domain",
                            "type": "string",
                            "defaultValue": "",
                            "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                            "required": false,
                            "label": "Cookie Domain Name"
                          },
                          {
                            "name": "doubleClick",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Works with both Universal and Classic tracking methods.",
                            "required": false,
                            "label": "Remarketing, Display Ads and Demographic Reports."
                          },
                          {
                            "name": "enableServerIdentify",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                            "required": false,
                            "label": "Enable Server Side Identify"
                          },
                          {
                            "name": "enhancedEcommerce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                            "required": false,
                            "label": "Enable Enhanced Ecommerce"
                          },
                          {
                            "name": "enhancedLinkAttribution",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                            "required": false,
                            "label": "Enable Enhanced Link Attribution"
                          },
                          {
                            "name": "identifyCategory",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                            "required": false,
                            "label": "Server Side Identify Event Category"
                          },
                          {
                            "name": "identifyEventName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                            "required": false,
                            "label": "Server Side Identify Event Action"
                          },
                          {
                            "name": "ignoredReferrers",
                            "type": "strings",
                            "defaultValue": [],
                            "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                            "required": false,
                            "label": "Ignored Referrers"
                          },
                          {
                            "name": "includeSearch",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                            "required": false,
                            "label": "Include the Querystring in Page Views"
                          },
                          {
                            "name": "metrics",
                            "type": "map",
                            "defaultValue": {},
                            "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                            "required": false,
                            "label": "Custom Metrics"
                          },
                          {
                            "name": "mobileTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                            "required": true,
                            "label": "Mobile Tracking ID"
                          },
                          {
                            "name": "nameTracker",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                            "required": false,
                            "label": "Name Tracker"
                          },
                          {
                            "name": "nonInteraction",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                            "required": false,
                            "label": "Add the non-interaction flag to all events"
                          },
                          {
                            "name": "optimize",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                            "required": false,
                            "label": "Optimize Container ID"
                          },
                          {
                            "name": "preferAnonymousId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                          },
                          {
                            "name": "protocolMappings",
                            "type": "map",
                            "defaultValue": {},
                            "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                            "required": false,
                            "label": "Map Traits or Properties to Measurement Protocol Params"
                          },
                          {
                            "name": "reportUncaughtExceptions",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                            "required": false,
                            "label": "Send Uncaught Exceptions to GA (Mobile)"
                          },
                          {
                            "name": "resetCustomDimensionsOnPage",
                            "type": "array",
                            "defaultValue": [],
                            "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                            "required": false,
                            "label": "Reset dimensions on Page calls"
                          },
                          {
                            "name": "sampleRate",
                            "type": "number",
                            "defaultValue": 100,
                            "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                            "required": false,
                            "label": "Sample Rate"
                          },
                          {
                            "name": "sendUserId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                            "required": false,
                            "label": "Send User-ID to GA"
                          },
                          {
                            "name": "serversideClassic",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                            "required": false,
                            "label": "Use Classic Analytics for Your Serverside Tracking"
                          },
                          {
                            "name": "serversideTrackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                            "required": true,
                            "label": "Serverside Tracking ID"
                          },
                          {
                            "name": "setAllMappedProps",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                            "required": false,
                            "label": "Set Custom Dimensions & Metrics to the Page"
                          },
                          {
                            "name": "siteSpeedSampleRate",
                            "type": "number",
                            "defaultValue": 1,
                            "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                            "required": false,
                            "label": "Site Speed Sample Rate"
                          },
                          {
                            "name": "topLevelContextMapping",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                            "required": false,
                            "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                            "required": false,
                            "label": "Track Named Pages"
                          },
                          {
                            "name": "trackingId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                            "required": true,
                            "label": "Website Tracking ID"
                          },
                          {
                            "name": "typeOverride",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                            "required": false,
                            "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                          },
                          {
                            "name": "useGoogleAmpClientId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                            "required": false,
                            "label": "Use Google AMP Client ID"
                          },
                          {
                            "name": "userDeletion",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                            "required": false,
                            "label": "User Deletion"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://google.com/analytics",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Google Analytics",
                          "Google Universal Analytics"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.updateDestination('fP7qoQw2HTWt9WdMr718gn', { enabled: false }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    UpdateDestinationV1Input input = UpdateDestinationV1Input.fromJson(\"{\\\"enabled\\\":false}\");\n    System.out.println(api.updateDestination(\"fP7qoQw2HTWt9WdMr718gn\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/functions/{functionId}": {
      "delete": {
        "summary": "Delete Function",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteFunction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.deleteFunction('sfnc_wXzcDGFR3KmjLDrtSawNHf'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    System.out.println(api.deleteFunction(\"sfnc_wXzcDGFR3KmjLDrtSawNHf\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get Function",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getFunction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.getFunction('sfnc_wXzcDGFR3KmjLDrtSawNHf'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    System.out.println(api.getFunction(\"sfnc_wXzcDGFR3KmjLDrtSawNHf\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Function",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.\n\nConfig API omitted fields:\n- `updateMask`\n",
        "operationId": "updateFunction",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.updateFunction('sfnc_wXzcDGFR3KmjLDrtSawNHf', {\n      code: '// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions',\n      logoUrl: 'https://placekitten.com/200/139',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    UpdateFunctionV1Input input = UpdateFunctionV1Input.fromJson(\n      \"{\\\"code\\\":\\\"// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions\\\",\\\"logoUrl\\\":\\\"https://placekitten.com/200/139\\\"}\"\n    );\n    System.out.println(api.updateFunction(\"sfnc_wXzcDGFR3KmjLDrtSawNHf\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/insert-function-instances/{instanceId}": {
      "delete": {
        "summary": "Delete Insert Function Instance",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "required": true,
            "example": "64edfa5ac43ed978ee4f2b7f",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an insert Function instance.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteInsertFunctionInstance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInsertFunctionInstanceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.deleteInsertFunctionInstance('64edfa5ac43ed978ee4f2b7f'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    System.out.println(api.deleteInsertFunctionInstance(\"64edfa5ac43ed978ee4f2b7f\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Insert Function Instance",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "required": true,
            "example": "64edfa58c43ed978ee4f2b7e",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an insert Function instance connected to the given Destination.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateInsertFunctionInstance",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInsertFunctionInstanceAlphaInput"
              },
              "example": {
                "enabled": false,
                "settings": {
                  "apiKey": "XYZ-new"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateInsertFunctionInstanceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "insertFunctionInstance": {
                      "id": "64edfa58c43ed978ee4f2b7e",
                      "name": "Example insert function instance",
                      "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                      "classId": "76365637324e715a67535831",
                      "enabled": false,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "settings": {
                        "apiKey": "XYZ-new"
                      },
                      "encryptedSettings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.updateInsertFunctionInstance('64edfa58c43ed978ee4f2b7e', { enabled: false, settings: { apiKey: 'XYZ-new' } })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    UpdateInsertFunctionInstanceAlphaInput input = UpdateInsertFunctionInstanceAlphaInput.fromJson(\n      \"{\\\"enabled\\\":false,\\\"settings\\\":{\\\"apiKey\\\":\\\"XYZ-new\\\"}}\"\n    );\n    System.out.println(api.updateInsertFunctionInstance(\"64edfa58c43ed978ee4f2b7e\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/labels/{key}/{value}": {
      "delete": {
        "summary": "Delete Label",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "example": "environment",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "example": "yolo",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a label.\n\n\n\n• When called, this endpoint may generate the `Label Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "deleteLabel",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteLabelAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "Labels"
        ],
        "tags": [
          "Labels"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.labels.deleteLabel('environment', 'yolo'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    LabelsApi api = new LabelsApi();\n    System.out.println(api.deleteLabel(\"environment\", \"yolo\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/regulations/{regulateId}": {
      "delete": {
        "summary": "Delete Regulation",
        "parameters": [
          {
            "in": "path",
            "name": "regulateId",
            "required": true,
            "example": "1qJkfE1tpwvQcklImGksLN629wn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a regulation from the Workspace. The regulation must be in the initialized state to be deleted.\n\n\n\n• When called, this endpoint may generate the `Regulation Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "deleteRegulation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.deleteRegulation('1qJkfE1tpwvQcklImGksLN629wn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();\n    System.out.println(api.deleteRegulation(\"1qJkfE1tpwvQcklImGksLN629wn\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get Regulation",
        "parameters": [
          {
            "in": "path",
            "name": "regulateId",
            "required": true,
            "example": "1qJkfE1tpwvQcklImGksLN629wn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a regulation from the Workspace.\n\n      Config API omitted fields:\n- `parent`\n      ",
        "operationId": "getRegulation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulation": {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "overallStatus": "FINISHED",
                      "finishedAt": "2022-03-08T00:39:36.546951Z",
                      "createdAt": "2022-03-08T00:39:36.546951Z",
                      "streamStatus": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulation": {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "overallStatus": "FINISHED",
                      "finishedAt": "2022-03-08T00:39:36.546951Z",
                      "createdAt": "2022-03-08T00:39:36.546951Z",
                      "streamStatus": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulation": {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "overallStatus": "FINISHED",
                      "finishedAt": "2022-03-08T00:39:36.546951Z",
                      "createdAt": "2022-03-08T00:39:36.546951Z",
                      "streamStatus": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulation": {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "overallStatus": "FINISHED",
                      "finishedAt": "2022-03-08T00:39:36.546951Z",
                      "createdAt": "2022-03-08T00:39:36.546951Z",
                      "streamStatus": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.getRegulation('1qJkfE1tpwvQcklImGksLN629wn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();\n    System.out.println(api.getRegulation(\"1qJkfE1tpwvQcklImGksLN629wn\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/reverse-etl-models/{modelId}": {
      "delete": {
        "summary": "Delete Reverse Etl Model",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "aow61ZsjXFRsUqB5wWmZES",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Model.\n\n      \n\n• When called, this endpoint may generate the `Model Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "deleteReverseEtlModel",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteReverseEtlModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.deleteReverseEtlModel('aow61ZsjXFRsUqB5wWmZES'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ReverseEtlApi api = new ReverseEtlApi();\n    System.out.println(api.deleteReverseEtlModel(\"aow61ZsjXFRsUqB5wWmZES\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get Reverse Etl Model",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "MaAeg9yDd1UZTBeEYDiVw",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Reverse ETL Model by its id.",
        "operationId": "getReverseEtlModel",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetReverseEtlModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reverseEtlModel": {
                      "id": "MaAeg9yDd1UZTBeEYDiVw",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "name": "Model 1",
                      "description": "This model is very useful.",
                      "enabled": true,
                      "query": "SELECT 'user_1' AS id",
                      "queryIdentifierColumn": "id",
                      "scheduleStrategy": "MANUAL",
                      "scheduleConfig": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.getReverseEtlModel('MaAeg9yDd1UZTBeEYDiVw'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ReverseEtlApi api = new ReverseEtlApi();\n    System.out.println(api.getReverseEtlModel(\"MaAeg9yDd1UZTBeEYDiVw\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Reverse Etl Model",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "37YCmBXayzqG4sit63P5pH",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Reverse ETL Model.\n\n      \n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Model Settings Saved\n* Model State Change Toggled\n      ",
        "operationId": "updateReverseEtlModel",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReverseEtlModelInput"
              },
              "example": {
                "name": "My Updated Model"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateReverseEtlModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reverseEtlModel": {
                      "id": "37YCmBXayzqG4sit63P5pH",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "name": "My Updated Model",
                      "description": "This model is very useful.",
                      "enabled": true,
                      "query": "SELECT 'user_1' AS id",
                      "queryIdentifierColumn": "id",
                      "scheduleStrategy": "MANUAL",
                      "scheduleConfig": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.updateReverseEtlModel('37YCmBXayzqG4sit63P5pH', { name: 'My Updated Model' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ReverseEtlApi api = new ReverseEtlApi();\n    UpdateReverseEtlModelInput input = UpdateReverseEtlModelInput.fromJson(\"{\\\"name\\\":\\\"My Updated Model\\\"}\");\n    System.out.println(api.updateReverseEtlModel(\"37YCmBXayzqG4sit63P5pH\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}": {
      "delete": {
        "summary": "Delete Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "48EFjyXH4zdbKWx4vKiLuE",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Source.\n\n\n\n• When called, this endpoint may generate the `Source Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "deleteSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.deleteSource('48EFjyXH4zdbKWx4vKiLuE'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    System.out.println(api.deleteSource(\"48EFjyXH4zdbKWx4vKiLuE\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Source by its id.",
        "operationId": "getSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "3YdEudTwjouyC5WPjpbTik"
                      ],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": [
                          "Mobile"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "3YdEudTwjouyC5WPjpbTik"
                      ],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": [
                          "Mobile"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "3YdEudTwjouyC5WPjpbTik"
                      ],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": [
                          "Mobile"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "3YdEudTwjouyC5WPjpbTik"
                      ],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": [
                          "Mobile"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.getSource('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    System.out.println(api.getSource(\"qQEHquLrjRDN9j1ByrChyn\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "piTVHEYNrRgBMM1uQGCPbK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Source.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Source Modified\n* Source Enabled\n* Source Settings Modified\n* Source Disabled\n\nConfig API omitted fields:\n- `updateMask`\n",
        "operationId": "updateSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSourceV1Input"
              },
              "example": {
                "name": "My updated source",
                "enabled": false
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSourceV1Input"
              },
              "example": {
                "name": "My updated source",
                "enabled": false
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSourceAlphaInput"
              },
              "example": {
                "name": "My updated source",
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "3uCNQopSsSnXeAHAwYKZqF",
                      "slug": "update-source-slug-a-yoz5",
                      "name": "My updated source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "writeKeys": [
                        "4czIPB0pGAv89HEJZDYUa5XomDi5dj4E"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "3uCNQopSsSnXeAHAwYKZqF",
                      "slug": "update-source-slug-a-yoz5",
                      "name": "My updated source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "writeKeys": [
                        "4czIPB0pGAv89HEJZDYUa5XomDi5dj4E"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "kgPS3ESM35Ez5UQ7nvfJbC",
                      "slug": "update-source-slug-wb_c2h",
                      "name": "My updated source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "writeKeys": [
                        "HqFwQdNCYOAsLPE8FQEgBo6RwHALu7lj"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "piTVHEYNrRgBMM1uQGCPbK",
                      "slug": "update-source-slug-gqd2dx",
                      "name": "My updated source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "writeKeys": [
                        "VkV0fu40bXSSNJtqnQEzonkzLOWj2llN"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.updateSource('piTVHEYNrRgBMM1uQGCPbK', { name: 'My updated source', enabled: false }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    UpdateSourceV1Input input = UpdateSourceV1Input.fromJson(\"{\\\"name\\\":\\\"My updated source\\\",\\\"enabled\\\":false}\");\n    System.out.println(api.updateSource(\"piTVHEYNrRgBMM1uQGCPbK\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/tracking-plans/{trackingPlanId}": {
      "delete": {
        "summary": "Delete Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.deleteTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    System.out.println(api.deleteTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.getTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    System.out.println(api.getTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.\n\nConfig API omitted fields:\n- `updateMask`\n      ",
        "operationId": "updateTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackingPlanV1Input"
              },
              "example": {
                "name": "Updated TP"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackingPlanV1Input"
              },
              "example": {
                "name": "Updated TP"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackingPlanV1Input"
              },
              "example": {
                "name": "Updated TP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.updateTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', { name: 'Updated TP' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    UpdateTrackingPlanV1Input input = UpdateTrackingPlanV1Input.fromJson(\"{\\\"name\\\":\\\"Updated TP\\\"}\");\n    System.out.println(api.updateTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/transformations/{transformationId}": {
      "delete": {
        "summary": "Delete Transformation",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "example": "2NhipGGSZWdzI7YrXHELB7pVXqR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Transformation.\n\n\n\n• When called, this endpoint may generate the `Transformation Deleted` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteTransformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.transformations.deleteTransformation('2NhipGGSZWdzI7YrXHELB7pVXqR'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TransformationsApi api = new TransformationsApi();\n    System.out.println(api.deleteTransformation(\"2NhipGGSZWdzI7YrXHELB7pVXqR\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get Transformation",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "example": "pHrD51Ds35Zjfka84yXQE6",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Transformation.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getTransformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "User clicked edit track event",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'User Clicked'",
                      "propertyRenames": [
                        {
                          "oldName": "Category",
                          "newName": "category"
                        }
                      ],
                      "propertyValueTransformations": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.transformations.getTransformation('pHrD51Ds35Zjfka84yXQE6'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TransformationsApi api = new TransformationsApi();\n    System.out.println(api.getTransformation(\"pHrD51Ds35Zjfka84yXQE6\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Transformation",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "example": "pHrD51Ds35Zjfka84yXQE6",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Transformation.\n\n\n\n• When called, this endpoint may generate the `Transformation Updated` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateTransformation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransformationV1Input"
              },
              "example": {
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [
                  {
                    "newName": "new-property",
                    "oldName": "old-property"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.another-property"
                    ],
                    "propertyValue": "another property value"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransformationV1Input"
              },
              "example": {
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [
                  {
                    "newName": "new-property",
                    "oldName": "old-property"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.another-property"
                    ],
                    "propertyValue": "another property value"
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransformationV1Input"
              },
              "example": {
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [
                  {
                    "newName": "new-property",
                    "oldName": "old-property"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.transformations.updateTransformation('pHrD51Ds35Zjfka84yXQE6', {\n      name: 'updated-name',\n      sourceId: 'rh5BDZp6QDHvXFCkibm1pR',\n      enabled: true,\n      destinationMetadataId: '547610a5db31d978f14a5c4e',\n      if: 'event=\"my-event\"',\n      newEventName: 'my-updated-event',\n      propertyRenames: [{ newName: 'new-property', oldName: 'old-property' }],\n      propertyValueTransformations: [{ propertyPaths: ['properties.another-property'], propertyValue: 'another property value' }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TransformationsApi api = new TransformationsApi();\n    UpdateTransformationV1Input input = UpdateTransformationV1Input.fromJson(\n      \"{\\\"name\\\":\\\"updated-name\\\",\\\"sourceId\\\":\\\"rh5BDZp6QDHvXFCkibm1pR\\\",\\\"enabled\\\":true,\\\"destinationMetadataId\\\":\\\"547610a5db31d978f14a5c4e\\\",\\\"if\\\":\\\"event=\\\\\\\"my-event\\\\\\\"\\\",\\\"newEventName\\\":\\\"my-updated-event\\\",\\\"propertyRenames\\\":[{\\\"newName\\\":\\\"new-property\\\",\\\"oldName\\\":\\\"old-property\\\"}],\\\"propertyValueTransformations\\\":[{\\\"propertyPaths\\\":[\\\"properties.another-property\\\"],\\\"propertyValue\\\":\\\"another property value\\\"}]}\"\n    );\n    System.out.println(api.updateTransformation(\"pHrD51Ds35Zjfka84yXQE6\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/groups/{userGroupId}": {
      "delete": {
        "summary": "Delete User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "2Nhj3GVumKbR0cjDly4nCdGo6cT",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Removes a user group from a Workspace.\n\n\n\n• When called, this endpoint may generate the `User Group Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "deleteUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.deleteUserGroup('2Nhj3GVumKbR0cjDly4nCdGo6cT'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    System.out.println(api.deleteUserGroup(\"2Nhj3GVumKbR0cjDly4nCdGo6cT\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a user group.",
        "operationId": "getUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "Public API Group",
                      "memberCount": 1,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.getUserGroup('bBABwqbaDf2QdwTbW8bNEm'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    System.out.println(api.getUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a user group for a Workspace.\n\n\n\n• When called, this endpoint may generate the `User Group Updated` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupV1Input"
              },
              "example": {
                "name": "PAPI Example Group"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupV1Input"
              },
              "example": {
                "name": "PAPI Example Group"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupV1Input"
              },
              "example": {
                "name": "PAPI Example Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.updateUserGroup('bBABwqbaDf2QdwTbW8bNEm', { name: 'PAPI Example Group' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    UpdateUserGroupV1Input input = UpdateUserGroupV1Input.fromJson(\"{\\\"name\\\":\\\"PAPI Example Group\\\"}\");\n    System.out.println(api.updateUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/users": {
      "delete": {
        "summary": "Delete Users",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "userIds",
            "style": "deepObject",
            "description": "The ids of the users to remove.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The ids of the users to remove.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "userIds"
            },
            "example": [
              "dLPzv57d5nRGz8U5iegLKp"
            ]
          }
        ],
        "deprecated": false,
        "description": "Removes one or multiple users.\n\n\n\n• When called, this endpoint may generate the `Group Memberships Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "deleteUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.deleteUsers(['dLPzv57d5nRGz8U5iegLKp']))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    System.out.println(api.deleteUsers(Arrays.asList(\"dLPzv57d5nRGz8U5iegLKp\")).getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "List Users",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination for users.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of users with access to the Workspace.",
        "operationId": "listUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "i2VTJURQprNfqdwjLFPWYx",
                        "name": "Sloth",
                        "email": "sloth@segment.com"
                      },
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "name": "",
                        "email": "papi@segment.com"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "i2VTJURQprNfqdwjLFPWYx",
                        "name": "Sloth",
                        "email": "sloth@segment.com"
                      },
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "name": "",
                        "email": "papi@segment.com"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "i2VTJURQprNfqdwjLFPWYx",
                        "name": "Sloth",
                        "email": "sloth@segment.com"
                      },
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "name": "",
                        "email": "papi@segment.com"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "i2VTJURQprNfqdwjLFPWYx",
                        "name": "Sloth",
                        "email": "sloth@segment.com"
                      },
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "name": "",
                        "email": "papi@segment.com"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.listUsers({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    System.out.println(api.listUsers(PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}": {
      "delete": {
        "summary": "Delete Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "8VW6ytH4hKYCoTtfQ7Xbkd",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Warehouse.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "deleteWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.deleteWarehouse('8VW6ytH4hKYCoTtfQ7Xbkd'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    System.out.println(api.deleteWarehouse(\"8VW6ytH4hKYCoTtfQ7Xbkd\").getData());\n  }\n}\n"
          }
        ]
      },
      "get": {
        "summary": "Get Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Warehouse by its id.",
        "operationId": "getWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {}
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {}
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {}
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.getWarehouse('kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    System.out.println(api.getWarehouse(\"kjU72LCJexvrqL7G4TMHHN\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Warehouse.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Storage Destination Modified\n* Storage Destination Enabled\n      ",
        "operationId": "updateWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseV1Input"
              },
              "example": {
                "name": "Redshift Dev",
                "settings": {
                  "host": "aws.redshift.dev"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseV1Input"
              },
              "example": {
                "name": "Redshift Dev",
                "settings": {
                  "host": "aws.redshift.dev"
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseV1Input"
              },
              "example": {
                "name": "API Example Test Warehouse Update",
                "settings": {
                  "host": "aws.redshift.dev"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {
                        "host": "aws.redshift.dev",
                        "name": "Redshift Dev"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {
                        "host": "aws.redshift.dev",
                        "name": "Redshift Dev"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {
                        "host": "aws.redshift.dev",
                        "name": "Redshift Dev"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {
                        "host": "aws.redshift.dev",
                        "name": "API Example Test Warehouse Update"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.warehouses.updateWarehouse('kjU72LCJexvrqL7G4TMHHN', { name: 'Redshift Dev', settings: { host: 'aws.redshift.dev' } })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    UpdateWarehouseV1Input input = UpdateWarehouseV1Input.fromJson(\n      \"{\\\"name\\\":\\\"Redshift Dev\\\",\\\"settings\\\":{\\\"host\\\":\\\"aws.redshift.dev\\\"}}\"\n    );\n    System.out.println(api.updateWarehouse(\"kjU72LCJexvrqL7G4TMHHN\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}/edge-functions/disable": {
      "patch": {
        "summary": "Disable Edge Functions",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Disable Edge Functions for your Source.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "disableEdgeFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DisableEdgeFunctionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "edgeFunctions": {
                      "id": "680c3035-c6bb-4a34-b9b8-be5ebb7d88a7",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "downloadURL": "",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "version": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Edge Functions"
        ],
        "tags": [
          "Edge Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.edgeFunctions.disableEdgeFunctions('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    EdgeFunctionsApi api = new EdgeFunctionsApi();\n    System.out.println(api.disableEdgeFunctions(\"qQEHquLrjRDN9j1ByrChyn\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/echo": {
      "get": {
        "summary": "Echo",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "message",
            "style": "deepObject",
            "description": "Sets the response `message` field. The response contains this field's entry.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "Sets the response `message` field. The response contains this field's entry.",
              "type": "string",
              "title": "message"
            },
            "example": "Hello, World!"
          },
          {
            "in": "query",
            "required": false,
            "name": "delay",
            "style": "deepObject",
            "description": "The desired response delay, in milliseconds.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The desired response delay, in milliseconds.",
              "type": "number",
              "title": "delay"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerError",
            "style": "deepObject",
            "description": "If `true`, returns an HTTP `4xx` error that contains the string in `message`.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "If `true`, returns an HTTP `4xx` error that contains the string in `message`.",
              "type": "boolean",
              "title": "triggerError"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerMultipleErrors",
            "style": "deepObject",
            "description": "If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.\n\nThis has no effect if the request sets `triggerError`.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.\n\nThis has no effect if the request sets `triggerError`.",
              "type": "boolean",
              "title": "triggerMultipleErrors"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerUnexpectedError",
            "style": "deepObject",
            "description": "If `true`, triggers a `500` error.\n\nThis has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "If `true`, triggers a `500` error.\n\nThis has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.",
              "type": "boolean",
              "title": "triggerUnexpectedError"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "statusCode",
            "style": "deepObject",
            "description": "Sets the HTTP status code to return.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "Sets the HTTP status code to return.",
              "type": "number",
              "title": "statusCode"
            }
          }
        ],
        "deprecated": false,
        "description": "Public Echo endpoint.",
        "operationId": "echo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EchoV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "method": "get",
                    "message": "Hello, World!",
                    "headers": {
                      "<omitted>": "<omitted>"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EchoV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "method": "get",
                    "message": "Hello, World!",
                    "headers": {
                      "<omitted>": "<omitted>"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EchoAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "method": "get",
                    "message": "Hello, World!",
                    "headers": {
                      "<omitted>": "<omitted>"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "General",
          "Testing"
        ],
        "tags": [
          "Testing"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.testing.echo('Hello, World!'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TestingApi api = new TestingApi();\n    System.out.println(api.echo(\"Hello, World!\", null, null, null, null, null).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}/edge-functions/upload-url": {
      "post": {
        "summary": "Generate Upload URL for Edge Functions",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Generate a temporary upload URL that can be used to upload an Edge Functions bundle.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "generateUploadURLForEdgeFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GenerateUploadURLForEdgeFunctionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "uploadURL": "<upload_url>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Edge Functions"
        ],
        "tags": [
          "Edge Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.edgeFunctions.generateUploadURLForEdgeFunctions('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    EdgeFunctionsApi api = new EdgeFunctionsApi();\n    System.out.println(api.generateUploadURLForEdgeFunctions(\"qQEHquLrjRDN9j1ByrChyn\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/advanced-sync-schedule": {
      "get": {
        "summary": "Get Advanced Sync Schedule from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the advanced sync schedule for a Warehouse.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getAdvancedSyncScheduleFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.selectiveSync.getAdvancedSyncScheduleFromWarehouse('kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SelectiveSyncApi api = new SelectiveSyncApi();\n    System.out.println(api.getAdvancedSyncScheduleFromWarehouse(\"kjU72LCJexvrqL7G4TMHHN\").getData());\n  }\n}\n"
          }
        ]
      },
      "put": {
        "summary": "Replace Advanced Sync Schedule for Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replaceAdvancedSyncScheduleForWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Input"
              },
              "example": {
                "enabled": true,
                "schedule": {
                  "times": [
                    {
                      "enabled": true,
                      "hourOfDay": 7
                    },
                    {
                      "enabled": false,
                      "hourOfDay": 5
                    },
                    {
                      "enabled": true,
                      "hourOfDay": 23
                    }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Input"
              },
              "example": {
                "enabled": true,
                "schedule": {
                  "times": [
                    {
                      "enabled": true,
                      "hourOfDay": 7
                    },
                    {
                      "enabled": false,
                      "hourOfDay": 5
                    },
                    {
                      "enabled": true,
                      "hourOfDay": 23
                    }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Input"
              },
              "example": {
                "enabled": true,
                "schedule": {
                  "times": [
                    {
                      "enabled": true,
                      "hourOfDay": 7
                    },
                    {
                      "enabled": false,
                      "hourOfDay": 5
                    },
                    {
                      "enabled": true,
                      "hourOfDay": 23
                    }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.selectiveSync.replaceAdvancedSyncScheduleForWarehouse('kjU72LCJexvrqL7G4TMHHN', {\n      enabled: true,\n      schedule: {\n        times: [\n          { enabled: true, hourOfDay: 7 },\n          { enabled: false, hourOfDay: 5 },\n          { enabled: true, hourOfDay: 23 },\n        ],\n        timezone: 'America/Vancouver',\n      },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SelectiveSyncApi api = new SelectiveSyncApi();\n    ReplaceAdvancedSyncScheduleForWarehouseV1Input input = ReplaceAdvancedSyncScheduleForWarehouseV1Input.fromJson(\n      \"{\\\"enabled\\\":true,\\\"schedule\\\":{\\\"times\\\":[{\\\"enabled\\\":true,\\\"hourOfDay\\\":7},{\\\"enabled\\\":false,\\\"hourOfDay\\\":5},{\\\"enabled\\\":true,\\\"hourOfDay\\\":23}],\\\"timezone\\\":\\\"America/Vancouver\\\"}}\"\n    );\n    System.out.println(api.replaceAdvancedSyncScheduleForWarehouse(\"kjU72LCJexvrqL7G4TMHHN\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/{id}": {
      "get": {
        "summary": "Get Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the Audience by id and spaceId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 100 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getAudience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAudienceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audience": {
                      "id": "id",
                      "spaceId": "spaceId",
                      "name": "name",
                      "description": "description",
                      "key": "key",
                      "enabled": false,
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "<date>",
                      "updatedAt": "<date>"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.audiences.getAudience('spaceId', 'id'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    AudiencesApi api = new AudiencesApi();\n    System.out.println(api.getAudience(\"spaceId\", \"id\").getData());\n  }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Remove Audience from Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an Audience by id and spaceId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Audience Deleted` event in the [audit trail](/tag/Audit-Trail).\n\n\nThe rate limit for this endpoint is 20 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "removeAudienceFromSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveAudienceFromSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.audiences.removeAudienceFromSpace('spaceId', 'id'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    AudiencesApi api = new AudiencesApi();\n    System.out.println(api.removeAudienceFromSpace(\"spaceId\", \"id\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Audience for Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the enabled status for an audience\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Audience Modified` event in the [audit trail](/tag/Audit-Trail).\n\n• Note that when an Audience is updated, the Audience will be locked from future edits until the changes have been incorporated. You can find more information [in the Segment docs](https://segment-docs.netlify.app/docs/engage/audiences/#editing-realtime-audiences-and-traits).\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateAudienceForSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAudienceForSpaceInput"
              },
              "example": {
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateAudienceForSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audience": {
                      "id": "123",
                      "spaceId": "spaceId",
                      "name": "name",
                      "description": "description",
                      "key": "key",
                      "enabled": false,
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "<date>",
                      "updatedAt": "<date>"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.audiences.updateAudienceForSpace('spaceId', 'id', { enabled: false }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    AudiencesApi api = new AudiencesApi();\n    UpdateAudienceForSpaceInput input = UpdateAudienceForSpaceInput.fromJson(\"{\\\"enabled\\\":false}\");\n    System.out.println(api.updateAudienceForSpace(\"spaceId\", \"id\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/computed-traits/{id}": {
      "get": {
        "summary": "Get Computed Trait",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the Computed Trait by id and spaceId\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 100 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getComputedTrait",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetComputedTraitAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "computedTrait": {
                      "id": "id",
                      "spaceId": "spaceId",
                      "name": "name",
                      "description": "description",
                      "key": "key",
                      "enabled": false,
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "<date>",
                      "updatedAt": "<date>"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.computedTraits.getComputedTrait('spaceId', 'id'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ComputedTraitsApi api = new ComputedTraitsApi();\n    System.out.println(api.getComputedTrait(\"spaceId\", \"id\").getData());\n  }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Remove Computed Trait from Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Computed Trait by id and spaceId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Computed Trait Deleted` event in the [audit trail](/tag/Audit-Trail).\n\n\nThe rate limit for this endpoint is 20 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "removeComputedTraitFromSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveComputedTraitFromSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.computedTraits.removeComputedTraitFromSpace('spaceId', 'id'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ComputedTraitsApi api = new ComputedTraitsApi();\n    System.out.println(api.removeComputedTraitFromSpace(\"spaceId\", \"id\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Computed Trait for Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the enabled status for a computed trait.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Computed Trait Modified` event in the [audit trail](/tag/Audit-Trail).\n\n• Note that when a Computed Trait is updated, the Computed Trait will be locked from future edits until the changes have been incorporated. You can find more information [in the Segment docs](https://segment-docs.netlify.app/docs/unify/traits/computed-traits/#editing-realtime-traits).\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateComputedTraitForSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComputedTraitForSpaceAlphaInput"
              },
              "example": {
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateComputedTraitForSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "computedTrait": {
                      "id": "id",
                      "spaceId": "spaceId",
                      "name": "name",
                      "description": "description",
                      "key": "key",
                      "enabled": false,
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "<date>",
                      "updatedAt": "<date>"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.computedTraits.updateComputedTraitForSpace('spaceId', 'id', { enabled: false }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ComputedTraitsApi api = new ComputedTraitsApi();\n    UpdateComputedTraitForSpaceAlphaInput input = UpdateComputedTraitForSpaceAlphaInput.fromJson(\"{\\\"enabled\\\":false}\");\n    System.out.println(api.updateComputedTraitForSpace(\"spaceId\", \"id\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connection-state": {
      "get": {
        "summary": "Get Connection State from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Verifies the state of Warehouse connection settings.\n\n\nThe rate limit for this endpoint is 200 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getConnectionStateFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connectionState": "CONNECTED"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connectionState": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connectionState": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connectionState": "CONNECTED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.getConnectionStateFromWarehouse('kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    System.out.println(api.getConnectionStateFromWarehouse(\"kjU72LCJexvrqL7G4TMHHN\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/usage/api-calls/sources/daily": {
      "get": {
        "summary": "Get Daily Per Source API Calls Usage",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "period",
            "style": "deepObject",
            "description": "The start of the usage month in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            },
            "example": "2021-02-01"
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination input for per Source API calls counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative per-source API call counts for a usage period.",
        "operationId": "getDailyPerSourceAPICallsUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceAPICallsUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceAPICallsUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceAPICallsUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceAPICallsUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Usage",
          "API Calls"
        ],
        "tags": [
          "API Calls"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.apiCalls.getDailyPerSourceAPICallsUsage('2021-02-01', { count: 10 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ApiCallsApi api = new ApiCallsApi();\n    System.out.println(api.getDailyPerSourceAPICallsUsage(\"2021-02-01\", PaginationInput.fromJson(\"{\\\"count\\\":10}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/usage/mtu/sources/daily": {
      "get": {
        "summary": "Get Daily Per Source MTU Usage",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "period",
            "style": "deepObject",
            "description": "The start of the usage month, in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month, in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            },
            "example": "2021-02-01"
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination input for per Source MTU counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative per-source MTU counts for a usage period.",
        "operationId": "getDailyPerSourceMTUUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceMTUUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceMTUUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceMTUUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceMTUUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Usage",
          "Monthly Tracked Users"
        ],
        "tags": [
          "Monthly Tracked Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.monthlyTrackedUsers.getDailyPerSourceMTUUsage('2021-02-01', { count: 10 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    MonthlyTrackedUsersApi api = new MonthlyTrackedUsersApi();\n    System.out.println(api.getDailyPerSourceMTUUsage(\"2021-02-01\", PaginationInput.fromJson(\"{\\\"count\\\":10}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/usage/api-calls/daily": {
      "get": {
        "summary": "Get Daily Workspace API Calls Usage",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "period",
            "style": "deepObject",
            "description": "The start of the usage month in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            },
            "example": "2021-02-01"
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination input for Workspace API call counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative API call counts for a usage period.",
        "operationId": "getDailyWorkspaceAPICallsUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceAPICallsUsage": [
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceAPICallsUsage": [
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceAPICallsUsage": [
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceAPICallsUsage": [
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Usage",
          "API Calls"
        ],
        "tags": [
          "API Calls"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.apiCalls.getDailyWorkspaceAPICallsUsage('2021-02-01', { count: 10 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ApiCallsApi api = new ApiCallsApi();\n    System.out.println(api.getDailyWorkspaceAPICallsUsage(\"2021-02-01\", PaginationInput.fromJson(\"{\\\"count\\\":10}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/usage/mtu/daily": {
      "get": {
        "summary": "Get Daily Workspace MTU Usage",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "period",
            "style": "deepObject",
            "description": "The start of the usage month, in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month, in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            },
            "example": "2021-02-01"
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination input for Workspace MTU counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative MTU counts for a usage period.",
        "operationId": "getDailyWorkspaceMTUUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceMTUUsage": [
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceMTUUsage": [
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceMTUUsage": [
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceMTUUsage": [
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Usage",
          "Monthly Tracked Users"
        ],
        "tags": [
          "Monthly Tracked Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.monthlyTrackedUsers.getDailyWorkspaceMTUUsage('2021-02-01', { count: 10 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    MonthlyTrackedUsersApi api = new MonthlyTrackedUsersApi();\n    System.out.println(api.getDailyWorkspaceMTUUsage(\"2021-02-01\", PaginationInput.fromJson(\"{\\\"count\\\":10}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/catalog/destinations/{destinationMetadataId}": {
      "get": {
        "summary": "Get Destination Metadata",
        "parameters": [
          {
            "in": "path",
            "name": "destinationMetadataId",
            "required": true,
            "example": "54521fd525e721e32a72ee91",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Destination catalog item by its id.",
        "operationId": "getDestinationMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationMetadata": {
                      "id": "54521fd525e721e32a72ee91",
                      "name": "Amplitude",
                      "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                      "slug": "amplitude",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "appendFieldsToEventProps",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                          "required": false,
                          "label": "Append Fields To Event Properties"
                        },
                        {
                          "name": "batchEvents",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                          "required": false,
                          "label": "Batch Events"
                        },
                        {
                          "name": "deviceIdFromUrlParam",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                          "required": false,
                          "label": "Set Device ID From URL Parameter amp_device_id"
                        },
                        {
                          "name": "enableLocationListening",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                          "required": false,
                          "label": "Enable Location Listening"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": [
                        "Analytics"
                      ],
                      "website": "http://amplitude.com",
                      "components": [
                        {
                          "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": [
                        "Amplitude"
                      ],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": false
                      },
                      "supportedPlatforms": {
                        "browser": true,
                        "mobile": true,
                        "server": true,
                        "warehouse": false
                      },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": [],
                      "contacts": [
                        {
                          "name": "Mike Ottavi-Brannon",
                          "email": "mike@amplitude.com",
                          "role": "Principle Product Manager",
                          "isPrimary": true
                        },
                        {
                          "name": "Kurt Norwood",
                          "email": "kurt@amplitude.com",
                          "role": "Software Engineer",
                          "isPrimary": false
                        }
                      ],
                      "partnerOwned": false,
                      "supportedRegions": [
                        "eu-west-1",
                        "us-west-2"
                      ],
                      "regionEndpoints": [
                        "US",
                        "EU"
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationMetadata": {
                      "id": "54521fd525e721e32a72ee91",
                      "name": "Amplitude",
                      "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                      "slug": "amplitude",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "appendFieldsToEventProps",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                          "required": false,
                          "label": "Append Fields To Event Properties"
                        },
                        {
                          "name": "batchEvents",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                          "required": false,
                          "label": "Batch Events"
                        },
                        {
                          "name": "deviceIdFromUrlParam",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                          "required": false,
                          "label": "Set Device ID From URL Parameter amp_device_id"
                        },
                        {
                          "name": "enableLocationListening",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                          "required": false,
                          "label": "Enable Location Listening"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": [
                        "Analytics"
                      ],
                      "website": "http://amplitude.com",
                      "components": [
                        {
                          "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": [
                        "Amplitude"
                      ],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": false
                      },
                      "supportedPlatforms": {
                        "browser": true,
                        "mobile": true,
                        "server": true,
                        "warehouse": false
                      },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": [],
                      "contacts": [
                        {
                          "name": "Mike Ottavi-Brannon",
                          "email": "mike@amplitude.com",
                          "role": "Principle Product Manager",
                          "isPrimary": true
                        },
                        {
                          "name": "Kurt Norwood",
                          "email": "kurt@amplitude.com",
                          "role": "Software Engineer",
                          "isPrimary": false
                        }
                      ],
                      "partnerOwned": false,
                      "supportedRegions": [
                        "eu-west-1",
                        "us-west-2"
                      ],
                      "regionEndpoints": [
                        "US",
                        "EU"
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationMetadata": {
                      "id": "54521fd525e721e32a72ee91",
                      "name": "Amplitude",
                      "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                      "slug": "amplitude",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "appendFieldsToEventProps",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                          "required": false,
                          "label": "Append Fields To Event Properties"
                        },
                        {
                          "name": "batchEvents",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                          "required": false,
                          "label": "Batch Events"
                        },
                        {
                          "name": "deviceIdFromUrlParam",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                          "required": false,
                          "label": "Set Device ID From URL Parameter amp_device_id"
                        },
                        {
                          "name": "enableLocationListening",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                          "required": false,
                          "label": "Enable Location Listening"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": [
                        "Analytics"
                      ],
                      "website": "http://amplitude.com",
                      "components": [
                        {
                          "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": [
                        "Amplitude"
                      ],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": false
                      },
                      "supportedPlatforms": {
                        "browser": true,
                        "mobile": true,
                        "server": true,
                        "warehouse": false
                      },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": [],
                      "contacts": [
                        {
                          "name": "Mike Ottavi-Brannon",
                          "email": "mike@amplitude.com",
                          "role": "Principle Product Manager",
                          "isPrimary": true
                        },
                        {
                          "name": "Kurt Norwood",
                          "email": "kurt@amplitude.com",
                          "role": "Software Engineer",
                          "isPrimary": false
                        }
                      ],
                      "partnerOwned": false,
                      "supportedRegions": [
                        "eu-west-1",
                        "us-west-2"
                      ],
                      "regionEndpoints": [
                        "US",
                        "EU"
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationMetadata": {
                      "id": "54521fd525e721e32a72ee91",
                      "name": "Amplitude",
                      "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                      "slug": "amplitude",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "appendFieldsToEventProps",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                          "required": false,
                          "label": "Append Fields To Event Properties"
                        },
                        {
                          "name": "batchEvents",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                          "required": false,
                          "label": "Batch Events"
                        },
                        {
                          "name": "deviceIdFromUrlParam",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                          "required": false,
                          "label": "Set Device ID From URL Parameter amp_device_id"
                        },
                        {
                          "name": "enableLocationListening",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                          "required": false,
                          "label": "Enable Location Listening"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": [
                        "Analytics"
                      ],
                      "website": "http://amplitude.com",
                      "components": [
                        {
                          "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": [
                        "Amplitude"
                      ],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": false
                      },
                      "supportedPlatforms": {
                        "browser": true,
                        "mobile": true,
                        "server": true,
                        "warehouse": false
                      },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": [],
                      "contacts": [
                        {
                          "name": "Mike Ottavi-Brannon",
                          "email": "mike@amplitude.com",
                          "role": "Principle Product Manager",
                          "isPrimary": true
                        },
                        {
                          "name": "Kurt Norwood",
                          "email": "kurt@amplitude.com",
                          "role": "Software Engineer",
                          "isPrimary": false
                        }
                      ],
                      "partnerOwned": false,
                      "supportedRegions": [
                        "eu-west-1",
                        "us-west-2"
                      ],
                      "regionEndpoints": [
                        "US",
                        "EU"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getDestinationMetadata('54521fd525e721e32a72ee91'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    CatalogApi api = new CatalogApi();\n    System.out.println(api.getDestinationMetadata(\"54521fd525e721e32a72ee91\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/catalog/destinations": {
      "get": {
        "summary": "Get Destinations Catalog",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Required pagination parameters used to filter the Destinations catalog.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Destinations in the Segment catalog.",
        "operationId": "getDestinationsCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationsCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationsCatalog": [
                      {
                        "id": "54521fd525e721e32a72ee8e",
                        "name": "AdRoll",
                        "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                        "slug": "adroll",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                        },
                        "options": [
                          {
                            "name": "_version",
                            "type": "number",
                            "defaultValue": 2,
                            "description": "",
                            "required": false,
                            "label": "_version"
                          },
                          {
                            "name": "advId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                            "required": true,
                            "label": "Advertiser ID"
                          },
                          {
                            "name": "events",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                            "required": false,
                            "label": "Events"
                          },
                          {
                            "name": "pixId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                            "required": true,
                            "label": "Pixel ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Advertising"
                        ],
                        "website": "http://adroll.com",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                            "type": "BROWSER"
                          }
                        ],
                        "previousNames": [
                          "AdRoll"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": false,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "role": "VP of engineering",
                            "isPrimary": true
                          }
                        ],
                        "partnerOwned": false
                      },
                      {
                        "id": "54521fd525e721e32a72ee8f",
                        "name": "AppsFlyer",
                        "description": "Mobile app measurement and tracking.",
                        "slug": "appsflyer",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                        },
                        "options": [
                          {
                            "name": "androidAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                            "required": true,
                            "label": "Android App ID"
                          },
                          {
                            "name": "appleAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                            "required": true,
                            "label": "Apple App ID (iOS)"
                          },
                          {
                            "name": "appsFlyerDevKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                            "required": true,
                            "label": "AppsFlyer Dev Key"
                          },
                          {
                            "name": "canOmitAppsFlyerId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                            "required": false,
                            "label": "Can Omit AppsFlyerId"
                          },
                          {
                            "name": "fallbackToIdfv",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                            "required": false,
                            "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Attribution",
                          "Deep Linking"
                        ],
                        "website": "http://www.appsflyer.com/",
                        "components": [
                          {
                            "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                            "owner": "PARTNER",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                            "owner": "PARTNER",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "AppsFlyer"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": false,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 400
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationsCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationsCatalog": [
                      {
                        "id": "54521fd525e721e32a72ee8e",
                        "name": "AdRoll",
                        "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                        "slug": "adroll",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                        },
                        "options": [
                          {
                            "name": "_version",
                            "type": "number",
                            "defaultValue": 2,
                            "description": "",
                            "required": false,
                            "label": "_version"
                          },
                          {
                            "name": "advId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                            "required": true,
                            "label": "Advertiser ID"
                          },
                          {
                            "name": "events",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                            "required": false,
                            "label": "Events"
                          },
                          {
                            "name": "pixId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                            "required": true,
                            "label": "Pixel ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Advertising"
                        ],
                        "website": "http://adroll.com",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                            "type": "BROWSER"
                          }
                        ],
                        "previousNames": [
                          "AdRoll"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": false,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "role": "VP of engineering",
                            "isPrimary": true
                          }
                        ],
                        "partnerOwned": false
                      },
                      {
                        "id": "54521fd525e721e32a72ee8f",
                        "name": "AppsFlyer",
                        "description": "Mobile app measurement and tracking.",
                        "slug": "appsflyer",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                        },
                        "options": [
                          {
                            "name": "androidAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                            "required": true,
                            "label": "Android App ID"
                          },
                          {
                            "name": "appleAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                            "required": true,
                            "label": "Apple App ID (iOS)"
                          },
                          {
                            "name": "appsFlyerDevKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                            "required": true,
                            "label": "AppsFlyer Dev Key"
                          },
                          {
                            "name": "canOmitAppsFlyerId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                            "required": false,
                            "label": "Can Omit AppsFlyerId"
                          },
                          {
                            "name": "fallbackToIdfv",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                            "required": false,
                            "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Attribution",
                          "Deep Linking"
                        ],
                        "website": "http://www.appsflyer.com/",
                        "components": [
                          {
                            "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                            "owner": "PARTNER",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                            "owner": "PARTNER",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "AppsFlyer"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": false,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 400
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationsCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationsCatalog": [
                      {
                        "id": "54521fd525e721e32a72ee8e",
                        "name": "AdRoll",
                        "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                        "slug": "adroll",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                        },
                        "options": [
                          {
                            "name": "_version",
                            "type": "number",
                            "defaultValue": 2,
                            "description": "",
                            "required": false,
                            "label": "_version"
                          },
                          {
                            "name": "advId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                            "required": true,
                            "label": "Advertiser ID"
                          },
                          {
                            "name": "events",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                            "required": false,
                            "label": "Events"
                          },
                          {
                            "name": "pixId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                            "required": true,
                            "label": "Pixel ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Advertising"
                        ],
                        "website": "http://adroll.com",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                            "type": "BROWSER"
                          }
                        ],
                        "previousNames": [
                          "AdRoll"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": false,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "role": "VP of engineering",
                            "isPrimary": true
                          }
                        ],
                        "partnerOwned": false
                      },
                      {
                        "id": "54521fd525e721e32a72ee8f",
                        "name": "AppsFlyer",
                        "description": "Mobile app measurement and tracking.",
                        "slug": "appsflyer",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                        },
                        "options": [
                          {
                            "name": "androidAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                            "required": true,
                            "label": "Android App ID"
                          },
                          {
                            "name": "appleAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                            "required": true,
                            "label": "Apple App ID (iOS)"
                          },
                          {
                            "name": "appsFlyerDevKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                            "required": true,
                            "label": "AppsFlyer Dev Key"
                          },
                          {
                            "name": "canOmitAppsFlyerId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                            "required": false,
                            "label": "Can Omit AppsFlyerId"
                          },
                          {
                            "name": "fallbackToIdfv",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                            "required": false,
                            "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Attribution",
                          "Deep Linking"
                        ],
                        "website": "http://www.appsflyer.com/",
                        "components": [
                          {
                            "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                            "owner": "PARTNER",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                            "owner": "PARTNER",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "AppsFlyer"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": false,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 400
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationsCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationsCatalog": [
                      {
                        "id": "54521fd525e721e32a72ee8e",
                        "name": "AdRoll",
                        "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                        "slug": "adroll",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                        },
                        "options": [
                          {
                            "name": "_version",
                            "type": "number",
                            "defaultValue": 2,
                            "description": "",
                            "required": false,
                            "label": "_version"
                          },
                          {
                            "name": "advId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                            "required": true,
                            "label": "Advertiser ID"
                          },
                          {
                            "name": "events",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                            "required": false,
                            "label": "Events"
                          },
                          {
                            "name": "pixId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                            "required": true,
                            "label": "Pixel ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Advertising"
                        ],
                        "website": "http://adroll.com",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                            "type": "BROWSER"
                          }
                        ],
                        "previousNames": [
                          "AdRoll"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": false,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "role": "VP of engineering",
                            "isPrimary": true
                          }
                        ],
                        "partnerOwned": false
                      },
                      {
                        "id": "54521fd525e721e32a72ee8f",
                        "name": "AppsFlyer",
                        "description": "Mobile app measurement and tracking.",
                        "slug": "appsflyer",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                        },
                        "options": [
                          {
                            "name": "androidAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                            "required": true,
                            "label": "Android App ID"
                          },
                          {
                            "name": "appleAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                            "required": true,
                            "label": "Apple App ID (iOS)"
                          },
                          {
                            "name": "appsFlyerDevKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                            "required": true,
                            "label": "AppsFlyer Dev Key"
                          },
                          {
                            "name": "canOmitAppsFlyerId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                            "required": false,
                            "label": "Can Omit AppsFlyerId"
                          },
                          {
                            "name": "fallbackToIdfv",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                            "required": false,
                            "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Attribution",
                          "Deep Linking"
                        ],
                        "website": "http://www.appsflyer.com/",
                        "components": [
                          {
                            "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                            "owner": "PARTNER",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                            "owner": "PARTNER",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "AppsFlyer"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": false,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getDestinationsCatalog({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    CatalogApi api = new CatalogApi();\n    System.out.println(api.getDestinationsCatalog(PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/events/volume": {
      "get": {
        "summary": "Get Events Volume from Workspace",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "granularity",
            "style": "deepObject",
            "description": "The size of each bucket in the requested window.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The size of each bucket in the requested window.",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          },
          {
            "in": "query",
            "required": true,
            "name": "startTime",
            "style": "deepObject",
            "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested time frame, inclusive.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested time frame, inclusive.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2021-10-28T00:00:00Z"
          },
          {
            "in": "query",
            "required": true,
            "name": "endTime",
            "style": "deepObject",
            "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested time frame, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested time frame, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2021-10-29T16:40:00Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "style": "deepObject",
            "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "groupBy"
            },
            "example": [
              "eventType"
            ]
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "style": "deepObject",
            "description": "A list of strings which filters the results to the given\nSourceIds.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nSourceIds.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "sourceId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "eventName",
            "style": "deepObject",
            "description": "A list of strings which filters the results to the given\nEventNames.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nEventNames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "eventName"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "eventType",
            "style": "deepObject",
            "description": "A list of strings which filters the results to the given\nEventTypes.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nEventTypes.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "eventType"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "appVersion",
            "style": "deepObject",
            "description": "A list of strings which filters the results to the given\nAppVersions.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nAppVersions.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "appVersion"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination input for event volume by Workspace.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            }
          }
        ],
        "deprecated": false,
        "description": "Enumerates the Workspace event volumes over time in minute increments.\n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getEventsVolumeFromWorkspace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "path": "/observability/event_volume/v2.json",
                    "query": {
                      "workspaceId": "workspace-id",
                      "startTime": "2023-01-01T00:00:00Z",
                      "endTime": "2023-01-03T00:00:00Z",
                      "granularity": "DAY"
                    },
                    "result": [
                      {
                        "total": 32504646,
                        "series": [
                          {
                            "time": "2023-01-01T00:00:00Z",
                            "count": 15637147
                          },
                          {
                            "time": "2023-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "path": "/observability/event_volume/v2.json",
                    "query": {
                      "workspaceId": "workspace-id",
                      "startTime": "2023-01-01T00:00:00Z",
                      "endTime": "2023-01-03T00:00:00Z",
                      "granularity": "DAY"
                    },
                    "result": [
                      {
                        "total": 32504646,
                        "series": [
                          {
                            "time": "2023-01-01T00:00:00Z",
                            "count": 15637147
                          },
                          {
                            "time": "2023-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "path": "/observability/event_volume/v2.json",
                    "query": {
                      "workspaceId": "workspace-id",
                      "startTime": "2023-01-01T00:00:00Z",
                      "endTime": "2023-01-03T00:00:00Z",
                      "granularity": "DAY"
                    },
                    "result": [
                      {
                        "total": 32504646,
                        "series": [
                          {
                            "time": "2023-01-01T00:00:00Z",
                            "count": 15637147
                          },
                          {
                            "time": "2023-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "path": "/observability/event_volume/v2.json",
                    "query": {
                      "workspaceId": "workspace-id",
                      "startTime": "2023-01-01T00:00:00Z",
                      "endTime": "2023-01-03T00:00:00Z",
                      "granularity": "DAY"
                    },
                    "result": [
                      {
                        "total": 32504646,
                        "series": [
                          {
                            "time": "2023-01-01T00:00:00Z",
                            "count": 15637147
                          },
                          {
                            "time": "2023-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Monitoring",
          "Events"
        ],
        "tags": [
          "Events"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.events.getEventsVolumeFromWorkspace('DAY', '2021-10-28T00:00:00Z', '2021-10-29T16:40:00Z'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    EventsApi api = new EventsApi();\n    System.out.println(\n      api\n        .getEventsVolumeFromWorkspace(\n          \"DAY\",\n          \"2021-10-28T00:00:00Z\",\n          \"2021-10-29T16:40:00Z\",\n          Arrays.asList(\"eventType\"),\n          null,\n          null,\n          null,\n          null,\n          null\n        )\n        .getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/destination/{destinationId}/filters/{filterId}": {
      "get": {
        "summary": "Get Filter in Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "example": "xx6AySGeFExzdv2Gw2EuhV",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Destination filter by id.",
        "operationId": "getFilterInDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterInDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterInDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterInDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterInDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "event = \"Order Completed\"",
                      "actions": [
                        {
                          "type": "DROP_PROPERTIES",
                          "fields": {
                            "properties": [
                              "userId",
                              "secretValue"
                            ]
                          }
                        }
                      ],
                      "title": "Order Completed",
                      "description": "This filter probably does nothing",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinationFilters.getFilterInDestination('fP7qoQw2HTWt9WdMr718gn', 'xx6AySGeFExzdv2Gw2EuhV'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationFiltersApi api = new DestinationFiltersApi();\n    System.out.println(api.getFilterInDestination(\"fP7qoQw2HTWt9WdMr718gn\", \"xx6AySGeFExzdv2Gw2EuhV\").getData());\n  }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Remove Filter from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "example": "2DrXi3N7S85LobhzPphZz0uFzJ4",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Destination filter.\n\n\n\n• When called, this endpoint may generate the `Destination Filter Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "removeFilterFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinationFilters.removeFilterFromDestination('fP7qoQw2HTWt9WdMr718gn', '2DrXi3N7S85LobhzPphZz0uFzJ4'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationFiltersApi api = new DestinationFiltersApi();\n    System.out.println(api.removeFilterFromDestination(\"fP7qoQw2HTWt9WdMr718gn\", \"2DrXi3N7S85LobhzPphZz0uFzJ4\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Filter for Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "example": "xx6AySGeFExzdv2Gw2EuhV",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a filter in a Destination.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Destination Filter Enabled\n* Destination Filter Disabled\n      ",
        "operationId": "updateFilterForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterForDestinationV1Input"
              },
              "example": {
                "if": "!(type = \"track\")",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterForDestinationV1Input"
              },
              "example": {
                "if": "!(type = \"track\")",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterForDestinationV1Input"
              },
              "example": {
                "if": "!(type = \"track\")",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinationFilters.updateFilterForDestination('fP7qoQw2HTWt9WdMr718gn', 'xx6AySGeFExzdv2Gw2EuhV', {\n      if: '!(type = \"track\")',\n      actions: [{ type: 'DROP' }],\n      title: 'Allow Track',\n      description: 'Allows track calls through to the destination.',\n      enabled: true,\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationFiltersApi api = new DestinationFiltersApi();\n    UpdateFilterForDestinationV1Input input = UpdateFilterForDestinationV1Input.fromJson(\n      \"{\\\"if\\\":\\\"!(type = \\\\\\\"track\\\\\\\")\\\",\\\"actions\\\":[{\\\"type\\\":\\\"DROP\\\"}],\\\"title\\\":\\\"Allow Track\\\",\\\"description\\\":\\\"Allows track calls through to the destination.\\\",\\\"enabled\\\":true}\"\n    );\n    System.out.println(api.updateFilterForDestination(\"fP7qoQw2HTWt9WdMr718gn\", \"xx6AySGeFExzdv2Gw2EuhV\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/functions/{functionId}/versions/{versionId}": {
      "get": {
        "summary": "Get Function Version",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "versionId",
            "required": true,
            "example": "2Ma03fahSqLoEzQfV5o2aSfVEHs",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Function version.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getFunctionVersion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionVersionAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "version": {
                      "author": "",
                      "code": "async function onTrack(event, settings) {console.log('Test')}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.getFunctionVersion('sfnc_wXzcDGFR3KmjLDrtSawNHf', '2Ma03fahSqLoEzQfV5o2aSfVEHs'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    System.out.println(api.getFunctionVersion(\"sfnc_wXzcDGFR3KmjLDrtSawNHf\", \"2Ma03fahSqLoEzQfV5o2aSfVEHs\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}/edge-functions/latest": {
      "get": {
        "summary": "Get Latest from Edge Functions",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Get the latest Edge Functions for your Source.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getLatestFromEdgeFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetLatestFromEdgeFunctionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "edgeFunctions": {
                      "id": "18de22b4-5d40-4253-8c1e-4631e302ccb2",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "downloadURL": "https://cdn.edgefn.segment.build/qQEHquLrjRDN9j1ByrChyn/18de22b4-5d40-4253-8c1e-4631e302ccb2.js",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "version": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Edge Functions"
        ],
        "tags": [
          "Edge Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.edgeFunctions.getLatestFromEdgeFunctions('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    EdgeFunctionsApi api = new EdgeFunctionsApi();\n    System.out.println(api.getLatestFromEdgeFunctions(\"qQEHquLrjRDN9j1ByrChyn\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/catalog/sources/{sourceMetadataId}": {
      "get": {
        "summary": "Get Source Metadata",
        "parameters": [
          {
            "in": "path",
            "name": "sourceMetadataId",
            "required": true,
            "example": "1bow82lmk",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Source catalog item by its id.",
        "operationId": "getSourceMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceMetadata": {
                      "id": "1bow82lmk",
                      "slug": "stripe",
                      "name": "Stripe",
                      "categories": [
                        "Payments"
                      ],
                      "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                        "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                        "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceMetadata": {
                      "id": "1bow82lmk",
                      "slug": "stripe",
                      "name": "Stripe",
                      "categories": [
                        "Payments"
                      ],
                      "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                        "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                        "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceMetadata": {
                      "id": "1bow82lmk",
                      "slug": "stripe",
                      "name": "Stripe",
                      "categories": [
                        "Payments"
                      ],
                      "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                        "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                        "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceMetadata": {
                      "id": "1bow82lmk",
                      "slug": "stripe",
                      "name": "Stripe",
                      "categories": [
                        "Payments"
                      ],
                      "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                        "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                        "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getSourceMetadata('1bow82lmk'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    CatalogApi api = new CatalogApi();\n    System.out.println(api.getSourceMetadata(\"1bow82lmk\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/catalog/sources": {
      "get": {
        "summary": "Get Sources Catalog",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Sources in the Segment catalog.",
        "operationId": "getSourcesCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourcesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourcesCatalog": [
                      {
                        "id": "XE0vf1bTDh",
                        "slug": "active-campaign",
                        "name": "ActiveCampaign",
                        "categories": [
                          "Email Marketing"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF",
                          "alt": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      },
                      {
                        "id": "pndBZqzhCE",
                        "slug": "addshoppers-suppression",
                        "name": "AddShoppers Suppression",
                        "categories": [
                          "Email Marketing",
                          "Analytics"
                        ],
                        "description": "AddShoppers offers clients the ability to send marketing emails to users who visit their site but they have not yet identified.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/RIZBQaIfSlmtOLWSCkCR",
                          "mark": "https://cdn.filepicker.io/api/file/8OTdK7HvRtOIXYexhtmD"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 167
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourcesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourcesCatalog": [
                      {
                        "id": "XE0vf1bTDh",
                        "slug": "active-campaign",
                        "name": "ActiveCampaign",
                        "categories": [
                          "Email Marketing"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF",
                          "alt": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      },
                      {
                        "id": "pndBZqzhCE",
                        "slug": "addshoppers-suppression",
                        "name": "AddShoppers Suppression",
                        "categories": [
                          "Email Marketing",
                          "Analytics"
                        ],
                        "description": "AddShoppers offers clients the ability to send marketing emails to users who visit their site but they have not yet identified.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/RIZBQaIfSlmtOLWSCkCR",
                          "mark": "https://cdn.filepicker.io/api/file/8OTdK7HvRtOIXYexhtmD"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 167
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourcesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourcesCatalog": [
                      {
                        "id": "XE0vf1bTDh",
                        "slug": "active-campaign",
                        "name": "ActiveCampaign",
                        "categories": [
                          "Email Marketing"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF",
                          "alt": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      },
                      {
                        "id": "pndBZqzhCE",
                        "slug": "addshoppers-suppression",
                        "name": "AddShoppers Suppression",
                        "categories": [
                          "Email Marketing",
                          "Analytics"
                        ],
                        "description": "AddShoppers offers clients the ability to send marketing emails to users who visit their site but they have not yet identified.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/RIZBQaIfSlmtOLWSCkCR",
                          "mark": "https://cdn.filepicker.io/api/file/8OTdK7HvRtOIXYexhtmD"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 167
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourcesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourcesCatalog": [
                      {
                        "id": "XE0vf1bTDh",
                        "slug": "active-campaign",
                        "name": "ActiveCampaign",
                        "categories": [
                          "Email Marketing"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF",
                          "alt": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      },
                      {
                        "id": "pndBZqzhCE",
                        "slug": "addshoppers-suppression",
                        "name": "AddShoppers Suppression",
                        "categories": [
                          "Email Marketing",
                          "Analytics"
                        ],
                        "description": "AddShoppers offers clients the ability to send marketing emails to users who visit their site but they have not yet identified.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/RIZBQaIfSlmtOLWSCkCR",
                          "mark": "https://cdn.filepicker.io/api/file/8OTdK7HvRtOIXYexhtmD"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 167
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getSourcesCatalog({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    CatalogApi api = new CatalogApi();\n    System.out.println(api.getSourcesCatalog(PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}": {
      "get": {
        "summary": "Get Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the Space by id.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Spaces feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "space": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Default Space Papi E2E",
                      "slug": "default-space-papi-e2e"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Spaces"
        ],
        "tags": [
          "Spaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.spaces.getSpace('9aQ1Lj62S4bomZKLF4DPqW'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SpacesApi api = new SpacesApi();\n    System.out.println(api.getSpace(\"9aQ1Lj62S4bomZKLF4DPqW\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/destinations/{destinationId}/subscriptions/{id}": {
      "get": {
        "summary": "Get Subscription from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "iUyx2UdPSvp4uJtYAhjTup",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Destination subscription by id.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getSubscriptionFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSubscriptionFromDestinationAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "subscription": {
                      "id": "iUyx2UdPSvp4uJtYAhjTup",
                      "name": "Example Subscription",
                      "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                      "actionSlug": "someActionSlug",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "modelId": "",
                      "enabled": false,
                      "trigger": "type = \"track\"",
                      "settings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.getSubscriptionFromDestination('fP7qoQw2HTWt9WdMr718gn', 'iUyx2UdPSvp4uJtYAhjTup'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    System.out.println(api.getSubscriptionFromDestination(\"fP7qoQw2HTWt9WdMr718gn\", \"iUyx2UdPSvp4uJtYAhjTup\").getData());\n  }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Remove Subscription from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "bXbWrgh8vAeWioqx6Kg5vb",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Destination subscription.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "removeSubscriptionFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSubscriptionFromDestinationAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.removeSubscriptionFromDestination('fP7qoQw2HTWt9WdMr718gn', 'bXbWrgh8vAeWioqx6Kg5vb'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    System.out.println(api.removeSubscriptionFromDestination(\"fP7qoQw2HTWt9WdMr718gn\", \"bXbWrgh8vAeWioqx6Kg5vb\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Subscription for Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "mAdhWCVCmFadguoGcqP3vN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Destination subscription.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateSubscriptionForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionForDestinationAlphaInput"
              },
              "example": {
                "input": {
                  "name": "Updated name"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSubscriptionForDestinationAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "subscription": {
                      "id": "mAdhWCVCmFadguoGcqP3vN",
                      "name": "Updated name",
                      "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                      "actionSlug": "someActionSlug",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "reverseETLModelId": "",
                      "trigger": "type = \"track\"",
                      "enabled": false,
                      "settings": {},
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinations.updateSubscriptionForDestination('fP7qoQw2HTWt9WdMr718gn', 'mAdhWCVCmFadguoGcqP3vN', {\n      input: { name: 'Updated name' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    UpdateSubscriptionForDestinationAlphaInput input = UpdateSubscriptionForDestinationAlphaInput.fromJson(\n      \"{\\\"input\\\":{\\\"name\\\":\\\"Updated name\\\"}}\"\n    );\n    System.out.println(api.updateSubscriptionForDestination(\"fP7qoQw2HTWt9WdMr718gn\", \"mAdhWCVCmFadguoGcqP3vN\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get User",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "example": "sgJDWk3K21k6LE3tLU9nRK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a user given their id.",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "user": {
                      "id": "sgJDWk3K21k6LE3tLU9nRK",
                      "name": "",
                      "email": "papi@segment.com",
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "user": {
                      "id": "sgJDWk3K21k6LE3tLU9nRK",
                      "name": "",
                      "email": "papi@segment.com",
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "user": {
                      "id": "sgJDWk3K21k6LE3tLU9nRK",
                      "name": "",
                      "email": "papi@segment.com",
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "user": {
                      "id": "sgJDWk3K21k6LE3tLU9nRK",
                      "name": "",
                      "email": "papi@segment.com",
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.getUser('sgJDWk3K21k6LE3tLU9nRK'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    System.out.println(api.getUser(\"sgJDWk3K21k6LE3tLU9nRK\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/catalog/warehouses/{warehouseMetadataId}": {
      "get": {
        "summary": "Get Warehouse Metadata",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseMetadataId",
            "required": true,
            "example": "55d3d3aea3c",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Warehouse catalog item by its id.",
        "operationId": "getWarehouseMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouseMetadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        {
                          "name": "port",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "database",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "hostname",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "password",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "username",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "ciphertext",
                          "required": true,
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouseMetadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        {
                          "name": "port",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "database",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "hostname",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "password",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "username",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "ciphertext",
                          "required": true,
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouseMetadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        {
                          "name": "port",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "database",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "hostname",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "password",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "username",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "ciphertext",
                          "required": true,
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouseMetadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        {
                          "name": "port",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "database",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "hostname",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "password",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "username",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "ciphertext",
                          "required": true,
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getWarehouseMetadata('55d3d3aea3c'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    CatalogApi api = new CatalogApi();\n    System.out.println(api.getWarehouseMetadata(\"55d3d3aea3c\").getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/catalog/warehouses": {
      "get": {
        "summary": "Get Warehouses Catalog",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Required pagination params used to filter the Warehouses catalog.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Warehouses in the Segment catalog.",
        "operationId": "getWarehousesCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehousesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehousesCatalog": [
                      {
                        "id": "WcjBCzUGff",
                        "slug": "azuresqldw",
                        "name": "Azure SQL Data Warehouse",
                        "description": "Connector for Azure SQL Data Warehouse",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                          "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                          "alt": ""
                        },
                        "options": []
                      },
                      {
                        "id": "kwX50Df0hr",
                        "slug": "bigquery",
                        "name": "BigQuery",
                        "description": "Powered by Google Cloud Platform",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/bDzeRa75SZc6FfgfoUK6",
                          "mark": "https://cdn.filepicker.io/api/file/Vk6iFlMvQeynbg30ZEtt",
                          "alt": "https://cdn.filepicker.io/api/file/TXjmvgYRUuAa5ZfzNhmK"
                        },
                        "options": [
                          {
                            "name": "gc-project",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 6
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehousesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehousesCatalog": [
                      {
                        "id": "WcjBCzUGff",
                        "slug": "azuresqldw",
                        "name": "Azure SQL Data Warehouse",
                        "description": "Connector for Azure SQL Data Warehouse",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                          "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                          "alt": ""
                        },
                        "options": []
                      },
                      {
                        "id": "kwX50Df0hr",
                        "slug": "bigquery",
                        "name": "BigQuery",
                        "description": "Powered by Google Cloud Platform",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/bDzeRa75SZc6FfgfoUK6",
                          "mark": "https://cdn.filepicker.io/api/file/Vk6iFlMvQeynbg30ZEtt",
                          "alt": "https://cdn.filepicker.io/api/file/TXjmvgYRUuAa5ZfzNhmK"
                        },
                        "options": [
                          {
                            "name": "gc-project",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 6
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehousesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehousesCatalog": [
                      {
                        "id": "WcjBCzUGff",
                        "slug": "azuresqldw",
                        "name": "Azure SQL Data Warehouse",
                        "description": "Connector for Azure SQL Data Warehouse",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                          "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                          "alt": ""
                        },
                        "options": []
                      },
                      {
                        "id": "kwX50Df0hr",
                        "slug": "bigquery",
                        "name": "BigQuery",
                        "description": "Powered by Google Cloud Platform",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/bDzeRa75SZc6FfgfoUK6",
                          "mark": "https://cdn.filepicker.io/api/file/Vk6iFlMvQeynbg30ZEtt",
                          "alt": "https://cdn.filepicker.io/api/file/TXjmvgYRUuAa5ZfzNhmK"
                        },
                        "options": [
                          {
                            "name": "gc-project",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 6
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehousesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehousesCatalog": [
                      {
                        "id": "WcjBCzUGff",
                        "slug": "azuresqldw",
                        "name": "Azure SQL Data Warehouse",
                        "description": "Connector for Azure SQL Data Warehouse",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                          "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                          "alt": ""
                        },
                        "options": []
                      },
                      {
                        "id": "kwX50Df0hr",
                        "slug": "bigquery",
                        "name": "BigQuery",
                        "description": "Powered by Google Cloud Platform",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/bDzeRa75SZc6FfgfoUK6",
                          "mark": "https://cdn.filepicker.io/api/file/Vk6iFlMvQeynbg30ZEtt",
                          "alt": "https://cdn.filepicker.io/api/file/TXjmvgYRUuAa5ZfzNhmK"
                        },
                        "options": [
                          {
                            "name": "gc-project",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 6
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getWarehousesCatalog({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    CatalogApi api = new CatalogApi();\n    System.out.println(api.getWarehousesCatalog(PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Get Workspace",
        "parameters": [],
        "deprecated": false,
        "description": "Returns the Workspace associated with the token used to access this resource.",
        "operationId": "getWorkspace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "workspace": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "papi e2e",
                      "slug": "papi-e2e"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "workspace": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "papi e2e",
                      "slug": "papi-e2e"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "workspace": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "papi e2e",
                      "slug": "papi-e2e"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "workspace": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "papi e2e",
                      "slug": "papi-e2e"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "General",
          "Workspaces"
        ],
        "tags": [
          "Workspaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.workspaces.getWorkspace())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WorkspacesApi api = new WorkspacesApi();\n    System.out.println(api.getWorkspace().getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences": {
      "get": {
        "summary": "List Audiences",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Information about the pagination of this response.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns Audiences by spaceId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 25 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listAudiences",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAudiencesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audiences": [
                      {
                        "id": "id",
                        "spaceId": "spaceId",
                        "name": "name",
                        "description": "description",
                        "key": "key",
                        "enabled": false,
                        "createdBy": "createdBy",
                        "updatedBy": "updatedBy",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.audiences.listAudiences('spaceId'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    AudiencesApi api = new AudiencesApi();\n    System.out.println(api.listAudiences(\"spaceId\", null).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/audit-events": {
      "get": {
        "summary": "List Audit Events",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "startTime",
            "style": "deepObject",
            "description": "Filter response to events that happened after this time.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that happened after this time.",
              "type": "string",
              "title": "startTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "endTime",
            "style": "deepObject",
            "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.",
              "type": "string",
              "title": "endTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "resourceId",
            "style": "deepObject",
            "description": "Filter response to events that affect a specific resource, for example, a single Source.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that affect a specific resource, for example, a single Source.",
              "type": "string",
              "title": "resourceId"
            },
            "example": "9aQ1Lj62S4bomZKLF4DPqW"
          },
          {
            "in": "query",
            "required": false,
            "name": "resourceType",
            "style": "deepObject",
            "description": "Filter response to events that affect a specific type, for example, Sources, Warehouses, and Tracking Plans.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that affect a specific type, for example, Sources, Warehouses, and Tracking Plans.",
              "type": "string",
              "title": "resourceType"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Audit Trail events.",
        "operationId": "listAuditEvents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAuditEventsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "events": [
                      {
                        "id": "events/145876976",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Deleted",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "8AWE8yZRdy",
                        "resourceType": "function",
                        "resourceName": "Foo Func 543"
                      },
                      {
                        "id": "events/145876978",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Modified",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "sfnc_tFXvS0Rs6T",
                        "resourceType": "function",
                        "resourceName": "displayName"
                      }
                    ],
                    "pagination": {
                      "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjMtMDMtMjlUMjA6NTE6MTYuNDc5WiJ9",
                      "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjMtMDMtMjlUMjA6NTE6MTYuNDc5WiJ9"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAuditEventsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "events": [
                      {
                        "id": "events/145876976",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Deleted",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "8AWE8yZRdy",
                        "resourceType": "function",
                        "resourceName": "Foo Func 543"
                      },
                      {
                        "id": "events/145876978",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Modified",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "sfnc_tFXvS0Rs6T",
                        "resourceType": "function",
                        "resourceName": "displayName"
                      }
                    ],
                    "pagination": {
                      "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjMtMDMtMjlUMjA6NTE6MTYuNDc5WiJ9",
                      "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjMtMDMtMjlUMjA6NTE6MTYuNDc5WiJ9"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAuditEventsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "events": [
                      {
                        "id": "events/145876976",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Deleted",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "8AWE8yZRdy",
                        "resourceType": "function",
                        "resourceName": "Foo Func 543"
                      },
                      {
                        "id": "events/145876978",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Modified",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "sfnc_tFXvS0Rs6T",
                        "resourceType": "function",
                        "resourceName": "displayName"
                      }
                    ],
                    "pagination": {
                      "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjMtMDMtMjlUMjA6NTE6MTQuNzA0WiJ9",
                      "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjMtMDMtMjlUMjA6NTE6MTQuNzA0WiJ9"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAuditEventsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "events": [
                      {
                        "id": "events/145876976",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Deleted",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "8AWE8yZRdy",
                        "resourceType": "function",
                        "resourceName": "Foo Func 543"
                      },
                      {
                        "id": "events/145876978",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Modified",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "sfnc_tFXvS0Rs6T",
                        "resourceType": "function",
                        "resourceName": "displayName"
                      }
                    ],
                    "pagination": {
                      "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjMtMDMtMjlUMjA6NTE6MTEuODQyWiJ9",
                      "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjMtMDMtMjlUMjA6NTE6MTEuODQyWiJ9"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "Audit Trail"
        ],
        "tags": [
          "Audit Trail"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.auditTrail.listAuditEvents({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    AuditTrailApi api = new AuditTrailApi();\n    System.out.println(\n      api.listAuditEvents(null, null, \"9aQ1Lj62S4bomZKLF4DPqW\", null, PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/computed-traits": {
      "get": {
        "summary": "List Computed Traits",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Information about the pagination of this response.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 1
            }
          }
        ],
        "deprecated": false,
        "description": "Returns Computed Traits by spaceId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 25 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listComputedTraits",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListComputedTraitsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "computedTraits": [
                      {
                        "id": "id",
                        "spaceId": "spaceId",
                        "name": "name",
                        "description": "description",
                        "key": "key",
                        "enabled": false,
                        "createdBy": "createdBy",
                        "updatedBy": "updatedBy",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.computedTraits.listComputedTraits('spaceId', { count: 1 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ComputedTraitsApi api = new ComputedTraitsApi();\n    System.out.println(api.listComputedTraits(\"spaceId\", PaginationInput.fromJson(\"{\\\"count\\\":1}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}/connected-destinations": {
      "get": {
        "summary": "List Connected Destinations from Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Required pagination params for the request.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 1
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Destinations connected to a Source.",
        "operationId": "listConnectedDestinationsFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [],
                    "pagination": {
                      "current": "MQ==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [],
                    "pagination": {
                      "current": "MQ==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [],
                    "pagination": {
                      "current": "MQ==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [],
                    "pagination": {
                      "current": "MQ==",
                      "totalEntries": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.listConnectedDestinationsFromSource('qQEHquLrjRDN9j1ByrChyn', { count: 1 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    System.out.println(\n      api.listConnectedDestinationsFromSource(\"qQEHquLrjRDN9j1ByrChyn\", PaginationInput.fromJson(\"{\\\"count\\\":1}\")).getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connected-sources": {
      "get": {
        "summary": "List Connected Sources from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 1
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the list of Sources that are connected to a Warehouse.",
        "operationId": "listConnectedSourcesFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "ios",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "3YdEudTwjouyC5WPjpbTik"
                        ],
                        "metadata": {
                          "id": "UBrsG9RVzw",
                          "slug": "ios",
                          "name": "iOS",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.listConnectedSourcesFromWarehouse('kjU72LCJexvrqL7G4TMHHN', { count: 1 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    WarehousesApi api = new WarehousesApi();\n    System.out.println(\n      api.listConnectedSourcesFromWarehouse(\"kjU72LCJexvrqL7G4TMHHN\", PaginationInput.fromJson(\"{\\\"count\\\":1}\")).getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}/connected-warehouses": {
      "get": {
        "summary": "List Connected Warehouses from Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Required pagination params for the request.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Warehouses connected to a Source.",
        "operationId": "listConnectedWarehousesFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.listConnectedWarehousesFromSource('qQEHquLrjRDN9j1ByrChyn', { count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    System.out.println(\n      api.listConnectedWarehousesFromSource(\"qQEHquLrjRDN9j1ByrChyn\", PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/destinations/{destinationId}/delivery-metrics": {
      "get": {
        "summary": "List Delivery Metrics Summary from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "style": "deepObject",
            "description": "The id of the Source linked to the Destination.\n\nConfig API note: analogous to `parent`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The id of the Source linked to the Destination.\n\nConfig API note: analogous to `parent`.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "rh5BDZp6QDHvXFCkibm1pR"
          },
          {
            "in": "query",
            "required": false,
            "name": "startTime",
            "style": "deepObject",
            "description": "Filter events that happened after this time.\n\nDefaults to:\n- 1 hour ago if granularity is `MINUTE`.\n- 7 days ago if granularity is `HOUR`.\n- 30 days ago if granularity is `DAY`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "Filter events that happened after this time.\n\nDefaults to:\n- 1 hour ago if granularity is `MINUTE`.\n- 7 days ago if granularity is `HOUR`.\n- 30 days ago if granularity is `DAY`.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2006-01-02T15:04:05.000Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "endTime",
            "style": "deepObject",
            "description": "Filter events that happened before this time. Defaults to now if not set.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "Filter events that happened before this time. Defaults to now if not set.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2006-01-02T15:04:05.000Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "granularity",
            "style": "deepObject",
            "description": "The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.\n\nDefaults to `MINUTE` if not set.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.\n\nDefaults to `MINUTE` if not set.",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          }
        ],
        "deprecated": false,
        "description": "Get an event delivery metrics summary from a Destination.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 7 days\n- Oldest possible start time: 7 days in the past\n\n**Day**:\n- Max time range: 14 days\n- Oldest possible start time: 14 days in the past\n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listDeliveryMetricsSummaryFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDeliveryMetricsSummaryFromDestinationBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "deliveryMetricsSummary": {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "54521fd725e721e32a72eebb",
                      "metrics": [
                        {
                          "metricName": "successes",
                          "total": 120,
                          "breakdown": [
                            {
                              "metricName": "successes_on_first_attempt",
                              "value": 60
                            },
                            {
                              "metricName": "successes_after_retry",
                              "value": 60
                            }
                          ]
                        },
                        {
                          "metricName": "expired",
                          "total": 0
                        },
                        {
                          "metricName": "discarded",
                          "total": 0
                        },
                        {
                          "metricName": "retried",
                          "total": 0
                        },
                        {
                          "metricName": "time_to_success",
                          "total": 10,
                          "breakdown": [
                            {
                              "metricName": "time_to_success_average",
                              "value": 0
                            },
                            {
                              "metricName": "time_to_success_p95",
                              "value": 0
                            }
                          ]
                        },
                        {
                          "metricName": "time_to_first_attempt",
                          "total": 10,
                          "breakdown": [
                            {
                              "metricName": "time_to_first_attempt_average",
                              "value": 0
                            },
                            {
                              "metricName": "time_to_first_attempt_p95",
                              "value": 0
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDeliveryMetricsSummaryFromDestinationBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "deliveryMetricsSummary": {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "54521fd725e721e32a72eebb",
                      "metrics": [
                        {
                          "metricName": "successes",
                          "total": 120,
                          "breakdown": [
                            {
                              "metricName": "successes_on_first_attempt",
                              "value": 60
                            },
                            {
                              "metricName": "successes_after_retry",
                              "value": 60
                            }
                          ]
                        },
                        {
                          "metricName": "expired",
                          "total": 0
                        },
                        {
                          "metricName": "discarded",
                          "total": 0
                        },
                        {
                          "metricName": "retried",
                          "total": 0
                        },
                        {
                          "metricName": "time_to_success",
                          "total": 10,
                          "breakdown": [
                            {
                              "metricName": "time_to_success_average",
                              "value": 0
                            },
                            {
                              "metricName": "time_to_success_p95",
                              "value": 0
                            }
                          ]
                        },
                        {
                          "metricName": "time_to_first_attempt",
                          "total": 10,
                          "breakdown": [
                            {
                              "metricName": "time_to_first_attempt_average",
                              "value": 0
                            },
                            {
                              "metricName": "time_to_first_attempt_p95",
                              "value": 0
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinations.listDeliveryMetricsSummaryFromDestination('fP7qoQw2HTWt9WdMr718gn', 'rh5BDZp6QDHvXFCkibm1pR')\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationsApi api = new DestinationsApi();\n    System.out.println(\n      api\n        .listDeliveryMetricsSummaryFromDestination(\n          \"fP7qoQw2HTWt9WdMr718gn\",\n          \"rh5BDZp6QDHvXFCkibm1pR\",\n          \"2006-01-02T15:04:05.000Z\",\n          \"2006-01-02T15:04:05.000Z\",\n          \"DAY\"\n        )\n        .getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/functions/{functionId}/versions": {
      "get": {
        "summary": "List Function Versions",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          }
        ],
        "deprecated": false,
        "description": "Lists versions for a Function in a Workspace.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listFunctionVersions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionVersionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "versions": [
                      {
                        "author": "",
                        "code": "async function onTrack(event, settings) {console.log('Test')}"
                      },
                      {
                        "author": "",
                        "code": "async function onTrack(event, settings) {console.log('Test')}"
                      },
                      {
                        "author": "",
                        "code": "async function onTrack(event, settings) {console.log('Test')}"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.listFunctionVersions('sfnc_wXzcDGFR3KmjLDrtSawNHf', { count: 10 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    System.out.println(api.listFunctionVersions(\"sfnc_wXzcDGFR3KmjLDrtSawNHf\", PaginationInput.fromJson(\"{\\\"count\\\":10}\")).getData());\n  }\n}\n"
          }
        ]
      },
      "post": {
        "summary": "Restore Function Version",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Restore an old Function version as the latest version.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "restoreFunctionVersion",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreFunctionVersionAlphaInput"
              },
              "example": {
                "versionId": "2Ma03fahSqLoEzQfV5o2aSfVEHs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RestoreFunctionVersionAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "version": {
                      "author": "",
                      "code": "async function onTrack(event, settings) {console.log('Test')}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.restoreFunctionVersion('sfnc_wXzcDGFR3KmjLDrtSawNHf', { versionId: '2Ma03fahSqLoEzQfV5o2aSfVEHs' })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    FunctionsApi api = new FunctionsApi();\n    RestoreFunctionVersionAlphaInput input = RestoreFunctionVersionAlphaInput.fromJson(\"{\\\"versionId\\\":\\\"2Ma03fahSqLoEzQfV5o2aSfVEHs\\\"}\");\n    System.out.println(api.restoreFunctionVersion(\"sfnc_wXzcDGFR3KmjLDrtSawNHf\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/groups/{userGroupId}/invites": {
      "get": {
        "summary": "List Invites from User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination for invites to the group.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the emails of invitees to a user group.",
        "operationId": "listInvitesFromUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.listInvitesFromUserGroup('bBABwqbaDf2QdwTbW8bNEm', { count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    System.out.println(api.listInvitesFromUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\", PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "summary": "List Roles",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination for roles.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Roles available to apply to permissions for users and/or groups.",
        "operationId": "listRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRolesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "roles": [
                      {
                        "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "name": "Workspace Owner",
                        "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                      },
                      {
                        "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                        "name": "Minimal Workspace Access",
                        "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRolesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "roles": [
                      {
                        "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "name": "Workspace Owner",
                        "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                      },
                      {
                        "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                        "name": "Minimal Workspace Access",
                        "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRolesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "roles": [
                      {
                        "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "name": "Workspace Owner",
                        "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                      },
                      {
                        "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                        "name": "Minimal Workspace Access",
                        "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRolesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "roles": [
                      {
                        "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "name": "Workspace Owner",
                        "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                      },
                      {
                        "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                        "name": "Minimal Workspace Access",
                        "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Roles"
        ],
        "tags": [
          "IAM Roles"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamRoles.listRoles({ count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamRolesApi api = new IamRolesApi();\n    System.out.println(api.listRoles(PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/tracking-plans/{trackingPlanId}/rules": {
      "get": {
        "summary": "List Rules from Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Lists Tracking Plan rules.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 200 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listRulesFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "rules": [
                      {
                        "key": "New Tracking Plan Rule",
                        "type": "TRACK",
                        "version": 1,
                        "jsonSchema": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "object"
                            },
                            "traits": {
                              "type": "object"
                            },
                            "properties": {
                              "type": "object"
                            }
                          }
                        },
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "deprecatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "rules": [
                      {
                        "key": "New Tracking Plan Rule",
                        "type": "TRACK",
                        "version": 1,
                        "jsonSchema": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "object"
                            },
                            "traits": {
                              "type": "object"
                            },
                            "properties": {
                              "type": "object"
                            }
                          }
                        },
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "deprecatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "rules": [
                      {
                        "key": "New Tracking Plan Rule",
                        "type": "TRACK",
                        "version": 1,
                        "jsonSchema": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "object"
                            },
                            "traits": {
                              "type": "object"
                            },
                            "properties": {
                              "type": "object"
                            }
                          }
                        },
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "deprecatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "rules": [
                      {
                        "key": "New Tracking Plan Rule",
                        "type": "TRACK",
                        "version": 1,
                        "jsonSchema": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "object"
                            },
                            "traits": {
                              "type": "object"
                            },
                            "properties": {
                              "type": "object"
                            }
                          }
                        },
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "deprecatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.listRulesFromTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', { count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    System.out.println(\n      api.listRulesFromTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\", PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData()\n    );\n  }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Remove Rules from Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "rules",
            "style": "deepObject",
            "description": "Rules to delete.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Rules to delete.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoveRuleV1"
              },
              "title": "rules"
            },
            "example": [
              {
                "key": "New Rule",
                "type": "TRACK",
                "version": 1
              }
            ]
          }
        ],
        "deprecated": false,
        "description": "Deletes Tracking Plan rules.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "removeRulesFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.trackingPlans.removeRulesFromTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', [{ key: 'New Rule', type: 'TRACK', version: 1 }])\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    System.out.println(\n      api\n        .removeRulesFromTrackingPlan(\n          \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\",\n          Arrays.asList(RemoveRuleV1.fromJson(\"{\\\"key\\\":\\\"New Rule\\\",\\\"type\\\":\\\"TRACK\\\",\\\"version\\\":1}\"))\n        )\n        .getData()\n    );\n  }\n}\n"
          }
        ]
      },
      "put": {
        "summary": "Replace Rules in Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Replaces Tracking Plan rules.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "replaceRulesInTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Replaced Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Replaced Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Replaced Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.trackingPlans.replaceRulesInTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', {\n      rules: [{ key: 'New Replaced Rule', type: 'TRACK', version: 1, jsonSchema: {} }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    ReplaceRulesInTrackingPlanV1Input input = ReplaceRulesInTrackingPlanV1Input.fromJson(\n      \"{\\\"rules\\\":[{\\\"key\\\":\\\"New Replaced Rule\\\",\\\"type\\\":\\\"TRACK\\\",\\\"version\\\":1,\\\"jsonSchema\\\":{}}]}\"\n    );\n    System.out.println(api.replaceRulesInTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\", input).getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Rules in Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates Tracking Plan rules.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateRulesInTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.trackingPlans.updateRulesInTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', {\n      rules: [{ key: 'New Rule', type: 'TRACK', version: 1, jsonSchema: {} }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    TrackingPlansApi api = new TrackingPlansApi();\n    UpdateRulesInTrackingPlanV1Input input = UpdateRulesInTrackingPlanV1Input.fromJson(\n      \"{\\\"rules\\\":[{\\\"key\\\":\\\"New Rule\\\",\\\"type\\\":\\\"TRACK\\\",\\\"version\\\":1,\\\"jsonSchema\\\":{}}]}\"\n    );\n    System.out.println(api.updateRulesInTrackingPlan(\"tp_sprout_rVGCC6WdrNxjCf6JpCHP\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/sources/{sourceId}/settings": {
      "get": {
        "summary": "List Schema Settings in Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Retrieves the schema configuration settings for a Source. If Protocols is not enabled for the Source, the configurations specific to Protocols will have default values.",
        "operationId": "listSchemaSettingsInSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": true,
                        "allowUnplannedEventProperties": true,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "group": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "forwardingBlockedEventsTo": "",
                      "forwardingViolationsTo": ""
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": true,
                        "allowUnplannedEventProperties": true,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "group": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "forwardingBlockedEventsTo": "",
                      "forwardingViolationsTo": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": true,
                        "allowUnplannedEventProperties": true,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "group": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "forwardingBlockedEventsTo": "",
                      "forwardingViolationsTo": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": true,
                        "allowUnplannedEventProperties": true,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "group": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "forwardingBlockedEventsTo": "",
                      "forwardingViolationsTo": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.listSchemaSettingsInSource('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    System.out.println(api.listSchemaSettingsInSource(\"qQEHquLrjRDN9j1ByrChyn\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Schema Settings in Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the schema configuration for a Source. If Protocols is not enabled for the Source, any updates to Protocols-specific configurations will not be applied.\n\n      Config API omitted fields:\n- `updateMask`\n      ",
        "operationId": "updateSchemaSettingsInSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Input"
              },
              "example": {
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Input"
              },
              "example": {
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Input"
              },
              "example": {
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": false,
                        "allowUnplannedEventProperties": false,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": false,
                        "commonEventOnViolations": "OMIT_PROPERTIES"
                      },
                      "group": {
                        "allowTraitsOnViolations": false,
                        "allowUnplannedTraits": false,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "BLOCK"
                      },
                      "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                      "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": false,
                        "allowUnplannedEventProperties": false,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": false,
                        "commonEventOnViolations": "OMIT_PROPERTIES"
                      },
                      "group": {
                        "allowTraitsOnViolations": false,
                        "allowUnplannedTraits": false,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "BLOCK"
                      },
                      "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                      "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": false,
                        "allowUnplannedEventProperties": false,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": false,
                        "commonEventOnViolations": "OMIT_PROPERTIES"
                      },
                      "group": {
                        "allowTraitsOnViolations": false,
                        "allowUnplannedTraits": false,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "BLOCK"
                      },
                      "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                      "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": false,
                        "allowUnplannedEventProperties": false,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": false,
                        "commonEventOnViolations": "OMIT_PROPERTIES"
                      },
                      "group": {
                        "allowTraitsOnViolations": false,
                        "allowUnplannedTraits": false,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "BLOCK"
                      },
                      "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                      "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.sources.updateSchemaSettingsInSource('qQEHquLrjRDN9j1ByrChyn', {\n      group: { allowTraitsOnViolations: false, allowUnplannedTraits: false, commonEventOnViolations: 'ALLOW' },\n      identify: { allowTraitsOnViolations: true, allowUnplannedTraits: true, commonEventOnViolations: 'BLOCK' },\n      track: {\n        allowEventOnViolations: false,\n        allowPropertiesOnViolations: false,\n        allowUnplannedEventProperties: false,\n        allowUnplannedEvents: false,\n        commonEventOnViolations: 'OMIT_PROPERTIES',\n      },\n      forwardingViolationsTo: 'rh5BDZp6QDHvXFCkibm1pR',\n      forwardingBlockedEventsTo: 'rh5BDZp6QDHvXFCkibm1pR',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SourcesApi api = new SourcesApi();\n    UpdateSchemaSettingsInSourceV1Input input = UpdateSchemaSettingsInSourceV1Input.fromJson(\n      \"{\\\"group\\\":{\\\"allowTraitsOnViolations\\\":false,\\\"allowUnplannedTraits\\\":false,\\\"commonEventOnViolations\\\":\\\"ALLOW\\\"},\\\"identify\\\":{\\\"allowTraitsOnViolations\\\":true,\\\"allowUnplannedTraits\\\":true,\\\"commonEventOnViolations\\\":\\\"BLOCK\\\"},\\\"track\\\":{\\\"allowEventOnViolations\\\":false,\\\"allowPropertiesOnViolations\\\":false,\\\"allowUnplannedEventProperties\\\":false,\\\"allowUnplannedEvents\\\":false,\\\"commonEventOnViolations\\\":\\\"OMIT_PROPERTIES\\\"},\\\"forwardingViolationsTo\\\":\\\"rh5BDZp6QDHvXFCkibm1pR\\\",\\\"forwardingBlockedEventsTo\\\":\\\"rh5BDZp6QDHvXFCkibm1pR\\\"}\"\n    );\n    System.out.println(api.updateSchemaSettingsInSource(\"qQEHquLrjRDN9j1ByrChyn\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connected-sources/{sourceId}/selective-syncs": {
      "get": {
        "summary": "List Selective Syncs from Warehouse And Source",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the schema for a Warehouse, including Sources, Collections, and Properties.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listSelectiveSyncsFromWarehouseAndSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "items": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "collection": "tracks",
                        "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                        "source": "hV2lO1ZmMd",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "items": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "collection": "tracks",
                        "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                        "source": "hV2lO1ZmMd",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "items": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "collection": "tracks",
                        "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                        "source": "hV2lO1ZmMd",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "items": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "collection": "tracks",
                        "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                        "source": "hV2lO1ZmMd",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.selectiveSync.listSelectiveSyncsFromWarehouseAndSource('kjU72LCJexvrqL7G4TMHHN', 'rh5BDZp6QDHvXFCkibm1pR', { count: 2 })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SelectiveSyncApi api = new SelectiveSyncApi();\n    System.out.println(\n      api\n        .listSelectiveSyncsFromWarehouseAndSource(\n          \"kjU72LCJexvrqL7G4TMHHN\",\n          \"rh5BDZp6QDHvXFCkibm1pR\",\n          PaginationInput.fromJson(\"{\\\"count\\\":2}\")\n        )\n        .getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/profiles-warehouses/{warehouseId}/selective-syncs": {
      "get": {
        "summary": "List Selective Syncs from Warehouse And Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "fQyLbqjfwaqg9mr3hDQ7We",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 10
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the schema for a Space Warehouse connection, including Collections and Properties.",
        "operationId": "listSelectiveSyncsFromWarehouseAndSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    },
                    "enableEventTables": true,
                    "items": [
                      {
                        "warehouseId": "kYap2dzbkZMoBzBWfTvYcU",
                        "collection": "tracks",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.profilesSync.listSelectiveSyncsFromWarehouseAndSpace('9aQ1Lj62S4bomZKLF4DPqW', 'fQyLbqjfwaqg9mr3hDQ7We', { count: 10 })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ProfilesSyncApi api = new ProfilesSyncApi();\n    System.out.println(\n      api\n        .listSelectiveSyncsFromWarehouseAndSpace(\n          \"9aQ1Lj62S4bomZKLF4DPqW\",\n          \"fQyLbqjfwaqg9mr3hDQ7We\",\n          PaginationInput.fromJson(\"{\\\"count\\\":10}\")\n        )\n        .getData()\n    );\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Selective Sync for Warehouse And Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "space_123",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the schema for a Space Warehouse connection, including Collections and Properties.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Modified` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "updateSelectiveSyncForWarehouseAndSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput"
              },
              "example": {
                "syncOverrides": [
                  {
                    "enabled": true,
                    "collection": "tracks",
                    "property": "context_ip"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.profilesSync.updateSelectiveSyncForWarehouseAndSpace('space_123', 'kjU72LCJexvrqL7G4TMHHN', {\n      syncOverrides: [{ enabled: true, collection: 'tracks', property: 'context_ip' }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ProfilesSyncApi api = new ProfilesSyncApi();\n    UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput input = UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput.fromJson(\n      \"{\\\"syncOverrides\\\":[{\\\"enabled\\\":true,\\\"collection\\\":\\\"tracks\\\",\\\"property\\\":\\\"context_ip\\\"}]}\"\n    );\n    System.out.println(api.updateSelectiveSyncForWarehouseAndSpace(\"space_123\", \"kjU72LCJexvrqL7G4TMHHN\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/suppressions": {
      "get": {
        "summary": "List Suppressions",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 5
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all suppressions in a given Workspace.",
        "operationId": "listSuppressions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSuppressionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "suppressed": [
                      {
                        "subjectType": "userId",
                        "subjectIds": [
                          "1"
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MQ==",
                      "next": "cmVnLTY1MDgtMDA5ODE="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSuppressionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "suppressed": [
                      {
                        "subjectType": "userId",
                        "subjectIds": [
                          "1"
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MQ==",
                      "next": "cmVnLTY1MDgtMDA5ODE="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSuppressionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "suppressed": [
                      {
                        "subjectType": "userId",
                        "subjectIds": [
                          "1"
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MQ==",
                      "next": "cmVnLTY1MDgtMDA5ODE="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSuppressionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "suppressed": [
                      {
                        "subjectType": "userId",
                        "subjectIds": [
                          "1"
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MQ==",
                      "next": "cmVnLTY1MDgtMDA5ODE="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.listSuppressions({ count: 5 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();\n    System.out.println(api.listSuppressions(PaginationInput.fromJson(\"{\\\"count\\\":5}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/syncs": {
      "get": {
        "summary": "List Syncs from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 5
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the overview of syncs for every Source connected to a Warehouse.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listSyncsFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.selectiveSync.listSyncsFromWarehouse('kjU72LCJexvrqL7G4TMHHN', { count: 5 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SelectiveSyncApi api = new SelectiveSyncApi();\n    System.out.println(api.listSyncsFromWarehouse(\"kjU72LCJexvrqL7G4TMHHN\", PaginationInput.fromJson(\"{\\\"count\\\":5}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connected-sources/{sourceId}/syncs": {
      "get": {
        "summary": "List Syncs from Warehouse And Source",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the overview of syncs for a Source connected to a Warehouse.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listSyncsFromWarehouseAndSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.selectiveSync.listSyncsFromWarehouseAndSource('kjU72LCJexvrqL7G4TMHHN', 'rh5BDZp6QDHvXFCkibm1pR', { count: 2 })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SelectiveSyncApi api = new SelectiveSyncApi();\n    System.out.println(\n      api\n        .listSyncsFromWarehouseAndSource(\"kjU72LCJexvrqL7G4TMHHN\", \"rh5BDZp6QDHvXFCkibm1pR\", PaginationInput.fromJson(\"{\\\"count\\\":2}\"))\n        .getData()\n    );\n  }\n}\n"
          }
        ]
      }
    },
    "/users/{userId}/groups": {
      "get": {
        "summary": "List User Groups from User",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "example": "sgJDWk3K21k6LE3tLU9nRK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "pagination",
            "style": "deepObject",
            "description": "Pagination for groups.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": {
              "count": 2
            }
          }
        ],
        "deprecated": false,
        "description": "Returns all groups a user belongs to.",
        "operationId": "listUserGroupsFromUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "groups": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "groups": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "groups": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "groups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "PAPI Example Group"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.listUserGroupsFromUser('sgJDWk3K21k6LE3tLU9nRK', { count: 2 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamUsersApi api = new IamUsersApi();\n    System.out.println(api.listUserGroupsFromUser(\"sgJDWk3K21k6LE3tLU9nRK\", PaginationInput.fromJson(\"{\\\"count\\\":2}\")).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/destination/filters/preview": {
      "post": {
        "summary": "Preview Destination Filter",
        "parameters": [],
        "deprecated": false,
        "description": "Simulates the application of a Destination filter to a provided JSON payload.",
        "operationId": "previewDestinationFilter",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1Input"
              },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [
                    {
                      "type": "ALLOW_PROPERTIES",
                      "fields": {
                        "product": [
                          "event",
                          "requestedFrom"
                        ]
                      }
                    }
                  ]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1Input"
              },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [
                    {
                      "type": "ALLOW_PROPERTIES",
                      "fields": {
                        "product": [
                          "event",
                          "requestedFrom"
                        ]
                      }
                    }
                  ]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1Input"
              },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [
                    {
                      "type": "ALLOW_PROPERTIES",
                      "fields": {
                        "product": [
                          "event",
                          "requestedFrom"
                        ]
                      }
                    }
                  ]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreviewDestinationFilterV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "inputPayload": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "name": "Fake mustache",
                        "requestedFrom": "/products/123/checkout",
                        "referrer": "www.example.com"
                      }
                    },
                    "result": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "requestedFrom": "/products/123/checkout"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreviewDestinationFilterV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "inputPayload": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "name": "Fake mustache",
                        "requestedFrom": "/products/123/checkout",
                        "referrer": "www.example.com"
                      }
                    },
                    "result": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "requestedFrom": "/products/123/checkout"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreviewDestinationFilterV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "inputPayload": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "name": "Fake mustache",
                        "requestedFrom": "/products/123/checkout",
                        "referrer": "www.example.com"
                      }
                    },
                    "result": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "requestedFrom": "/products/123/checkout"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreviewDestinationFilterV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "inputPayload": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "name": "Fake mustache",
                        "requestedFrom": "/products/123/checkout",
                        "referrer": "www.example.com"
                      }
                    },
                    "result": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "requestedFrom": "/products/123/checkout"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinationFilters.previewDestinationFilter({\n      filter: {\n        if: 'type = \"track\" AND event = \"Order Completed\"',\n        actions: [{ type: 'ALLOW_PROPERTIES', fields: { product: ['event', 'requestedFrom'] } }],\n      },\n      payload: {\n        type: 'track',\n        event: 'Order Completed',\n        product: { name: 'Fake mustache', requestedFrom: '/products/123/checkout', referrer: 'www.example.com' },\n      },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    DestinationFiltersApi api = new DestinationFiltersApi();\n    PreviewDestinationFilterV1Input input = PreviewDestinationFilterV1Input.fromJson(\n      \"{\\\"filter\\\":{\\\"if\\\":\\\"type = \\\\\\\"track\\\\\\\" AND event = \\\\\\\"Order Completed\\\\\\\"\\\",\\\"actions\\\":[{\\\"type\\\":\\\"ALLOW_PROPERTIES\\\",\\\"fields\\\":{\\\"product\\\":[\\\"event\\\",\\\"requestedFrom\\\"]}}]},\\\"payload\\\":{\\\"type\\\":\\\"track\\\",\\\"event\\\":\\\"Order Completed\\\",\\\"product\\\":{\\\"name\\\":\\\"Fake mustache\\\",\\\"requestedFrom\\\":\\\"/products/123/checkout\\\",\\\"referrer\\\":\\\"www.example.com\\\"}}}\"\n    );\n    System.out.println(api.previewDestinationFilter(input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/profiles-warehouses/{warehouseId}": {
      "delete": {
        "summary": "Remove Profiles Warehouse from Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Profiles Warehouse.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "removeProfilesWarehouseFromSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveProfilesWarehouseFromSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.profilesSync.removeProfilesWarehouseFromSpace('9aQ1Lj62S4bomZKLF4DPqW', 'kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ProfilesSyncApi api = new ProfilesSyncApi();\n    System.out.println(api.removeProfilesWarehouseFromSpace(\"9aQ1Lj62S4bomZKLF4DPqW\", \"kjU72LCJexvrqL7G4TMHHN\").getData());\n  }\n}\n"
          }
        ]
      },
      "patch": {
        "summary": "Update Profiles Warehouse for Space Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "eSrwSWY9u6JisZvHhZeK8o",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Profiles Warehouse.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Updated` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "updateProfilesWarehouseForSpaceWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilesWarehouseForSpaceWarehouseAlphaInput"
              },
              "example": {
                "settings": {},
                "enabled": false,
                "name": "testing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateProfilesWarehouseForSpaceWarehouseAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "profilesWarehouse": {
                      "id": "eSrwSWY9u6JisZvHhZeK8o",
                      "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "testing"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.profilesSync.updateProfilesWarehouseForSpaceWarehouse('9aQ1Lj62S4bomZKLF4DPqW', 'eSrwSWY9u6JisZvHhZeK8o', {\n      settings: {},\n      enabled: false,\n      name: 'testing',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    ProfilesSyncApi api = new ProfilesSyncApi();\n    UpdateProfilesWarehouseForSpaceWarehouseAlphaInput input = UpdateProfilesWarehouseForSpaceWarehouseAlphaInput.fromJson(\n      \"{\\\"settings\\\":{},\\\"enabled\\\":false,\\\"name\\\":\\\"testing\\\"}\"\n    );\n    System.out.println(api.updateProfilesWarehouseForSpaceWarehouse(\"9aQ1Lj62S4bomZKLF4DPqW\", \"eSrwSWY9u6JisZvHhZeK8o\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/group/{userGroupId}/users": {
      "delete": {
        "summary": "Remove Users from User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "emails",
            "style": "deepObject",
            "description": "The list of emails to remove from the user group.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The list of emails to remove from the user group.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "emails"
            },
            "example": [
              "foo@example.com"
            ]
          }
        ],
        "deprecated": false,
        "description": "Removes one or multiple users or invites from a user group by email.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Group Memberships Deleted\n* User Removed From User Group\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "removeUsersFromUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.removeUsersFromUserGroup('bBABwqbaDf2QdwTbW8bNEm', ['foo@example.com']))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    System.out.println(api.removeUsersFromUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\", Arrays.asList(\"foo@example.com\")).getData());\n  }\n}\n"
          }
        ]
      },
      "put": {
        "summary": "Replace Users in User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Replaces the members of a user group by email.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Subjects Added to Group\n* User Added To User Group\n* Group Memberships Deleted\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replaceUsersInUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.replaceUsersInUserGroup('bBABwqbaDf2QdwTbW8bNEm', { emails: ['foo@example.com'] }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    IamGroupsApi api = new IamGroupsApi();\n    ReplaceUsersInUserGroupV1Input input = ReplaceUsersInUserGroupV1Input.fromJson(\"{\\\"emails\\\":[\\\"foo@example.com\\\"]}\");\n    System.out.println(api.replaceUsersInUserGroup(\"bBABwqbaDf2QdwTbW8bNEm\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/spaces/{spaceId}/messaging-subscriptions": {
      "put": {
        "summary": "Replace Messaging Subscriptions in Spaces",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Replace Messaging Subscriptions in Spaces.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Spaces feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replaceMessagingSubscriptionsInSpaces",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceMessagingSubscriptionsInSpacesAlphaInput"
              },
              "example": {
                "subscriptions": [
                  {
                    "key": "jacob@exmple.com",
                    "type": "EMAIL",
                    "status": "SUBSCRIBED"
                  },
                  {
                    "key": "jane@exmple.com",
                    "type": "EMAIL",
                    "groups": [
                      {
                        "name": "promotions",
                        "status": "SUBSCRIBED"
                      }
                    ]
                  },
                  {
                    "key": "pgibbonsexample.com",
                    "type": "EMAIL"
                  },
                  {
                    "key": "2162226233",
                    "type": "SMS",
                    "status": "DID_NOT_SUBSCRIBE"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceMessagingSubscriptionsInSpacesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "successes": [
                      {
                        "key": "jacob@exmple.com",
                        "type": "EMAIL",
                        "status": "SUBSCRIBED"
                      },
                      {
                        "key": "jane@exmple.com",
                        "type": "EMAIL",
                        "status": "SUBSCRIBED",
                        "groups": [
                          {
                            "name": "promotions",
                            "status": "SUBSCRIBED",
                            "id": "grp_id"
                          }
                        ]
                      },
                      {
                        "key": "2162226233",
                        "type": "SMS",
                        "status": "DID_NOT_SUBSCRIBE"
                      }
                    ],
                    "failures": [
                      {
                        "key": "pgibbonsexample.com",
                        "type": "EMAIL",
                        "status": "UNSUBSCRIBED",
                        "errors": [
                          {
                            "code": "INVALID_EMAIL",
                            "message": "Email is not valid"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Spaces"
        ],
        "tags": [
          "Spaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.spaces.replaceMessagingSubscriptionsInSpaces('9aQ1Lj62S4bomZKLF4DPqW', {\n      subscriptions: [\n        { key: 'jacob@exmple.com', type: 'EMAIL', status: 'SUBSCRIBED' },\n        { key: 'jane@exmple.com', type: 'EMAIL', groups: [{ name: 'promotions', status: 'SUBSCRIBED' }] },\n        { key: 'pgibbonsexample.com', type: 'EMAIL' },\n        { key: '2162226233', type: 'SMS', status: 'DID_NOT_SUBSCRIBE' },\n      ],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SpacesApi api = new SpacesApi();\n    ReplaceMessagingSubscriptionsInSpacesAlphaInput input = ReplaceMessagingSubscriptionsInSpacesAlphaInput.fromJson(\n      \"{\\\"subscriptions\\\":[{\\\"key\\\":\\\"jacob@exmple.com\\\",\\\"type\\\":\\\"EMAIL\\\",\\\"status\\\":\\\"SUBSCRIBED\\\"},{\\\"key\\\":\\\"jane@exmple.com\\\",\\\"type\\\":\\\"EMAIL\\\",\\\"groups\\\":[{\\\"name\\\":\\\"promotions\\\",\\\"status\\\":\\\"SUBSCRIBED\\\"}]},{\\\"key\\\":\\\"pgibbonsexample.com\\\",\\\"type\\\":\\\"EMAIL\\\"},{\\\"key\\\":\\\"2162226233\\\",\\\"type\\\":\\\"SMS\\\",\\\"status\\\":\\\"DID_NOT_SUBSCRIBE\\\"}]}\"\n    );\n    System.out.println(api.replaceMessagingSubscriptionsInSpaces(\"9aQ1Lj62S4bomZKLF4DPqW\", input).getData());\n  }\n}\n"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/selective-sync": {
      "patch": {
        "summary": "Update Selective Sync for Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Configures the schema for a Warehouse, including Sources, Collections, and Properties.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Modified` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateSelectiveSyncForWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Input"
              },
              "example": {
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Input"
              },
              "example": {
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Input"
              },
              "example": {
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED",
                    "warnings": []
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED",
                    "warnings": []
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED",
                    "warnings": []
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED",
                    "warnings": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "label": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.selectiveSync.updateSelectiveSyncForWarehouse('kjU72LCJexvrqL7G4TMHHN', {\n      syncOverrides: [{ sourceId: 'rh5BDZp6QDHvXFCkibm1pR', enabled: true, collection: 'checkout_started', property: 'context_ip' }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "label": "Java",
            "source": "import com.segment.publicapi.api.*;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\n\npublic class Main {\n\n  public static void main(String[] args) throws Exception {\n    ApiClient defaultClient = Configuration.getDefaultApiClient().setBasePath(\"https://api.segmentapis.com\");\n\n    HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n    token.setBearerToken(\"/* Insert your Public API token here */\");\n\n    SelectiveSyncApi api = new SelectiveSyncApi();\n    UpdateSelectiveSyncForWarehouseV1Input input = UpdateSelectiveSyncForWarehouseV1Input.fromJson(\n      \"{\\\"syncOverrides\\\":[{\\\"sourceId\\\":\\\"rh5BDZp6QDHvXFCkibm1pR\\\",\\\"enabled\\\":true,\\\"collection\\\":\\\"checkout_started\\\",\\\"property\\\":\\\"context_ip\\\"}]}\"\n    );\n    System.out.println(api.updateSelectiveSyncForWarehouse(\"kjU72LCJexvrqL7G4TMHHN\", input).getData());\n  }\n}\n"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "token": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "AllowedLabelBeta": {
        "description": "Defines a label that you may apply to resources within a Workspace.",
        "title": "AllowedLabelBeta",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key identifier for this label.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "A description of what this label represents.",
            "type": "string",
            "title": "description"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "AudienceSummary": {
        "description": "Defines an Audience.",
        "title": "AudienceSummary",
        "type": "object",
        "properties": {
          "id": {
            "description": "Audience id.",
            "type": "string",
            "title": "id"
          },
          "spaceId": {
            "description": "Space id for the audience.",
            "type": "string",
            "title": "spaceId"
          },
          "name": {
            "description": "Name of the audience.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "Description of the audience.",
            "type": "string",
            "title": "description"
          },
          "key": {
            "description": "Key for the audience.",
            "type": "string",
            "title": "key"
          },
          "enabled": {
            "description": "Enabled/disabled status for the audience.",
            "type": "boolean",
            "title": "enabled"
          },
          "createdBy": {
            "description": "User id who created the audience.",
            "type": "string",
            "title": "createdBy"
          },
          "updatedBy": {
            "description": "User id who last updated the audience.",
            "type": "string",
            "title": "updatedBy"
          },
          "createdAt": {
            "description": "Date the audience was created.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "Date the audience was last updated.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "description",
          "enabled",
          "id",
          "key",
          "name",
          "spaceId",
          "updatedAt",
          "updatedBy"
        ]
      },
      "GetAudienceAlphaInput": {
        "description": "Input to get an audience.",
        "title": "GetAudienceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListAudiencesAlphaInput": {
        "description": "Input to list audiences for a space id.",
        "title": "ListAudiencesAlphaInput",
        "type": "object",
        "properties": {}
      },
      "UpdateAudienceForSpaceInput": {
        "description": "Input to update an audience.",
        "title": "UpdateAudienceForSpaceInput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Enabled/disabled status for the audience.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "RemoveAudienceFromSpaceAlphaInput": {
        "description": "Input to delete an audience.",
        "title": "RemoveAudienceFromSpaceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "UpdateAudienceForSpaceAlphaOutput": {
        "description": "Audience output for get.",
        "title": "UpdateAudienceForSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "audience": {
            "description": "The audience summary output.",
            "title": "audience",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSummary"
              }
            ]
          }
        },
        "required": [
          "audience"
        ]
      },
      "GetAudienceAlphaOutput": {
        "description": "Audience output for update.",
        "title": "GetAudienceAlphaOutput",
        "type": "object",
        "properties": {
          "audience": {
            "description": "The audience summary output.",
            "title": "audience",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSummary"
              }
            ]
          }
        },
        "required": [
          "audience"
        ]
      },
      "ListAudiencesAlphaOutput": {
        "description": "List audiences endpoint output.",
        "title": "ListAudiencesAlphaOutput",
        "type": "object",
        "properties": {
          "audiences": {
            "description": "A list of audience summary results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSummary"
            },
            "title": "audiences"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "audiences",
          "pagination"
        ]
      },
      "RemoveAudienceFromSpaceAlphaOutput": {
        "description": "Delete audience endpoint output.",
        "title": "RemoveAudienceFromSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "ComputedTraitSummary": {
        "description": "Defines a Computed trait.",
        "title": "ComputedTraitSummary",
        "type": "object",
        "properties": {
          "id": {
            "description": "Computed trait id.",
            "type": "string",
            "title": "id"
          },
          "spaceId": {
            "description": "Space id for the computed trait.",
            "type": "string",
            "title": "spaceId"
          },
          "name": {
            "description": "Name of the computed trait.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "Description of the computed trait.",
            "type": "string",
            "title": "description"
          },
          "key": {
            "description": "Key for the computed trait.",
            "type": "string",
            "title": "key"
          },
          "enabled": {
            "description": "Enabled/disabled status for the computed trait.",
            "type": "boolean",
            "title": "enabled"
          },
          "createdBy": {
            "description": "User id who created the computed trait.",
            "type": "string",
            "title": "createdBy"
          },
          "updatedBy": {
            "description": "User id who last updated the computed trait.",
            "type": "string",
            "title": "updatedBy"
          },
          "createdAt": {
            "description": "The timestamp of the computed trait's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of the computed trait's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "description",
          "enabled",
          "id",
          "key",
          "name",
          "spaceId",
          "updatedAt",
          "updatedBy"
        ]
      },
      "GetComputedTraitAlphaInput": {
        "description": "Input to get a computed trait.",
        "title": "GetComputedTraitAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListComputedTraitsAlphaInput": {
        "description": "Input to list computed traits for a space id.",
        "title": "ListComputedTraitsAlphaInput",
        "type": "object",
        "properties": {}
      },
      "UpdateComputedTraitForSpaceAlphaInput": {
        "description": "Input to update a computed trait.",
        "title": "UpdateComputedTraitForSpaceAlphaInput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Enabled/disabled status for the computed trait.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "RemoveComputedTraitFromSpaceAlphaInput": {
        "description": "Input to delete a computed trait.",
        "title": "RemoveComputedTraitFromSpaceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "GetComputedTraitAlphaOutput": {
        "description": "Computed Trait output for get and update.",
        "title": "GetComputedTraitAlphaOutput",
        "type": "object",
        "properties": {
          "computedTrait": {
            "description": "The computed trait summary output.",
            "title": "computedTrait",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComputedTraitSummary"
              }
            ]
          }
        },
        "required": [
          "computedTrait"
        ]
      },
      "UpdateComputedTraitForSpaceAlphaOutput": {
        "description": "Computed Trait output for get and update.",
        "title": "UpdateComputedTraitForSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "computedTrait": {
            "description": "The computed trait summary output.",
            "title": "computedTrait",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComputedTraitSummary"
              }
            ]
          }
        },
        "required": [
          "computedTrait"
        ]
      },
      "ListComputedTraitsAlphaOutput": {
        "description": "List computed traits endpoint output.",
        "title": "ListComputedTraitsAlphaOutput",
        "type": "object",
        "properties": {
          "computedTraits": {
            "description": "A list of computed trait summary results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComputedTraitSummary"
            },
            "title": "computedTraits"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "computedTraits",
          "pagination"
        ]
      },
      "RemoveComputedTraitFromSpaceAlphaOutput": {
        "description": "Delete computed trait endpoint output.",
        "title": "RemoveComputedTraitFromSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "GetDestinationsCatalogV1Input": {
        "description": "Contains filter parameters used for loading the Destinations public catalog.",
        "title": "GetDestinationsCatalogV1Input",
        "type": "object",
        "properties": {}
      },
      "GetDestinationsCatalogV1Output": {
        "description": "Returns a list of all Destination catalog items contained within a given page.",
        "title": "GetDestinationsCatalogV1Output",
        "type": "object",
        "properties": {
          "destinationsCatalog": {
            "description": "All Destination catalog items contained within the requested page.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataV1"
            },
            "title": "destinationsCatalog"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "destinationsCatalog",
          "pagination"
        ]
      },
      "GetDestinationMetadataV1Input": {
        "description": "Loads a Destination catalog item by id.",
        "title": "GetDestinationMetadataV1Input",
        "type": "object",
        "properties": {}
      },
      "GetDestinationMetadataV1Output": {
        "description": "Returns a Destination catalog item.",
        "title": "GetDestinationMetadataV1Output",
        "type": "object",
        "properties": {
          "destinationMetadata": {
            "description": "The catalog item matched by id.",
            "title": "destinationMetadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataV1"
              }
            ]
          }
        },
        "required": [
          "destinationMetadata"
        ]
      },
      "AuditEventV1": {
        "description": "Represents an Audit Trail event.",
        "title": "AuditEventV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for this audit trail event.",
            "type": "string",
            "title": "id"
          },
          "timestamp": {
            "description": "The timestamp of this event in ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          },
          "type": {
            "description": "The type of this event.",
            "type": "string",
            "title": "type"
          },
          "actor": {
            "description": "The user or API token that triggered this event.",
            "type": "string",
            "title": "actor"
          },
          "resourceId": {
            "description": "The identifier of the resource affected by this event.",
            "type": "string",
            "title": "resourceId"
          },
          "resourceType": {
            "description": "The kind of resource affected by this event.",
            "type": "string",
            "title": "resourceType"
          },
          "resourceName": {
            "description": "The name of the resource affected by this event.",
            "type": "string",
            "title": "resourceName"
          }
        },
        "required": [
          "actor",
          "id",
          "resourceId",
          "resourceName",
          "resourceType",
          "timestamp",
          "type"
        ]
      },
      "ListAuditEventsV1Input": {
        "description": "Retrieves all Audit Trail events for the current Workspace.",
        "title": "ListAuditEventsV1Input",
        "type": "object",
        "properties": {}
      },
      "ListAuditEventsV1Output": {
        "description": "Returns a list of Audit Trail events for the current Workspace.",
        "title": "ListAuditEventsV1Output",
        "type": "object",
        "properties": {
          "events": {
            "description": "Audit trail events for the current Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditEventV1"
            },
            "title": "events"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "events"
        ]
      },
      "ListFiltersFromDestinationV1Input": {
        "description": "Input for ListDestinationFiltersV1.",
        "title": "ListFiltersFromDestinationV1Input",
        "type": "object",
        "properties": {}
      },
      "GetFilterInDestinationV1Input": {
        "description": "Input for GetDestinationFilterV1.",
        "title": "GetFilterInDestinationV1Input",
        "type": "object",
        "properties": {}
      },
      "RemoveFilterFromDestinationV1Input": {
        "description": "Input for DeleteDestinationFilterV1.",
        "title": "RemoveFilterFromDestinationV1Input",
        "type": "object",
        "properties": {}
      },
      "DestinationFilterActionV1": {
        "description": "Represents a Destination filter action.",
        "title": "DestinationFilterActionV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The kind of Transformation to apply to any matched properties.",
            "enum": [
              "ALLOW_PROPERTIES",
              "DROP",
              "DROP_PROPERTIES",
              "SAMPLE"
            ],
            "type": "string",
            "title": "type"
          },
          "fields": {
            "description": "A dictionary of paths to object keys that this filter applies to.\n  The literal string '' represents the top level of the object.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "percent": {
            "description": "A decimal between 0 and 1 used for 'sample' type events and\ninfluences the likelihood of sampling to occur.",
            "type": "number",
            "title": "percent"
          },
          "path": {
            "description": "The JSON path to a property within a payload object from which Segment generates a deterministic\nsampling rate.",
            "type": "string",
            "title": "path"
          }
        },
        "required": [
          "type"
        ]
      },
      "CreateFilterForDestinationV1Input": {
        "description": "Input for CreateDestinationFilterV1.",
        "title": "CreateFilterForDestinationV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "if": {
            "description": "The filter's condition.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "Actions for the Destination filter.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterActionV1"
            },
            "title": "actions"
          },
          "title": {
            "description": "The title of the filter.",
            "type": "string",
            "title": "title"
          },
          "description": {
            "description": "The description of the filter.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "When set to true, the Destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": [
          "actions",
          "enabled",
          "if",
          "sourceId",
          "title"
        ]
      },
      "PreviewDestinationFilterV1": {
        "description": "A simplified Destination filter that includes the if and actions for a DestinationFilterV1.",
        "title": "PreviewDestinationFilterV1",
        "type": "object",
        "properties": {
          "if": {
            "description": "A FQL statement which determines if the provided filter's actions will apply to the provided JSON payload.\nThe literal string \"all\" will result in this filter to all events.\nFor guidance on using FQL, see the Segment documentation site.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "The filtering action to take on events that match the \"if\" statement.\nAction types must be one of: \"drop\", \"allow_properties\", \"drop_properties\" or \"sample\".",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterActionV1"
            },
            "title": "actions"
          }
        },
        "required": [
          "actions",
          "if"
        ]
      },
      "PreviewDestinationFilterV1Input": {
        "description": "Input of the Destination filter to preview.\nFor guidance on using FQL, see the Segment documentation site.",
        "title": "PreviewDestinationFilterV1Input",
        "type": "object",
        "properties": {
          "filter": {
            "description": "The filter to preview.",
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1"
              }
            ]
          },
          "payload": {
            "description": "The JSON payload to apply the filter to.",
            "type": "object",
            "additionalProperties": true,
            "title": "payload"
          }
        },
        "required": [
          "filter",
          "payload"
        ]
      },
      "PreviewDestinationFilterV1Output": {
        "description": "Preview output from applying the Destination filter.\nSegment modifies or nullifies payloads depending on the provided filter actions.",
        "title": "PreviewDestinationFilterV1Output",
        "type": "object",
        "properties": {
          "inputPayload": {
            "description": "The pre-filter JSON input.",
            "type": "object",
            "additionalProperties": true,
            "title": "inputPayload"
          },
          "result": {
            "description": "The filtered JSON output.",
            "title": "result",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "inputPayload",
          "result"
        ]
      },
      "DestinationFilterV1": {
        "description": "Represents a Destination filter.",
        "title": "DestinationFilterV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique id of this filter.",
            "type": "string",
            "title": "id"
          },
          "sourceId": {
            "description": "The id of the Source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationId": {
            "description": "The id of the Destination associated with this filter.",
            "type": "string",
            "title": "destinationId"
          },
          "if": {
            "description": "A condition that defines whether to apply this filter to a payload.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "A list of actions this filter performs.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterActionV1"
            },
            "title": "actions"
          },
          "title": {
            "description": "A title for this filter.",
            "type": "string",
            "title": "title"
          },
          "description": {
            "description": "A description for this filter.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "When set to true, this filter is active.",
            "type": "boolean",
            "title": "enabled"
          },
          "createdAt": {
            "description": "The timestamp of this filter's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this filter's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "required": [
          "actions",
          "createdAt",
          "destinationId",
          "enabled",
          "id",
          "if",
          "sourceId",
          "title",
          "updatedAt"
        ]
      },
      "ListFiltersFromDestinationV1Output": {
        "description": "Output for ListDestinationFiltersV1.",
        "title": "ListFiltersFromDestinationV1Output",
        "type": "object",
        "properties": {
          "filters": {
            "description": "A list of the filters that belong to the specified Destination instance.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterV1"
            },
            "title": "filters"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "filters",
          "pagination"
        ]
      },
      "GetFilterInDestinationV1Output": {
        "description": "Output for GetDestinationFiltersV1.",
        "title": "GetFilterInDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "description": "The requested Destination filter.",
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationFilterV1"
              }
            ]
          }
        },
        "required": [
          "filter"
        ]
      },
      "CreateFilterForDestinationV1Output": {
        "description": "Output for CreateDestinationFiltersV1.",
        "title": "CreateFilterForDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "description": "The newly created Destination filter.",
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationFilterV1"
              }
            ]
          }
        },
        "required": [
          "filter"
        ]
      },
      "RemoveFilterFromDestinationV1Output": {
        "description": "Output for DeleteDestinationFilterV1.",
        "title": "RemoveFilterFromDestinationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of delete operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateFilterForDestinationV1Input": {
        "description": "Input for UpdateDestinationFilterV1.",
        "title": "UpdateFilterForDestinationV1Input",
        "type": "object",
        "properties": {
          "if": {
            "description": "The FQL if condition to update.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "Actions for this Destination filter.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterActionV1"
            },
            "title": "actions"
          },
          "title": {
            "description": "The title to update.",
            "type": "string",
            "title": "title"
          },
          "description": {
            "description": "The description of this filter.",
            "type": "string",
            "title": "description",
            "nullable": true
          },
          "enabled": {
            "description": "When set to true, this Destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        }
      },
      "UpdateFilterForDestinationV1Output": {
        "description": "Output for UpdateDestinationFilterV1.",
        "title": "UpdateFilterForDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "description": "The updated Destination filter.",
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationFilterV1"
              }
            ]
          }
        },
        "required": [
          "filter"
        ]
      },
      "DestinationMetadataV1": {
        "description": "Represents a Destination within Segment.\n\nA Destination is a target for Segment to forward data to, and represents a tool or storage Destination.",
        "title": "DestinationMetadataV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Destination metadata.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of the Destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the Destination.",
            "type": "string",
            "title": "description"
          },
          "slug": {
            "description": "The slug used to identify the Destination in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "logos": {
            "description": "The Destination's logos.",
            "title": "logos",
            "allOf": [
              {
                "$ref": "#/components/schemas/LogosBeta"
              }
            ]
          },
          "options": {
            "description": "Options configured for the Destination.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationOptionBeta"
            },
            "title": "options"
          },
          "status": {
            "description": "Support status of the Destination.",
            "enum": [
              "DEPRECATED",
              "PRIVATE_BETA",
              "PRIVATE_BUILDING",
              "PRIVATE_SUBMITTED",
              "PUBLIC",
              "PUBLIC_BETA",
              "UNAVAILABLE"
            ],
            "type": "string",
            "title": "status"
          },
          "previousNames": {
            "description": "A list of names previously used by the Destination.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "previousNames"
          },
          "categories": {
            "description": "A list of categories with which the Destination is associated.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "categories"
          },
          "website": {
            "description": "A website URL for this Destination.",
            "type": "string",
            "title": "website"
          },
          "components": {
            "description": "A list of components this Destination provides.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataComponentV1"
            },
            "title": "components"
          },
          "supportedFeatures": {
            "description": "Features that this Destination supports.\n\nConfig API note: holds `browserUnbundling` fields.",
            "title": "supportedFeatures",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataFeaturesV1"
              }
            ]
          },
          "supportedMethods": {
            "description": "Methods that this Destination supports.\n\nConfig API note: equal to `methods`.",
            "title": "supportedMethods",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataMethodsV1"
              }
            ]
          },
          "supportedPlatforms": {
            "description": "Platforms from which the Destination receives events.\n\nConfig API note: equal to `platforms`.",
            "title": "supportedPlatforms",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataPlatformsV1"
              }
            ]
          },
          "actions": {
            "description": "Actions available for the Destination.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataActionV1"
            },
            "title": "actions"
          },
          "presets": {
            "description": "Predefined Destination subscriptions that can optionally be applied when connecting a new instance of the Destination.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataSubscriptionPresetV1"
            },
            "title": "presets"
          },
          "contacts": {
            "description": "Contact info for Integration Owners.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "title": "contacts"
          },
          "partnerOwned": {
            "description": "Partner Owned flag.",
            "type": "boolean",
            "title": "partnerOwned"
          },
          "supportedRegions": {
            "description": "A list of supported regions for this Destination.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "supportedRegions"
          },
          "regionEndpoints": {
            "description": "The list of regional endpoints for this Destination.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "regionEndpoints"
          }
        },
        "required": [
          "actions",
          "categories",
          "components",
          "description",
          "id",
          "logos",
          "name",
          "options",
          "presets",
          "previousNames",
          "slug",
          "status",
          "supportedFeatures",
          "supportedMethods",
          "supportedPlatforms",
          "website"
        ]
      },
      "Contact": {
        "description": "The contact info for Integration Owners.",
        "title": "Contact",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of this contact.",
            "type": "string",
            "title": "name"
          },
          "email": {
            "description": "Email of this contact.",
            "type": "string",
            "title": "email"
          },
          "role": {
            "description": "Role of this contact.",
            "type": "string",
            "title": "role"
          },
          "isPrimary": {
            "description": "Whether this is a primary contact.",
            "type": "boolean",
            "title": "isPrimary"
          }
        },
        "required": [
          "email"
        ]
      },
      "DestinationMetadataComponentV1": {
        "description": "Represents a component this Destination provides.",
        "title": "DestinationMetadataComponentV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The component type.",
            "enum": [
              "ANDROID",
              "BROWSER",
              "IOS",
              "SERVER"
            ],
            "type": "string",
            "title": "type"
          },
          "code": {
            "description": "Link to the repository hosting the code for this component.",
            "type": "string",
            "title": "code"
          },
          "owner": {
            "description": "The owner of this component. Either 'SEGMENT' or 'PARTNER'.",
            "enum": [
              "PARTNER",
              "SEGMENT"
            ],
            "type": "string",
            "title": "owner"
          }
        },
        "required": [
          "code",
          "type"
        ]
      },
      "DestinationMetadataMethodsV1": {
        "description": "Represents methods that a given Destination supports.",
        "title": "DestinationMetadataMethodsV1",
        "type": "object",
        "properties": {
          "pageview": {
            "description": "Identifies if the Destination supports the `pageview` method.",
            "type": "boolean",
            "title": "pageview"
          },
          "identify": {
            "description": "Identifies if the Destination supports the `identify` method.",
            "type": "boolean",
            "title": "identify"
          },
          "alias": {
            "description": "Identifies if the Destination supports the `alias` method.",
            "type": "boolean",
            "title": "alias"
          },
          "track": {
            "description": "Identifies if the Destination supports the `track` method.",
            "type": "boolean",
            "title": "track"
          },
          "group": {
            "description": "Identifies if the Destination supports the `group` method.",
            "type": "boolean",
            "title": "group"
          }
        }
      },
      "DestinationMetadataPlatformsV1": {
        "description": "Represents platforms that a given Destination supports.",
        "title": "DestinationMetadataPlatformsV1",
        "type": "object",
        "properties": {
          "browser": {
            "description": "Whether this Destination supports browser events.",
            "type": "boolean",
            "title": "browser"
          },
          "server": {
            "description": "Whether this Destination supports server events.",
            "type": "boolean",
            "title": "server"
          },
          "mobile": {
            "description": "Whether this Destination supports mobile events.",
            "type": "boolean",
            "title": "mobile"
          }
        }
      },
      "DestinationMetadataFeaturesV1": {
        "description": "Represents features that a given Destination supports.",
        "title": "DestinationMetadataFeaturesV1",
        "type": "object",
        "properties": {
          "cloudModeInstances": {
            "description": "This Destination's support level for cloud mode instances.\nThe values '0' and 'NONE', and '1' and 'SINGLE' are equivalent.",
            "enum": [
              "0",
              "1",
              "MULTIPLE",
              "NONE",
              "SINGLE"
            ],
            "type": "string",
            "title": "cloudModeInstances"
          },
          "deviceModeInstances": {
            "description": "This Destination's support level for device mode instances.\nSupport for multiple device mode instances is currently not planned.\nThe values '0' and 'NONE', and '1' and 'SINGLE' are equivalent.",
            "enum": [
              "0",
              "1",
              "NONE",
              "SINGLE"
            ],
            "type": "string",
            "title": "deviceModeInstances"
          },
          "replay": {
            "description": "Whether this Destination supports replays.",
            "type": "boolean",
            "title": "replay"
          },
          "browserUnbundling": {
            "description": "Whether this Destination supports browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundling"
          },
          "browserUnbundlingPublic": {
            "description": "Whether this Destination supports public browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundlingPublic"
          }
        }
      },
      "DestinationMetadataActionV1": {
        "description": "Represents an Action, a building block of behavior that can be performed by the Destination.",
        "title": "DestinationMetadataActionV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key of the action.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "A machine-readable key unique to the action definition.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "A human-readable name for the action.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "A human-readable description of the action. May include Markdown.",
            "type": "string",
            "title": "description"
          },
          "platform": {
            "description": "The platform on which this action runs.",
            "enum": [
              "CLOUD",
              "MOBILE",
              "WEB"
            ],
            "type": "string",
            "title": "platform"
          },
          "hidden": {
            "description": "Whether the action should be hidden.",
            "type": "boolean",
            "title": "hidden"
          },
          "defaultTrigger": {
            "description": "The default value used as the trigger when connecting this action.",
            "type": "string",
            "title": "defaultTrigger",
            "nullable": true
          },
          "fields": {
            "description": "The fields expected in order to perform the action.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataActionFieldV1"
            },
            "title": "fields"
          }
        },
        "required": [
          "defaultTrigger",
          "description",
          "fields",
          "hidden",
          "id",
          "name",
          "platform",
          "slug"
        ]
      },
      "DestinationMetadataActionFieldV1": {
        "description": "Represents a field used in configuring an action.",
        "title": "DestinationMetadataActionFieldV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key of the field.",
            "type": "string",
            "title": "id"
          },
          "sortOrder": {
            "description": "The order this particular field is (used in the UI for displaying the fields in a specified order).",
            "type": "number",
            "title": "sortOrder"
          },
          "fieldKey": {
            "description": "A unique machine-readable key for the field. Should ideally match the expected key in the action\\'s API request.",
            "type": "string",
            "title": "fieldKey"
          },
          "label": {
            "description": "A human-readable label for this value.",
            "type": "string",
            "title": "label"
          },
          "type": {
            "description": "The data type for this value.",
            "enum": [
              "BOOLEAN",
              "DATETIME",
              "HIDDEN",
              "INTEGER",
              "NUMBER",
              "OBJECT",
              "PASSWORD",
              "STRING",
              "TEXT"
            ],
            "type": "string",
            "title": "type"
          },
          "description": {
            "description": "A human-readable description of this value. You can use Markdown.",
            "type": "string",
            "title": "description"
          },
          "placeholder": {
            "description": "An example value displayed but not saved.",
            "type": "string",
            "title": "placeholder"
          },
          "defaultValue": {
            "description": "A default value that is saved the first time an action is created.",
            "title": "defaultValue"
          },
          "required": {
            "description": "Whether this field is required.",
            "type": "boolean",
            "title": "required"
          },
          "multiple": {
            "description": "Whether a user can provide multiples of this field.",
            "type": "boolean",
            "title": "multiple"
          },
          "choices": {
            "description": "A list of machine-readable value/label pairs to populate a static dropdown.",
            "title": "choices"
          },
          "dynamic": {
            "description": "Whether this field should execute a dynamic request to fetch choices to populate a dropdown. When true, `choices` is ignored.",
            "type": "boolean",
            "title": "dynamic"
          },
          "allowNull": {
            "description": "Whether this field allows null values.",
            "type": "boolean",
            "title": "allowNull"
          }
        },
        "required": [
          "allowNull",
          "description",
          "dynamic",
          "fieldKey",
          "id",
          "label",
          "multiple",
          "required",
          "sortOrder",
          "type"
        ]
      },
      "DestinationMetadataSubscriptionPresetV1": {
        "description": "Represents a set of defaults for a Destination subscription.",
        "title": "DestinationMetadataSubscriptionPresetV1",
        "type": "object",
        "properties": {
          "actionId": {
            "description": "The unique identifier for the Destination Action to trigger.",
            "type": "string",
            "title": "actionId"
          },
          "name": {
            "description": "The name of the subscription.",
            "type": "string",
            "title": "name"
          },
          "fields": {
            "description": "The default settings for action fields.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "trigger": {
            "description": "FQL string that describes what events should trigger an action. See https://segment.com/docs/config-api/fql/ for more information regarding Segment's Filter Query Language (FQL).",
            "type": "string",
            "title": "trigger"
          }
        },
        "required": [
          "actionId",
          "fields",
          "name",
          "trigger"
        ]
      },
      "DestinationSubscription": {
        "title": "DestinationSubscription",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the subscription.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the subscription.",
            "type": "string",
            "title": "name"
          },
          "actionId": {
            "description": "The unique identifier for the Destination action to trigger.",
            "type": "string",
            "title": "actionId"
          },
          "actionSlug": {
            "description": "The URL-friendly key for the associated Destination action.",
            "type": "string",
            "title": "actionSlug"
          },
          "destinationId": {
            "description": "The associated Destination instance id.",
            "type": "string",
            "title": "destinationId"
          },
          "enabled": {
            "description": "Is the subscription enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The customer settings for action fields.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscriptionFields"
              }
            ]
          },
          "trigger": {
            "description": "FQL string that describes what events should trigger a Destination action.",
            "type": "string",
            "title": "trigger"
          },
          "modelId": {
            "description": "The unique identifier for the linked ReverseETLModel, if this part of a\nReverse ETL connection.",
            "type": "string",
            "title": "modelId"
          }
        },
        "required": [
          "actionId",
          "actionSlug",
          "destinationId",
          "enabled",
          "id",
          "name",
          "settings",
          "trigger"
        ]
      },
      "DestinationSubscriptionFields": {
        "description": "Represents settings used to configure an action subscription.",
        "title": "DestinationSubscriptionFields",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSubscriptionsFromDestinationAlphaInput": {
        "description": "Input for ListDestinationSubscriptionsAlpha.",
        "title": "ListSubscriptionsFromDestinationAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListSubscriptionsFromDestinationAlphaOutput": {
        "description": "Output for ListDestinationSubscriptionsAlpha.",
        "title": "ListSubscriptionsFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "A list of Destination subscriptions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationSubscription"
            },
            "title": "subscriptions"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "subscriptions"
        ]
      },
      "GetSubscriptionFromDestinationAlphaInput": {
        "description": "Fetches a Destination subscription.",
        "title": "GetSubscriptionFromDestinationAlphaInput",
        "type": "object",
        "properties": {}
      },
      "GetSubscriptionFromDestinationAlphaOutput": {
        "description": "Returns a subscription for a given subscription id.",
        "title": "GetSubscriptionFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscription": {
            "description": "The Destination subscription.",
            "title": "subscription",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscription"
              }
            ]
          }
        },
        "required": [
          "subscription"
        ]
      },
      "CreateDestinationSubscriptionAlphaInput": {
        "description": "The basic input parameters for creating a Destination subscription.",
        "title": "CreateDestinationSubscriptionAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "A user-defined name for the subscription.",
            "type": "string",
            "title": "name"
          },
          "actionId": {
            "description": "The associated action id the subscription should trigger.",
            "type": "string",
            "title": "actionId"
          },
          "trigger": {
            "description": "The FQL statement.",
            "type": "string",
            "title": "trigger"
          },
          "enabled": {
            "description": "Is the subscription enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The fields used for configuring this action.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscriptionFields"
              }
            ]
          },
          "modelId": {
            "description": "When creating a Reverse ETL connection, indicates the Model being used to\nextract data.",
            "type": "string",
            "title": "modelId"
          }
        },
        "required": [
          "actionId",
          "enabled",
          "name",
          "trigger"
        ]
      },
      "CreateDestinationSubscriptionAlphaOutput": {
        "description": "Returns a newly created Destination subscription.",
        "title": "CreateDestinationSubscriptionAlphaOutput",
        "type": "object",
        "properties": {
          "destinationSubscription": {
            "description": "The Destination subscription.",
            "title": "destinationSubscription",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscription"
              }
            ]
          }
        },
        "required": [
          "destinationSubscription"
        ]
      },
      "DestinationSubscriptionUpdateInput": {
        "description": "The input parameters for updating a Destination subscription.",
        "title": "DestinationSubscriptionUpdateInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "The user-defined name for the subscription.",
            "type": "string",
            "title": "name"
          },
          "trigger": {
            "description": "The fql statement.",
            "type": "string",
            "title": "trigger"
          },
          "enabled": {
            "description": "Is the subscription enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The fields used for configuring this action.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscriptionFields"
              }
            ]
          }
        }
      },
      "UpdateSubscriptionForDestinationAlphaInput": {
        "description": "The basic input parameters for updating a Destination subscription.",
        "title": "UpdateSubscriptionForDestinationAlphaInput",
        "type": "object",
        "properties": {
          "input": {
            "description": "A set of valid Destination input params required for updating.",
            "title": "input",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscriptionUpdateInput"
              }
            ]
          }
        },
        "required": [
          "input"
        ]
      },
      "UpdateSubscriptionForDestinationAlphaOutput": {
        "description": "Returns the updated Destination subscription.",
        "title": "UpdateSubscriptionForDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscription": {
            "description": "The Destination subscription.",
            "title": "subscription",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscription"
              }
            ]
          }
        },
        "required": [
          "subscription"
        ]
      },
      "RemoveSubscriptionFromDestinationAlphaInput": {
        "description": "Deletes a Destination by id.",
        "title": "RemoveSubscriptionFromDestinationAlphaInput",
        "type": "object",
        "properties": {}
      },
      "RemoveSubscriptionFromDestinationAlphaOutput": {
        "description": "Returns a Destination deletion flag.",
        "title": "RemoveSubscriptionFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "ListDeliveryMetricsSummaryFromDestinationBetaInput": {
        "description": "Input to retrieve event delivery metrics summary for a Destination.",
        "title": "ListDeliveryMetricsSummaryFromDestinationBetaInput",
        "type": "object",
        "properties": {}
      },
      "ListDeliveryMetricsSummaryFromDestinationBetaOutput": {
        "description": "Output to retrieve event delivery metrics summary for a Destination.",
        "title": "ListDeliveryMetricsSummaryFromDestinationBetaOutput",
        "type": "object",
        "properties": {
          "deliveryMetricsSummary": {
            "description": "The delivery metrics summary returned.",
            "title": "deliveryMetricsSummary",
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryMetricsSummaryBeta"
              }
            ]
          }
        },
        "required": [
          "deliveryMetricsSummary"
        ]
      },
      "DeliveryMetricsSummaryBeta": {
        "description": "Defines the summary of delivery metrics for a Destination.",
        "title": "DeliveryMetricsSummaryBeta",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The Destination metadata id.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "metrics": {
            "description": "The summary of event delivery metrics for the requested Destination.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricBeta"
            },
            "title": "metrics"
          }
        },
        "required": [
          "destinationMetadataId",
          "metrics",
          "sourceId"
        ]
      },
      "MetricBeta": {
        "description": "The event delivery metric.",
        "title": "MetricBeta",
        "type": "object",
        "properties": {
          "metricName": {
            "description": "The name of the metric.",
            "type": "string",
            "title": "metricName"
          },
          "total": {
            "description": "Number of occurrences of the metric.",
            "type": "number",
            "title": "total"
          },
          "breakdown": {
            "description": "Breakdown of metrics within a metric.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BreakdownBeta"
            },
            "title": "breakdown"
          }
        },
        "required": [
          "metricName",
          "total"
        ]
      },
      "BreakdownBeta": {
        "description": "The breakdown of a metric.",
        "title": "BreakdownBeta",
        "type": "object",
        "properties": {
          "metricName": {
            "description": "The name of the metric.",
            "type": "string",
            "title": "metricName"
          },
          "value": {
            "description": "Number of occurrences of the metric.",
            "type": "number",
            "title": "value"
          }
        },
        "required": [
          "metricName",
          "value"
        ]
      },
      "DestinationV1": {
        "description": "Business tools or apps that you can connect to the data flowing through Segment.\n\nThis is equal to the Destination object in Config API, with the following fields omitted:\n- catalogId\n- createTime\n- updateTime\n- connectionMode.",
        "title": "DestinationV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this instance of a Destination.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of this instance of a Destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Whether this instance of a Destination receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadata": {
            "description": "The metadata of the Destination of which this Destination is an instance of. For example, Google Analytics or Amplitude.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataV1"
              }
            ]
          },
          "sourceId": {
            "description": "The id of a Source connected to this instance of a Destination.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The collection of settings associated with a Destination.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": [
          "enabled",
          "id",
          "metadata",
          "settings",
          "sourceId"
        ]
      },
      "ListDestinationsV1Input": {
        "description": "Loads all Destinations connected to the current Workspace.",
        "title": "ListDestinationsV1Input",
        "type": "object",
        "properties": {}
      },
      "ListDestinationsV1Output": {
        "description": "Returns all Destinations connected to the current Workspace.",
        "title": "ListDestinationsV1Output",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "The list that contains the Destinations connected to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationV1"
            },
            "title": "destinations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "destinations",
          "pagination"
        ]
      },
      "GetDestinationV1Input": {
        "description": "Looks up a single Destination by its id.",
        "title": "GetDestinationV1Input",
        "type": "object",
        "properties": {}
      },
      "GetDestinationV1Output": {
        "description": "Returns a single Destination by its id.",
        "title": "GetDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "description": "The Destination looked up.",
            "title": "destination",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationV1"
              }
            ]
          }
        },
        "required": [
          "destination"
        ]
      },
      "DeleteDestinationV1Input": {
        "description": "Deletes a single Destination by its id.",
        "title": "DeleteDestinationV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteDestinationV1Output": {
        "description": "Returns the status of a Destination deletion.",
        "title": "DeleteDestinationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Warehouse deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateDestinationV1Output": {
        "description": "Returns the updated Destination.",
        "title": "UpdateDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "description": "The updated Destination.",
            "title": "destination",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationV1"
              }
            ]
          }
        },
        "required": [
          "destination"
        ]
      },
      "UpdateDestinationV1Input": {
        "description": "Updates a single Destination by its id.",
        "title": "UpdateDestinationV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "Defines the display name of the Destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name",
            "nullable": true
          },
          "enabled": {
            "description": "Whether this Destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "An optional object that contains settings for the Destination based on the \"required\" and \"advanced\" settings present\nin the Destination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        }
      },
      "CreateDestinationV1Output": {
        "description": "Creates a new Destination.",
        "title": "CreateDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "description": "The created Destination.",
            "title": "destination",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationV1"
              }
            ]
          }
        },
        "required": [
          "destination"
        ]
      },
      "CreateDestinationV1Input": {
        "description": "Creates a new Destination.",
        "title": "CreateDestinationV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source to connect to this Destination instance.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "metadataId": {
            "description": "The id of the metadata to link to the new Destination.",
            "type": "string",
            "title": "metadataId"
          },
          "enabled": {
            "description": "Whether this Destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the Destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for the Destination based on the \"required\" and \"advanced\" settings present in the\nDestination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": [
          "metadataId",
          "settings",
          "sourceId"
        ]
      },
      "EchoAlphaInput": {
        "description": "EchoAlphaInput and EchoAlphaOutput are needed by unit tests in the generated Go code.\n\nIf you change these, make sure `make clients` works locally, and generates the Go client correctly.\nEcho request with options.",
        "title": "EchoAlphaInput",
        "type": "object",
        "properties": {}
      },
      "EchoAlphaOutput": {
        "description": "Echo response.",
        "title": "EchoAlphaOutput",
        "type": "object",
        "properties": {
          "method": {
            "description": "The HTTP method used for this round-trip.\n\nCurrently, this endpoint supports only `get` and `post` methods.",
            "enum": [
              "get",
              "post"
            ],
            "type": "string",
            "title": "method"
          },
          "message": {
            "description": "The string passed in the `message` input field.",
            "type": "string",
            "title": "message"
          },
          "headers": {
            "description": "The request's HTTP headers.",
            "type": "object",
            "additionalProperties": true,
            "title": "headers"
          }
        },
        "required": [
          "headers",
          "message",
          "method"
        ]
      },
      "EchoV1Input": {
        "description": "Echo request with options.",
        "title": "EchoV1Input",
        "type": "object",
        "properties": {}
      },
      "EchoV1Output": {
        "description": "Echo response.",
        "title": "EchoV1Output",
        "type": "object",
        "properties": {
          "method": {
            "description": "The HTTP method used for this round-trip.\n\nCurrently, this endpoint supports only `get` and `post` methods.",
            "enum": [
              "get",
              "post"
            ],
            "type": "string",
            "title": "method"
          },
          "message": {
            "description": "The string passed in the `message` input field.",
            "type": "string",
            "title": "message"
          },
          "headers": {
            "description": "The request's HTTP headers.",
            "type": "object",
            "additionalProperties": true,
            "title": "headers"
          }
        },
        "required": [
          "headers",
          "message",
          "method"
        ]
      },
      "GenerateUploadURLForEdgeFunctionsAlphaInput": {
        "description": "Input for GenerateSignedUrl.",
        "title": "GenerateUploadURLForEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {}
      },
      "GenerateUploadURLForEdgeFunctionsAlphaOutput": {
        "description": "Output for GenerateSignedUrl.",
        "title": "GenerateUploadURLForEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "uploadURL": {
            "description": "A temporary URL that can be used to upload your Edge Functions bundle. Expires in 15 minutes.",
            "type": "string",
            "title": "uploadURL"
          }
        },
        "required": [
          "uploadURL"
        ]
      },
      "CreateEdgeFunctionsAlphaInput": {
        "description": "Input for CreateEdgeFunctions.",
        "title": "CreateEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {
          "uploadURL": {
            "description": "The id of the Source associated with this Edge Function.",
            "type": "string",
            "title": "uploadURL"
          }
        },
        "required": [
          "uploadURL"
        ]
      },
      "CreateEdgeFunctionsAlphaOutput": {
        "description": "Output for CreateEdgeFunctions.",
        "title": "CreateEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "description": "The created Edge Function.",
            "title": "edgeFunctions",
            "allOf": [
              {
                "$ref": "#/components/schemas/EdgeFunctionsAlpha"
              }
            ]
          }
        },
        "required": [
          "edgeFunctions"
        ]
      },
      "GetLatestFromEdgeFunctionsAlphaInput": {
        "description": "Input for GetLatestFromEdgeFunctions.",
        "title": "GetLatestFromEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {}
      },
      "GetLatestFromEdgeFunctionsAlphaOutput": {
        "description": "Output for GetLatestFromEdgeFunctions.",
        "title": "GetLatestFromEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "description": "The latest version of Edge Function bundle.",
            "title": "edgeFunctions",
            "allOf": [
              {
                "$ref": "#/components/schemas/EdgeFunctionsAlpha"
              }
            ]
          }
        },
        "required": [
          "edgeFunctions"
        ]
      },
      "DisableEdgeFunctionsAlphaInput": {
        "description": "Input for DisableEdgeFunctions.",
        "title": "DisableEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {}
      },
      "DisableEdgeFunctionsAlphaOutput": {
        "description": "Output for DisableEdgeFunctions.",
        "title": "DisableEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "description": "The latest version of Edge Function bundle.",
            "title": "edgeFunctions",
            "allOf": [
              {
                "$ref": "#/components/schemas/EdgeFunctionsAlpha"
              }
            ]
          }
        },
        "required": [
          "edgeFunctions"
        ]
      },
      "EdgeFunctionsAlpha": {
        "description": "Represents an Edge Function bundle.",
        "title": "EdgeFunctionsAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The Edge Function id.",
            "type": "string",
            "title": "id"
          },
          "sourceId": {
            "description": "The Source id.",
            "type": "string",
            "title": "sourceId"
          },
          "createdAt": {
            "description": "Creation date.",
            "type": "string",
            "title": "createdAt"
          },
          "createdBy": {
            "description": "Creating user's id.",
            "type": "string",
            "title": "createdBy"
          },
          "downloadURL": {
            "description": "The CDN URL that can be used to fetch your latest EdgeFunctions bundle.",
            "type": "string",
            "title": "downloadURL"
          },
          "version": {
            "description": "Revision number associated with the latest Edge Function.",
            "type": "number",
            "title": "version"
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "downloadURL",
          "id",
          "sourceId",
          "version"
        ]
      },
      "ListFunctionVersionsAlphaInput": {
        "description": "Lists all versions of a Function.",
        "title": "ListFunctionVersionsAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListFunctionVersionsAlphaOutput": {
        "description": "Lists Versions of a Function.",
        "title": "ListFunctionVersionsAlphaOutput",
        "type": "object",
        "properties": {
          "versions": {
            "description": "An array of Functions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Version"
            },
            "title": "versions"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "versions"
        ]
      },
      "GetFunctionVersionAlphaInput": {
        "description": "Gets a Function version.",
        "title": "GetFunctionVersionAlphaInput",
        "type": "object",
        "properties": {}
      },
      "GetFunctionVersionAlphaOutput": {
        "description": "Get Function version output.",
        "title": "GetFunctionVersionAlphaOutput",
        "type": "object",
        "properties": {
          "version": {
            "description": "Functions version.",
            "title": "version",
            "allOf": [
              {
                "$ref": "#/components/schemas/Version"
              }
            ]
          }
        },
        "required": [
          "version"
        ]
      },
      "RestoreFunctionVersionAlphaInput": {
        "description": "Restore a given Function version.",
        "title": "RestoreFunctionVersionAlphaInput",
        "type": "object",
        "properties": {
          "versionId": {
            "description": "An identifier for this version.",
            "type": "string",
            "title": "versionId"
          }
        },
        "required": [
          "versionId"
        ]
      },
      "RestoreFunctionVersionAlphaOutput": {
        "description": "Restore version output.",
        "title": "RestoreFunctionVersionAlphaOutput",
        "type": "object",
        "properties": {
          "version": {
            "description": "Restored version.",
            "title": "version",
            "allOf": [
              {
                "$ref": "#/components/schemas/Version"
              }
            ]
          }
        },
        "required": [
          "version"
        ]
      },
      "InsertFunctionInstanceAlpha": {
        "title": "InsertFunctionInstanceAlpha",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "integrationId": {
            "type": "string",
            "title": "integrationId"
          },
          "classId": {
            "type": "string",
            "title": "classId"
          },
          "enabled": {
            "type": "boolean",
            "title": "enabled"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "type": "string",
            "title": "updatedAt"
          },
          "settings": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "title": "settings"
          },
          "encryptedSettings": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "title": "encryptedSettings"
          }
        },
        "required": [
          "classId",
          "createdAt",
          "enabled",
          "encryptedSettings",
          "id",
          "integrationId",
          "settings",
          "updatedAt"
        ]
      },
      "CreateInsertFunctionInstanceAlphaInput": {
        "description": "Creates an insert Function instance.",
        "title": "CreateInsertFunctionInstanceAlphaInput",
        "type": "object",
        "properties": {
          "functionId": {
            "description": "Insert Function id to which this instance is associated.",
            "type": "string",
            "title": "functionId"
          },
          "integrationId": {
            "description": "The Source or Destination id to be connected.",
            "type": "string",
            "title": "integrationId"
          },
          "enabled": {
            "description": "Whether this insert Function instance should be enabled for the Destination.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the insert Function instance.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for this insert Function instance based on the settings present in the\ninsert Function class.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": [
          "functionId",
          "integrationId",
          "name",
          "settings"
        ]
      },
      "CreateInsertFunctionInstanceAlphaOutput": {
        "description": "Creates an insert Function instance.",
        "title": "CreateInsertFunctionInstanceAlphaOutput",
        "type": "object",
        "properties": {
          "insertFunctionInstance": {
            "description": "The created instance.",
            "title": "insertFunctionInstance",
            "allOf": [
              {
                "$ref": "#/components/schemas/InsertFunctionInstanceAlpha"
              }
            ]
          }
        },
        "required": [
          "insertFunctionInstance"
        ]
      },
      "ListInsertFunctionInstancesAlphaInput": {
        "description": "List all insert Function instances connected to the insert Function.",
        "title": "ListInsertFunctionInstancesAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListInsertFunctionInstancesAlphaOutput": {
        "description": "Returns a list of insert Function instances connected to the insert Function.",
        "title": "ListInsertFunctionInstancesAlphaOutput",
        "type": "object",
        "properties": {
          "instances": {
            "description": "All insert Function instances found.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsertFunctionInstanceAlpha"
            },
            "title": "instances"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "instances",
          "pagination"
        ]
      },
      "UpdateInsertFunctionInstanceAlphaInput": {
        "description": "Updates an insert Function instance.",
        "title": "UpdateInsertFunctionInstanceAlphaInput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether this insert Function instance should be enabled for the Destination.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the insert Function instance.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for this insert Function instance based on the settings present in the\ninsert Function class.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": [
          "settings"
        ]
      },
      "UpdateInsertFunctionInstanceAlphaOutput": {
        "description": "Returns the updated insert Function instance.",
        "title": "UpdateInsertFunctionInstanceAlphaOutput",
        "type": "object",
        "properties": {
          "insertFunctionInstance": {
            "description": "The updated instance.",
            "title": "insertFunctionInstance",
            "allOf": [
              {
                "$ref": "#/components/schemas/InsertFunctionInstanceAlpha"
              }
            ]
          }
        },
        "required": [
          "insertFunctionInstance"
        ]
      },
      "DeleteInsertFunctionInstanceAlphaInput": {
        "description": "Delete an insert Function instance.",
        "title": "DeleteInsertFunctionInstanceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "DeleteInsertFunctionInstanceAlphaOutput": {
        "description": "Delete an insert Function instance.",
        "title": "DeleteInsertFunctionInstanceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "FunctionSettingV1": {
        "title": "FunctionSettingV1",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of this Function Setting.",
            "type": "string",
            "title": "name"
          },
          "label": {
            "description": "The label for this Function Setting.",
            "type": "string",
            "title": "label"
          },
          "description": {
            "description": "A description of this Function Setting.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The type of this Function Setting.",
            "enum": [
              "ARRAY",
              "BOOLEAN",
              "STRING",
              "TEXT_MAP"
            ],
            "type": "string",
            "title": "type"
          },
          "required": {
            "description": "Whether this Function Setting is required.",
            "type": "boolean",
            "title": "required"
          },
          "sensitive": {
            "description": "Whether this Function Setting contains sensitive information.",
            "type": "boolean",
            "title": "sensitive"
          }
        },
        "required": [
          "description",
          "label",
          "name",
          "required",
          "sensitive",
          "type"
        ]
      },
      "FunctionV1": {
        "description": "Represents a Function.",
        "title": "FunctionV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "An identifier for this Function.",
            "type": "string",
            "title": "id"
          },
          "resourceType": {
            "description": "The Function type.\n\nConfig API note: equal to `type`.",
            "enum": [
              "DESTINATION",
              "INSERT_DESTINATION",
              "SOURCE"
            ],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": {
            "description": "The time this Function was created.",
            "type": "string",
            "title": "createdAt"
          },
          "createdBy": {
            "description": "The id of the user who created this Function.",
            "type": "string",
            "title": "createdBy"
          },
          "code": {
            "description": "The Function code.",
            "type": "string",
            "title": "code"
          },
          "deployedAt": {
            "description": "The time of this Function's last deployment.",
            "type": "string",
            "title": "deployedAt",
            "nullable": true
          },
          "settings": {
            "description": "The list of settings for this Function.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionSettingV1"
            },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this Function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this Function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": {
            "description": "The URL of the logo for this Function.",
            "type": "string",
            "title": "logoUrl"
          },
          "previewWebhookUrl": {
            "description": "The preview webhook URL for this Function.",
            "type": "string",
            "title": "previewWebhookUrl"
          },
          "batchMaxCount": {
            "description": "The max count of the batch for this Function.",
            "type": "number",
            "title": "batchMaxCount"
          },
          "catalogId": {
            "description": "The catalog id of this Function.",
            "type": "string",
            "title": "catalogId"
          },
          "isLatestVersion": {
            "description": "Whether the deployment of this Function is the latest version.",
            "type": "boolean",
            "title": "isLatestVersion"
          }
        }
      },
      "ListFunctionItemV1": {
        "description": "Represents a Function in a list.",
        "title": "ListFunctionItemV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "An identifier for this Function.",
            "type": "string",
            "title": "id"
          },
          "resourceType": {
            "description": "The Function type.\n\nConfig API note: equal to `type`.",
            "enum": [
              "DESTINATION",
              "INSERT_DESTINATION",
              "SOURCE"
            ],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": {
            "description": "The time this Function was created.",
            "type": "string",
            "title": "createdAt"
          },
          "createdBy": {
            "description": "The id of the user who created this Function.",
            "type": "string",
            "title": "createdBy"
          },
          "displayName": {
            "description": "A display name for this Function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this Function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": {
            "description": "The URL of the logo for this Function.",
            "type": "string",
            "title": "logoUrl"
          },
          "catalogId": {
            "description": "The catalog id of this Function.",
            "type": "string",
            "title": "catalogId"
          }
        }
      },
      "GetFunctionV1Input": {
        "description": "Gets a single Function.",
        "title": "GetFunctionV1Input",
        "type": "object",
        "properties": {}
      },
      "GetFunctionV1Output": {
        "description": "Gets a single Function.",
        "title": "GetFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionV1"
              }
            ],
            "description": "A Function object.",
            "title": "function",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "function"
        ]
      },
      "ListFunctionsV1Input": {
        "description": "Lists all Functions in a Workspace.",
        "title": "ListFunctionsV1Input",
        "type": "object",
        "properties": {}
      },
      "ListFunctionsV1Output": {
        "description": "Lists Functions in a Workspace.",
        "title": "ListFunctionsV1Output",
        "type": "object",
        "properties": {
          "functions": {
            "description": "An array of Functions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListFunctionItemV1"
            },
            "title": "functions"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "functions",
          "pagination"
        ]
      },
      "CreateFunctionV1Input": {
        "description": "Creates a Function.",
        "title": "CreateFunctionV1Input",
        "type": "object",
        "properties": {
          "code": {
            "description": "The Function code.",
            "type": "string",
            "title": "code"
          },
          "settings": {
            "description": "The list of settings for this Function.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionSettingV1"
            },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this Function.\n\nNote that Destination Functions append the Workspace to the display name.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": {
            "description": "The URL of the logo for this Function.",
            "type": "string",
            "title": "logoUrl"
          },
          "resourceType": {
            "description": "The Function type.\n\nConfig API note: equal to `type`.",
            "enum": [
              "DESTINATION",
              "INSERT_DESTINATION",
              "SOURCE"
            ],
            "type": "string",
            "title": "resourceType"
          },
          "description": {
            "description": "A description for this Function.",
            "type": "string",
            "title": "description"
          }
        },
        "required": [
          "code",
          "displayName",
          "resourceType"
        ]
      },
      "CreateFunctionV1Output": {
        "description": "Create a Function.",
        "title": "CreateFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "description": "A Function object.",
            "title": "function",
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionV1"
              }
            ]
          }
        },
        "required": [
          "function"
        ]
      },
      "DeleteFunctionV1Input": {
        "description": "Delete a single Function.",
        "title": "DeleteFunctionV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteFunctionV1Output": {
        "description": "Delete a single Function.",
        "title": "DeleteFunctionV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateFunctionV1Input": {
        "description": "Update a Function.",
        "title": "UpdateFunctionV1Input",
        "type": "object",
        "properties": {
          "code": {
            "description": "The Function code.",
            "type": "string",
            "title": "code"
          },
          "settings": {
            "description": "The list of settings for this Function.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionSettingV1"
            },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this Function.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": {
            "description": "A logo for this Function.",
            "type": "string",
            "title": "logoUrl"
          },
          "description": {
            "description": "A description for this Function.",
            "type": "string",
            "title": "description"
          }
        }
      },
      "UpdateFunctionV1Output": {
        "description": "Create a Function.",
        "title": "UpdateFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "description": "The updated Function object.",
            "title": "function",
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionV1"
              }
            ]
          }
        },
        "required": [
          "function"
        ]
      },
      "CreateFunctionDeploymentV1Input": {
        "description": "Updates the deployment for a Source Function instance.",
        "title": "CreateFunctionDeploymentV1Input",
        "type": "object",
        "properties": {}
      },
      "CreateFunctionDeploymentV1Output": {
        "description": "Updates the deployment for a Source Function instance.",
        "title": "CreateFunctionDeploymentV1Output",
        "type": "object",
        "properties": {
          "functionDeployment": {
            "description": "The status of the operation.",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "SUCCESS"
                ],
                "title": "status"
              }
            },
            "required": [
              "status"
            ],
            "title": "functionDeployment"
          }
        },
        "required": [
          "functionDeployment"
        ]
      },
      "Version": {
        "description": "Represents a Function Version in a list.",
        "title": "Version",
        "type": "object",
        "properties": {
          "id": {
            "description": "An identifier for this version.",
            "type": "string",
            "title": "id"
          },
          "author": {
            "description": "Author of this version.",
            "type": "string",
            "title": "author"
          },
          "code": {
            "description": "Source code of this version.",
            "type": "string",
            "title": "code"
          },
          "isDeployed": {
            "description": "The deployed status of this version.",
            "type": "boolean",
            "title": "isDeployed"
          },
          "createdAt": {
            "description": "The time of this Version's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The time of this Version's latest update.",
            "type": "string",
            "title": "updatedAt"
          },
          "deployedAt": {
            "description": "The time of this Version's last deployment.",
            "type": "string",
            "title": "deployedAt"
          }
        },
        "required": [
          "code",
          "id"
        ]
      },
      "HandleWebhookInput": {
        "description": "Function webhook input.",
        "title": "HandleWebhookInput",
        "type": "object",
        "properties": {
          "w": {
            "description": "The Workspace id.",
            "type": "string",
            "title": "w"
          },
          "n": {
            "description": "The webhook nonce.",
            "type": "string",
            "title": "n"
          },
          "t": {
            "description": "The webhook timestamp.",
            "type": "string",
            "title": "t"
          },
          "s": {
            "description": "The webhook signature.",
            "type": "string",
            "title": "s"
          }
        },
        "required": [
          "n",
          "s",
          "t",
          "w"
        ]
      },
      "HandleWebhookOutput": {
        "description": "Function webhook output status.",
        "title": "HandleWebhookOutput",
        "type": "object",
        "properties": {
          "statusCode": {
            "description": "The http status code.",
            "type": "number",
            "title": "statusCode"
          },
          "success": {
            "description": "The status of the operation.",
            "type": "boolean",
            "title": "success"
          }
        },
        "required": [
          "statusCode",
          "success"
        ]
      },
      "ResourceV1": {
        "description": "Represents a permission's resource.",
        "title": "ResourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of this resource.",
            "type": "string",
            "title": "id"
          },
          "type": {
            "description": "The kind of resource this permission applies to.",
            "enum": [
              "FUNCTION",
              "SOURCE",
              "SPACE",
              "WAREHOUSE",
              "WORKSPACE"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InvitePermissionV1": {
        "description": "Defines a permission to apply to the user in an invite.",
        "title": "InvitePermissionV1",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The id of the role.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources to grant the invited users access to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceV1"
            },
            "title": "resources"
          },
          "labels": {
            "description": "The labels that determine which resources to grant users access to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedLabelBeta"
            },
            "title": "labels"
          }
        },
        "required": [
          "roleId"
        ]
      },
      "InviteV1": {
        "description": "Defines an invitation to join a Workspace.",
        "title": "InviteV1",
        "type": "object",
        "properties": {
          "email": {
            "description": "The invited user's email to attach the permissions to.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions to attach to the invited user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitePermissionV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "email"
        ]
      },
      "CreateInvitesV1Input": {
        "description": "Invites a user to a Workspace with specified permissions.",
        "title": "CreateInvitesV1Input",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InviteV1"
            },
            "title": "invites"
          }
        },
        "required": [
          "invites"
        ]
      },
      "CreateInvitesV1Output": {
        "description": "Returns the emails of the invited users.",
        "title": "CreateInvitesV1Output",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The list of emails invited to the Workspace.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "emails"
          }
        },
        "required": [
          "emails"
        ]
      },
      "DeleteInvitesV1Input": {
        "description": "Removes pre-existing invitations to join a Workspace.",
        "title": "DeleteInvitesV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteInvitesV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteInvitesV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the invite deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "ListInvitesV1Input": {
        "description": "Retrieves a list of existing invitations to join a Workspace.",
        "title": "ListInvitesV1Input",
        "type": "object",
        "properties": {}
      },
      "ListInvitesV1Output": {
        "description": "Returns the list of invites.",
        "title": "ListInvitesV1Output",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "invites"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "invites",
          "pagination"
        ]
      },
      "PermissionResourceV1": {
        "description": "The most basic representation of a resource belonging to a set of permissions.",
        "title": "PermissionResourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of this resource.",
            "type": "string",
            "title": "id"
          },
          "type": {
            "description": "The type for this resource.",
            "enum": [
              "FUNCTION",
              "SOURCE",
              "SPACE",
              "WAREHOUSE",
              "WORKSPACE"
            ],
            "type": "string",
            "title": "type"
          },
          "labels": {
            "description": "The labels that further refine access to this resource. Labels are exclusive to Workspace-level permissions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedLabelBeta"
            },
            "title": "labels"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "PermissionV1": {
        "description": "A registered set of permissions for a subject, extending a role to a resource.",
        "title": "PermissionV1",
        "type": "object",
        "properties": {
          "roleName": {
            "description": "The name of the role associated with this permission.",
            "type": "string",
            "title": "roleName"
          },
          "roleId": {
            "description": "The id of the role associated with this permission.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources associated with this permission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResourceV1"
            },
            "title": "resources"
          },
          "labels": {
            "description": "The labels to attach to this permission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedLabelBeta"
            },
            "title": "labels"
          }
        },
        "required": [
          "resources",
          "roleId",
          "roleName"
        ]
      },
      "MinimalUserGroupV1": {
        "description": "The least amount of information needed to identify a user group.",
        "title": "MinimalUserGroupV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the user group.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the user group.",
            "type": "string",
            "title": "name"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "DeleteUsersV1Input": {
        "description": "Removes users from a Workspace.",
        "title": "DeleteUsersV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteUsersV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteUsersV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag that indicates the status of a successful deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "AccessPermissionV1": {
        "description": "A permission governing access to a resource.",
        "title": "AccessPermissionV1",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The id of the role that applies to this permission.",
            "type": "string",
            "title": "roleId"
          },
          "roleName": {
            "description": "The name of the role that applies to this permission.",
            "type": "string",
            "title": "roleName"
          },
          "resources": {
            "description": "The resources included with this permission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResourceV1"
            },
            "title": "resources"
          }
        },
        "required": [
          "resources",
          "roleId",
          "roleName"
        ]
      },
      "PermissionInputV1": {
        "description": "The input for a permission, associated with a resource and/or labels.",
        "title": "PermissionInputV1",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The role id of this permission.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources to link the selected role to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResourceV1"
            },
            "title": "resources"
          }
        },
        "required": [
          "resources",
          "roleId"
        ]
      },
      "AddPermissionsToUserV1Input": {
        "description": "Adds a list of permissions to a user.",
        "title": "AddPermissionsToUserV1Input",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInputV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "permissions"
        ]
      },
      "AddPermissionsToUserV1Output": {
        "description": "Returns the user's permissions, including the added permissions.",
        "title": "AddPermissionsToUserV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The new permissions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermissionV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "permissions"
        ]
      },
      "ReplacePermissionsForUserV1Input": {
        "description": "Updates the list of permissions for a user.",
        "title": "ReplacePermissionsForUserV1Input",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInputV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "permissions"
        ]
      },
      "ReplacePermissionsForUserV1Output": {
        "description": "Returns the user's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermissionV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "permissions"
        ]
      },
      "ListUsersV1Input": {
        "description": "Returns a list of users with access to the Workspace.",
        "title": "ListUsersV1Input",
        "type": "object",
        "properties": {}
      },
      "ListUsersV1Output": {
        "description": "Returns the list of users.",
        "title": "ListUsersV1Output",
        "type": "object",
        "properties": {
          "users": {
            "description": "The list of users.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserV1"
            },
            "title": "users"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "users"
        ]
      },
      "GetUserV1Input": {
        "description": "Returns a user.",
        "title": "GetUserV1Input",
        "type": "object",
        "properties": {}
      },
      "GetUserV1Output": {
        "description": "Returns the user.",
        "title": "GetUserV1Output",
        "type": "object",
        "properties": {
          "user": {
            "description": "The user object.",
            "title": "user",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserV1"
              }
            ]
          }
        },
        "required": [
          "user"
        ]
      },
      "UserV1": {
        "description": "A user belonging to a Segment Workspace.",
        "title": "UserV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this user.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The human-readable name of this user.",
            "type": "string",
            "title": "name"
          },
          "email": {
            "description": "The email address associated with this user.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions associated with this user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "email",
          "id",
          "name"
        ]
      },
      "ListUserGroupsFromUserV1Input": {
        "description": "Retrieves all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserV1Input",
        "type": "object",
        "properties": {}
      },
      "ListUserGroupsFromUserV1Output": {
        "description": "Returns all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserV1Output",
        "type": "object",
        "properties": {
          "groups": {
            "description": "The user groups that the user belongs to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinimalUserGroupV1"
            },
            "title": "groups"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "groups",
          "pagination"
        ]
      },
      "ListRolesV1Input": {
        "description": "Returns a list of roles available to apply to permissions for users in the Workspace.",
        "title": "ListRolesV1Input",
        "type": "object",
        "properties": {}
      },
      "RoleV1": {
        "description": "Represents a role.",
        "title": "RoleV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the role.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The human-readable name of the role.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The human-readable description of the role.",
            "type": "string",
            "title": "description"
          }
        },
        "required": [
          "description",
          "id",
          "name"
        ]
      },
      "ListRolesV1Output": {
        "description": "Returns the list of roles.",
        "title": "ListRolesV1Output",
        "type": "object",
        "properties": {
          "roles": {
            "description": "The list of roles.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleV1"
            },
            "title": "roles"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "roles"
        ]
      },
      "MinimalUserV1": {
        "description": "A user belonging to a Segment Workspace.",
        "title": "MinimalUserV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this user.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The human-readable name of this user.",
            "type": "string",
            "title": "name"
          },
          "email": {
            "description": "The email address associated with this user.",
            "type": "string",
            "title": "email"
          }
        },
        "required": [
          "email",
          "id",
          "name"
        ]
      },
      "CreateUserGroupV1Input": {
        "description": "Creates a user group, used to bundle permissions for its members, within a Workspace.",
        "title": "CreateUserGroupV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the user group to create.",
            "type": "string",
            "title": "name"
          }
        },
        "required": [
          "name"
        ]
      },
      "UserGroupV1": {
        "description": "A set of users with a set of shared permissions.",
        "title": "UserGroupV1",
        "type": "object",
        "properties": {
          "memberCount": {
            "description": "The number of members in the user group.",
            "type": "number",
            "title": "memberCount"
          },
          "permissions": {
            "description": "The permissions associated with the user group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionV1"
            },
            "title": "permissions"
          },
          "id": {
            "description": "The id of the user group.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the user group.",
            "type": "string",
            "title": "name"
          }
        },
        "required": [
          "id",
          "memberCount",
          "name"
        ]
      },
      "CreateUserGroupV1Output": {
        "description": "Returns the newly created user group.",
        "title": "CreateUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The newly created user group.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "required": [
          "userGroup"
        ]
      },
      "AddPermissionsToUserGroupV1Input": {
        "description": "Adds a list of permissions to a user group.",
        "title": "AddPermissionsToUserGroupV1Input",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInputV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "permissions"
        ]
      },
      "AddPermissionsToUserGroupV1Output": {
        "description": "Returns the group's permissions, including the added permissions.",
        "title": "AddPermissionsToUserGroupV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated set of permissions assigned to the user group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermissionV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "permissions"
        ]
      },
      "AddUsersToUserGroupV1Input": {
        "description": "Adds a list of users and invites to a user group.",
        "title": "AddUsersToUserGroupV1Input",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The email addresses of the users and invites to add.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "emails"
          }
        },
        "required": [
          "emails"
        ]
      },
      "AddUsersToUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "AddUsersToUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The updated the user group.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "required": [
          "userGroup"
        ]
      },
      "DeleteUserGroupV1Input": {
        "description": "Deletes a user group with a given group id from a Workspace.",
        "title": "DeleteUserGroupV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteUserGroupV1Output": {
        "description": "Returns the status of the completed deletion operation.",
        "title": "DeleteUserGroupV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag indicating the status of a successful deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "GetUserGroupV1Input": {
        "description": "Looks up a user group within a Workspace.",
        "title": "GetUserGroupV1Input",
        "type": "object",
        "properties": {}
      },
      "GetUserGroupV1Output": {
        "description": "Returns a user group with the given id.",
        "title": "GetUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The user group returned from the query.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "required": [
          "userGroup"
        ]
      },
      "UpdateUserGroupV1Input": {
        "description": "Updates a user group with a given id.",
        "title": "UpdateUserGroupV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The intended value to rename the user group to.",
            "type": "string",
            "title": "name"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "UpdateUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The updated user group.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "required": [
          "userGroup"
        ]
      },
      "ListInvitesFromUserGroupV1Input": {
        "description": "Looks up the invitees to a user group within a Workspace.",
        "title": "ListInvitesFromUserGroupV1Input",
        "type": "object",
        "properties": {}
      },
      "ListInvitesFromUserGroupV1Output": {
        "description": "Returns the emails of invitees to a user group with the given group id.",
        "title": "ListInvitesFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The emails of the invitees to the user group.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "emails"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "emails",
          "pagination"
        ]
      },
      "ReplaceUsersInUserGroupV1Input": {
        "description": "Replace a user group's list of users and invites with a new one.",
        "title": "ReplaceUsersInUserGroupV1Input",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The email addresses of the users and invites to replace.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "emails"
          }
        },
        "required": [
          "emails"
        ]
      },
      "ReplaceUsersInUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "ReplaceUsersInUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The updated the user group.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "required": [
          "userGroup"
        ]
      },
      "ListUserGroupsV1Input": {
        "description": "Loads all user groups for a Workspace.",
        "title": "ListUserGroupsV1Input",
        "type": "object",
        "properties": {}
      },
      "ListUserGroupsV1Output": {
        "description": "Returns a list of user groups with the given Workspace id.",
        "title": "ListUserGroupsV1Output",
        "type": "object",
        "properties": {
          "userGroups": {
            "description": "The user group returned from the query.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupV1"
            },
            "title": "userGroups"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "userGroups"
        ]
      },
      "RemoveUsersFromUserGroupV1Input": {
        "description": "Removes users or invites from a user group.",
        "title": "RemoveUsersFromUserGroupV1Input",
        "type": "object",
        "properties": {}
      },
      "RemoveUsersFromUserGroupV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "RemoveUsersFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the user removal from user group operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "ReplacePermissionsForUserGroupV1Input": {
        "description": "Updates the list of permissions for a user group.",
        "title": "ReplacePermissionsForUserGroupV1Input",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions to replace with.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInputV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "permissions"
        ]
      },
      "ReplacePermissionsForUserGroupV1Output": {
        "description": "Returns the user group's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserGroupV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermissionV1"
            },
            "title": "permissions"
          }
        },
        "required": [
          "permissions"
        ]
      },
      "ListUsersFromUserGroupV1Input": {
        "description": "Looks up the members of a user group within a Workspace.",
        "title": "ListUsersFromUserGroupV1Input",
        "type": "object",
        "properties": {}
      },
      "ListUsersFromUserGroupV1Output": {
        "description": "Returns the members of a user group with the given group id.",
        "title": "ListUsersFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "users": {
            "description": "The users of the user group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinimalUserV1"
            },
            "title": "users"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "users"
        ]
      },
      "IntegrationOptionBeta": {
        "description": "Describes an Integration option field required to set up a Segment Integration such as Sources, Destinations, or\nwarehouses.",
        "title": "IntegrationOptionBeta",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name identifying this option in the context of a Segment Integration.",
            "type": "string",
            "title": "name"
          },
          "type": {
            "description": "Defines the type for this option in the schema. Types are most commonly strings, but may also represent other\nprimitive types, such as booleans, and numbers, as well as complex types, such as objects and arrays.",
            "type": "string",
            "title": "type"
          },
          "required": {
            "description": "Whether this is a required option when setting up the Integration.",
            "type": "boolean",
            "title": "required"
          },
          "description": {
            "description": "An optional short text description of the field.",
            "type": "string",
            "title": "description"
          },
          "defaultValue": {
            "description": "An optional default value for the field.",
            "title": "defaultValue"
          },
          "label": {
            "description": "An optional label for this field.",
            "type": "string",
            "title": "label"
          }
        },
        "required": [
          "name",
          "required",
          "type"
        ]
      },
      "LabelAlpha": {
        "description": "A label lets Workspace owners assign permissions to users, and grant these users access to groups.\n\nA Workspace owner may use labels to grant users access to groups of resources.\n\nWhen you add a label to a Source or Personas Spaces, any users granted access to that label gain access to those\nresources.\n\nAll Workspaces include labels for Dev (development) and Prod (production) environments. On top of those, Free and\nTeam plan customers may create up to five labels.\n\nCustomers with the Enterprise pricing package may create an unlimited number of labels.",
        "title": "LabelAlpha",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key that represents the name of this label.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value associated with the key of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "An optional description of the purpose of this label.",
            "type": "string",
            "title": "description"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ListLabelsAlphaInput": {
        "description": "Retrieves all available labels for the current Workspace.",
        "title": "ListLabelsAlphaInput",
        "type": "object"
      },
      "ListLabelsAlphaOutput": {
        "description": "Returns all available labels for the current Workspace.",
        "title": "ListLabelsAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels associated with the current Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "DeleteLabelAlphaInput": {
        "description": "Deletes an existing label in the current Workspace.",
        "title": "DeleteLabelAlphaInput",
        "type": "object",
        "properties": {}
      },
      "DeleteLabelAlphaOutput": {
        "description": "Returns the status of a label deletion.",
        "title": "DeleteLabelAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the label deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "AddLabelsToSourceAlphaInput": {
        "description": "Applies an existing label to an existing Source.",
        "title": "AddLabelsToSourceAlphaInput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "The labels to associate with a Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "AddLabelsToSourceAlphaOutput": {
        "description": "Applies an existing label to an existing Source.",
        "title": "AddLabelsToSourceAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels applied to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "ReplaceLabelsInSourceAlphaInput": {
        "description": "Replaces all labels in a Source with a list of new labels.",
        "title": "ReplaceLabelsInSourceAlphaInput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "The list of labels to replace in the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "ReplaceLabelsInSourceAlphaOutput": {
        "description": "Response from replacing a list of labels in a Source.",
        "title": "ReplaceLabelsInSourceAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels replaced in the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "LabelV1": {
        "description": "A label lets Workspace owners assign permissions to users, and grant these users access to groups.\n\nA Workspace owner may use labels to grant users access to groups of resources.\n\nWhen you add a label to a Source or Personas Spaces, any users granted access to that label gain access to those\nresources.\n\nAll Workspaces include labels for Dev (development) and Prod (production) environments. On top of those, Free and\nTeam plan customers may create up to five labels.\n\nCustomers with the Enterprise pricing package may create an unlimited number of labels.",
        "title": "LabelV1",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key that represents the name of this label.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value associated with the key of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "An optional description of the purpose of this label.",
            "type": "string",
            "title": "description"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ListLabelsV1Input": {
        "description": "Retrieves all available labels for the current Workspace.",
        "title": "ListLabelsV1Input",
        "type": "object"
      },
      "ListLabelsV1Output": {
        "description": "Returns all available labels for the current Workspace.",
        "title": "ListLabelsV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels associated with the current Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "CreateLabelV1Input": {
        "description": "Creates a new label in the current Workspace.",
        "title": "CreateLabelV1Input",
        "type": "object",
        "properties": {
          "label": {
            "description": "The new label to create in the Workspace.",
            "title": "label",
            "allOf": [
              {
                "$ref": "#/components/schemas/LabelV1"
              }
            ]
          }
        },
        "required": [
          "label"
        ]
      },
      "CreateLabelV1Output": {
        "description": "Result of creating a new label in the current Workspace.",
        "title": "CreateLabelV1Output",
        "type": "object",
        "properties": {
          "label": {
            "description": "The newly created label.",
            "title": "label",
            "allOf": [
              {
                "$ref": "#/components/schemas/LabelV1"
              }
            ]
          }
        },
        "required": [
          "label"
        ]
      },
      "DeleteLabelV1Input": {
        "description": "Deletes an existing label in the current Workspace.",
        "title": "DeleteLabelV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteLabelV1Output": {
        "description": "Returns the status of a label deletion.",
        "title": "DeleteLabelV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the label deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "AddLabelsToSourceV1Input": {
        "description": "Applies an existing label to an existing Source.",
        "title": "AddLabelsToSourceV1Input",
        "type": "object",
        "properties": {
          "labels": {
            "description": "The labels to associate with a Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "AddLabelsToSourceV1Output": {
        "description": "Applies an existing label to an existing Source.",
        "title": "AddLabelsToSourceV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels applied to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "ReplaceLabelsInSourceV1Input": {
        "description": "Replaces all labels in a Source with a list of new labels.",
        "title": "ReplaceLabelsInSourceV1Input",
        "type": "object",
        "properties": {
          "labels": {
            "description": "The list of labels to replace in the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "ReplaceLabelsInSourceV1Output": {
        "description": "Response from replacing a list of labels in a Source.",
        "title": "ReplaceLabelsInSourceV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels replaced in the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "required": [
          "labels"
        ]
      },
      "LogosBeta": {
        "description": "Represents a logo.",
        "title": "LogosBeta",
        "type": "object",
        "properties": {
          "default": {
            "description": "The default URL for this logo.",
            "type": "string",
            "title": "default"
          },
          "mark": {
            "description": "The logo mark.",
            "type": "string",
            "title": "mark",
            "nullable": true
          },
          "alt": {
            "description": "The alternative text for this logo.",
            "type": "string",
            "title": "alt",
            "nullable": true
          }
        },
        "required": [
          "default"
        ]
      },
      "EventSourceV1": {
        "description": "Source represents a Segment Source.",
        "title": "EventSourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Source where the events came from.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the Source, if applicable.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "The slug of the Source, if applicable.",
            "type": "string",
            "title": "slug"
          }
        },
        "required": [
          "id"
        ]
      },
      "SourceEventVolumeV1": {
        "description": "SourceEventVolume represents a time series of event volume for a Workspace\nbroken down by the dimensions which the customer specifies (optional\nparameters).",
        "title": "SourceEventVolumeV1",
        "type": "object",
        "properties": {
          "source": {
            "description": "The Source where the events originated.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/EventSourceV1"
              }
            ]
          },
          "eventName": {
            "description": "The name of the event, if applicable.",
            "type": "string",
            "title": "eventName"
          },
          "eventType": {
            "description": "The event type, if applicable.",
            "type": "string",
            "title": "eventType"
          },
          "total": {
            "description": "The total count for all events in the requested time frame.",
            "type": "number",
            "title": "total"
          },
          "series": {
            "description": "A list of the event counts broken down by the requested\ngranularity.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceEventVolumeDatapointV1"
            },
            "title": "series"
          }
        },
        "required": [
          "series",
          "total"
        ]
      },
      "SourceEventVolumeDatapointV1": {
        "description": "SourceEventVolumeDatapoint represents an individual timestamp/event count\npair corresponding to a window of time designated by the granularity.",
        "title": "SourceEventVolumeDatapointV1",
        "type": "object",
        "properties": {
          "time": {
            "description": "The timestamp that corresponds to the beginning of the window given\nby the requested granularity.",
            "type": "string",
            "title": "time"
          },
          "count": {
            "description": "The number of valid events Segment received in the given window,\nafter the events completed the validation process.",
            "type": "number",
            "title": "count"
          }
        },
        "required": [
          "count",
          "time"
        ]
      },
      "GetEventsVolumeFromWorkspaceV1Input": {
        "description": "GetEventsVolumeFromWorkspaceV1Input represents the arguments given to the API.",
        "title": "GetEventsVolumeFromWorkspaceV1Input",
        "type": "object",
        "properties": {}
      },
      "GetEventsVolumeFromWorkspaceV1Output": {
        "description": "GetEventsVolumeFromWorkspaceV1Output represents the results given the input query.",
        "title": "GetEventsVolumeFromWorkspaceV1Output",
        "type": "object",
        "properties": {
          "path": {
            "description": "Observability event volume path.",
            "type": "string",
            "title": "path"
          },
          "query": {
            "description": "Input query returned.",
            "title": "query",
            "allOf": [
              {
                "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Query"
              }
            ]
          },
          "result": {
            "description": "The resultant list of series broken down by the\ndimensions requested over the time frame requested and ordered by the total count of events in all series.\nNote: The limit of entries returned is 5000.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceEventVolumeV1"
            },
            "title": "result"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "path",
          "query",
          "result"
        ]
      },
      "GetEventsVolumeFromWorkspaceV1Query": {
        "description": "GetEventVolumeOutputQuery represents the input query sent to output.",
        "title": "GetEventsVolumeFromWorkspaceV1Query",
        "type": "object",
        "properties": {
          "workspaceId": {
            "description": "Workspace being requested.",
            "type": "string",
            "title": "workspaceId"
          },
          "granularity": {
            "description": "Granularity corresponds to the requested bucket granularity.",
            "enum": [
              "DAY",
              "HOUR",
              "MINUTE"
            ],
            "type": "string",
            "title": "granularity"
          },
          "startTime": {
            "description": "StartTime is the ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "EndTime is the ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.",
            "type": "string",
            "title": "endTime"
          },
          "groupBy": {
            "description": "GroupBy is a comma-delimited list of strings representing the dimensions\nto group the result by. The current options are:\n`eventName` or `eventType`.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "groupBy"
          },
          "sourceId": {
            "description": "List of strings which allow you to restrict the result to just\nthe given Sources.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "sourceId"
          },
          "eventName": {
            "description": "EventName is a list of strings which allow you to restrict the result to just\nthe given event names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventName"
          },
          "eventType": {
            "description": "EventType is a list of strings which allow you to restrict the result to just\nthe given event types.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventType"
          },
          "appVersion": {
            "description": "AppVersion is a list of strings which allow you to restrict the result to just\nthe given application versions.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "appVersion"
          },
          "limit": {
            "description": "Limit is the total number of items in the result.",
            "type": "number",
            "title": "limit"
          }
        },
        "required": [
          "endTime",
          "granularity",
          "startTime",
          "workspaceId"
        ]
      },
      "ProfilesWarehouseAlpha": {
        "description": "Defines a Profiles data Warehouse used as a Destination for Segment data.",
        "title": "ProfilesWarehouseAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Warehouse.",
            "type": "string",
            "title": "id"
          },
          "spaceId": {
            "description": "The Space id.",
            "type": "string",
            "title": "spaceId"
          },
          "metadata": {
            "description": "The metadata for the Warehouse.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseMetadataV1"
              }
            ]
          },
          "workspaceId": {
            "description": "The id of the Workspace that owns this Warehouse.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "When set to true, this Warehouse receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The settings associated with this Warehouse.\n\nCommon settings are connection-related configuration used to connect to it, for example host, username, and port.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          },
          "schemaName": {
            "description": "The custom schema name that Segment uses on the Warehouse side.",
            "type": "string",
            "title": "schemaName"
          }
        },
        "required": [
          "enabled",
          "id",
          "metadata",
          "settings",
          "spaceId",
          "workspaceId"
        ]
      },
      "SpaceWarehouseSelectiveSyncItemAlpha": {
        "description": "Represents an entry in the Space Warehouse Selective Sync schema for a Warehouse and Space pair.",
        "title": "SpaceWarehouseSelectiveSyncItemAlpha",
        "type": "object",
        "properties": {
          "collection": {
            "description": "The collection within the Source.",
            "type": "string",
            "title": "collection"
          },
          "warehouseId": {
            "description": "The id of the Warehouse this sync belongs to.",
            "type": "string",
            "title": "warehouseId"
          },
          "enabled": {
            "description": "The Enabled flag ok telling whether the Collection is enabled or not.",
            "type": "boolean",
            "title": "enabled"
          },
          "properties": {
            "description": "A map that contains the properties within the collection to which the Warehouse should sync.",
            "type": "object",
            "additionalProperties": true,
            "title": "properties"
          }
        },
        "required": [
          "collection",
          "enabled",
          "properties",
          "warehouseId"
        ]
      },
      "CreateProfilesWarehouseAlphaInput": {
        "description": "Create a new Profiles Warehouse based on a set of parameters.",
        "title": "CreateProfilesWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The Warehouse metadata to use.",
            "type": "string",
            "title": "metadataId"
          },
          "name": {
            "description": "An optional human-readable name for this Warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this Warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for a Warehouse.\n\nDifferent kinds of Warehouses require different settings. The required and optional settings\nfor a Warehouse are described in the `options` object of the associated Warehouse metadata.\n\nYou can find the full list of Warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          },
          "schemaName": {
            "description": "The custom schema name that Segment uses on the Warehouse side. The space slug value is default otherwise.",
            "type": "string",
            "title": "schemaName"
          }
        },
        "required": [
          "metadataId",
          "settings"
        ]
      },
      "CreateProfilesWarehouseAlphaOutput": {
        "description": "Returns the newly created Warehouse.",
        "title": "CreateProfilesWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "profilesWarehouse": {
            "description": "The newly created Warehouse.",
            "title": "profilesWarehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfilesWarehouseAlpha"
              }
            ]
          }
        },
        "required": [
          "profilesWarehouse"
        ]
      },
      "RemoveProfilesWarehouseFromSpaceAlphaInput": {
        "description": "Deletes an existing Warehouse by id.",
        "title": "RemoveProfilesWarehouseFromSpaceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "RemoveProfilesWarehouseFromSpaceAlphaOutput": {
        "description": "Returns the status of a Warehouse deletion.",
        "title": "RemoveProfilesWarehouseFromSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Warehouse deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "ListProfilesWarehouseInSpaceAlphaInput": {
        "description": "Gets all Profiles Warehouse based on spaceID and pagination.",
        "title": "ListProfilesWarehouseInSpaceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListProfilesWarehouseInSpaceAlphaOutput": {
        "description": "Returns all Profiles Warehouse based on spaceID and pagination.",
        "title": "ListProfilesWarehouseInSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "profilesWarehouses": {
            "description": "A list of Warehouses that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfilesWarehouseAlpha"
            },
            "title": "profilesWarehouses"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "profilesWarehouses"
        ]
      },
      "UpdateProfilesWarehouseForSpaceWarehouseAlphaInput": {
        "description": "Updates a Profiles Warehouse based on a set of parameters.",
        "title": "UpdateProfilesWarehouseForSpaceWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "An optional human-readable name for this Warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this Warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for a Warehouse.\n\nDifferent kinds of Warehouses require different settings. The required and optional settings\nfor a Warehouse are described in the `options` object of the associated Warehouse metadata.\n\nYou can find the full list of Warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          },
          "schemaName": {
            "description": "The custom schema name that Segment uses on the Warehouse side. The space slug value is default otherwise.",
            "type": "string",
            "title": "schemaName"
          }
        },
        "required": [
          "settings"
        ]
      },
      "UpdateProfilesWarehouseForSpaceWarehouseAlphaOutput": {
        "description": "Returns the updated Warehouse.",
        "title": "UpdateProfilesWarehouseForSpaceWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "profilesWarehouse": {
            "description": "The updated Warehouse.",
            "title": "profilesWarehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfilesWarehouseAlpha"
              }
            ]
          }
        },
        "required": [
          "profilesWarehouse"
        ]
      },
      "ListSelectiveSyncsFromWarehouseAndSpaceAlphaInput": {
        "description": "Get the Selective Sync configuration associated with a Space Warehouse Connection.",
        "title": "ListSelectiveSyncsFromWarehouseAndSpaceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListSelectiveSyncsFromWarehouseAndSpaceAlphaOutput": {
        "description": "Results containing the Selective Sync configuration for a Space Warehouse Connection.",
        "title": "ListSelectiveSyncsFromWarehouseAndSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "items": {
            "description": "Represents a list of collections and properties synced to the Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceWarehouseSelectiveSyncItemAlpha"
            },
            "title": "items"
          },
          "enableEventTables": {
            "description": "Optional. Represents the enabled state of all event tables.",
            "type": "boolean",
            "title": "enableEventTables"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "items",
          "pagination"
        ]
      },
      "SpaceWarehouseSchemaOverride": {
        "description": "Overrides the enabled or disabled state of the specified collection and / or properties within the schema.",
        "title": "SpaceWarehouseSchemaOverride",
        "type": "object",
        "properties": {
          "collection": {
            "description": "The collection within the Source.",
            "type": "string",
            "title": "collection"
          },
          "enabled": {
            "description": "Represents the overridden enabled state for the listed collection and / or properties.",
            "type": "boolean",
            "title": "enabled"
          },
          "property": {
            "description": "A map that contains the properties within the collection to which the Warehouse should sync.",
            "type": "string",
            "title": "property"
          }
        },
        "required": [
          "collection",
          "enabled"
        ]
      },
      "UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput": {
        "description": "Updates the schema for a Space Warehouse connection.",
        "title": "UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput",
        "type": "object",
        "properties": {
          "syncOverrides": {
            "description": "A list of sync Schema overrides to apply to this Space Warehouse.\nNote: Selective Sync is not supported if the enableEventTables flag is false.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceWarehouseSchemaOverride"
            },
            "title": "syncOverrides"
          },
          "enableEventTables": {
            "description": "A flag to enable or disable all event Tables. This field is optional.",
            "type": "boolean",
            "title": "enableEventTables"
          }
        }
      },
      "UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutput": {
        "description": "Results from a SelectiveSync patch to a Space Warehouse connection.",
        "title": "UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "Status of the update operation.",
            "enum": [
              "UNCHANGED",
              "UPDATED"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "DestinationStatusV1": {
        "description": "DestinationStatus represents status of each Destination in a stream.",
        "title": "DestinationStatusV1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name"
          },
          "id": {
            "type": "string",
            "title": "id"
          },
          "status": {
            "enum": [
              "FAILED",
              "FINISHED",
              "INITIALIZED",
              "INVALID",
              "NOT_SUPPORTED",
              "PARTIAL_SUCCESS",
              "RUNNING"
            ],
            "type": "string",
            "title": "status"
          },
          "errString": {
            "type": "string",
            "title": "errString"
          },
          "finishedAt": {
            "type": "string",
            "title": "finishedAt"
          }
        },
        "required": [
          "errString",
          "finishedAt",
          "id",
          "name",
          "status"
        ]
      },
      "StreamStatusV1": {
        "description": "StreamStatus represents status of each stream including all the Destinations corresponding to the stream.",
        "title": "StreamStatusV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id"
          },
          "destinationStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationStatusV1"
            },
            "title": "destinationStatus"
          }
        },
        "required": [
          "destinationStatus",
          "id"
        ]
      },
      "RegulationListEntryV1": {
        "title": "RegulationListEntryV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id"
          },
          "subjectType": {
            "type": "string",
            "title": "subjectType"
          },
          "subjects": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subjects"
          },
          "status": {
            "enum": [
              "FAILED",
              "FINISHED",
              "INITIALIZED",
              "INVALID",
              "NOT_SUPPORTED",
              "PARTIAL_SUCCESS",
              "RUNNING"
            ],
            "type": "string",
            "title": "status"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "finishedAt": {
            "type": "string",
            "title": "finishedAt"
          }
        },
        "required": [
          "createdAt",
          "id",
          "status",
          "subjectType",
          "subjects"
        ]
      },
      "DeleteRegulationV1Input": {
        "description": "The input to delete a regulate request.",
        "title": "DeleteRegulationV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteRegulationV1Output": {
        "description": "The output of the delete regulation call.",
        "title": "DeleteRegulationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the deletion call.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateWorkspaceRegulationV1Input": {
        "description": "The input to create a Workspace regulation.",
        "title": "CreateWorkspaceRegulationV1Input",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Use `objectId` for Cloud Source regulations.",
            "enum": [
              "OBJECT_ID",
              "USER_ID"
            ],
            "type": "string",
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The list of `userId` or `objectId` values of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subjectIds"
          }
        },
        "required": [
          "regulationType",
          "subjectIds",
          "subjectType"
        ]
      },
      "CreateWorkspaceRegulationV1Output": {
        "description": "The output of a create Workspace regulation call.",
        "title": "CreateWorkspaceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the created regulation.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": [
          "regulateId"
        ]
      },
      "GetRegulationV1Input": {
        "description": "The input to get a regulate request.",
        "title": "GetRegulationV1Input",
        "type": "object",
        "properties": {}
      },
      "GetRegulationV1Output": {
        "description": "The regulate request returned.",
        "title": "GetRegulationV1Output",
        "type": "object",
        "properties": {
          "regulation": {
            "description": "The regulate request.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The id of the regulate request.",
                "type": "string",
                "title": "id"
              },
              "workspaceId": {
                "description": "The id of the Workspace that the regulate request belongs to.",
                "type": "string",
                "title": "workspaceId"
              },
              "overallStatus": {
                "description": "The current status of the regulate request.",
                "enum": [
                  "FAILED",
                  "FINISHED",
                  "INITIALIZED",
                  "INVALID",
                  "NOT_SUPPORTED",
                  "PARTIAL_SUCCESS",
                  "RUNNING"
                ],
                "type": "string",
                "title": "overallStatus"
              },
              "finishedAt": {
                "description": "The timestamp of when the request finished.",
                "type": "string",
                "title": "finishedAt"
              },
              "createdAt": {
                "description": "The timestamp of the creation of the request.",
                "type": "string",
                "title": "createdAt"
              },
              "streamStatus": {
                "description": "The status of each stream including all the Destinations that correspond to the stream.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StreamStatusV1"
                },
                "title": "streamStatus"
              }
            },
            "required": [
              "createdAt",
              "finishedAt",
              "id",
              "overallStatus",
              "streamStatus",
              "workspaceId"
            ],
            "title": "regulation"
          }
        },
        "required": [
          "regulation"
        ]
      },
      "ListWorkspaceRegulationsV1Input": {
        "description": "Input to list all Workspace-scoped regulations in a given Workspace.",
        "title": "ListWorkspaceRegulationsV1Input",
        "type": "object",
        "properties": {}
      },
      "ListWorkspaceRegulationsV1Output": {
        "description": "Output of all Workspace-scoped regulations in a given Workspace.",
        "title": "ListWorkspaceRegulationsV1Output",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of Workspace-scoped regulations with statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulationListEntryV1"
            },
            "title": "regulations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "regulations"
        ]
      },
      "CreateSourceRegulationV1Input": {
        "description": "The input to create a Source-scoped regulation.",
        "title": "CreateSourceRegulationV1Input",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type.",
            "type": "string",
            "enum": [
              "USER_ID"
            ],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The list of `userId` or `objectId` values of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subjectIds"
          }
        },
        "required": [
          "regulationType",
          "subjectIds",
          "subjectType"
        ]
      },
      "CreateSourceRegulationV1Output": {
        "description": "The output of a create Source regulation call.",
        "title": "CreateSourceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the created regulation.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": [
          "regulateId"
        ]
      },
      "CreateCloudSourceRegulationV1Input": {
        "description": "The input to create a Cloud Source-scoped regulation.",
        "title": "CreateCloudSourceRegulationV1Input",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Must be `objectId` for Cloud Sources.",
            "type": "string",
            "enum": [
              "OBJECT_ID"
            ],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The list of `userId` or `objectId` values of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subjectIds"
          },
          "collection": {
            "description": "The Cloud Source collection to regulate.",
            "type": "string",
            "title": "collection"
          }
        },
        "required": [
          "collection",
          "regulationType",
          "subjectIds",
          "subjectType"
        ]
      },
      "CreateCloudSourceRegulationV1Output": {
        "description": "The output of a create Cloud Source regulation call.",
        "title": "CreateCloudSourceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the created regulation.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": [
          "regulateId"
        ]
      },
      "ListRegulationsFromSourceV1Input": {
        "description": "Input to list all Source-scoped regulations.",
        "title": "ListRegulationsFromSourceV1Input",
        "type": "object",
        "properties": {}
      },
      "ListRegulationsFromSourceV1Output": {
        "description": "Output of all Source-scoped regulations.",
        "title": "ListRegulationsFromSourceV1Output",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of Workspace-scoped regulations with statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulationListEntryV1"
            },
            "title": "regulations"
          }
        },
        "required": [
          "regulations"
        ]
      },
      "ListSuppressionsV1Input": {
        "description": "The input to list suppressions for the Workspace.",
        "title": "ListSuppressionsV1Input",
        "type": "object",
        "properties": {}
      },
      "ListSuppressionsV1Output": {
        "description": "The output of a list suppressed call for a Workspace.",
        "title": "ListSuppressionsV1Output",
        "type": "object",
        "properties": {
          "suppressed": {
            "description": "An array that lists the suppressions from the Workspace.\n\nConfig API note: equal to `attributes`.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "subjectType": {
                  "type": "string",
                  "title": "subjectType"
                },
                "subjectIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "subjectIds"
                }
              },
              "required": [
                "subjectIds",
                "subjectType"
              ]
            },
            "title": "suppressed"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "suppressed"
        ]
      },
      "ReverseEtlModel": {
        "description": "Defines a Reverse ETL Model.",
        "title": "ReverseEtlModel",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Model.",
            "type": "string",
            "title": "id"
          },
          "sourceId": {
            "description": "The id for the attached Source.",
            "type": "string",
            "title": "sourceId"
          },
          "name": {
            "description": "A short, human-readable description of the Model.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "A longer, more descriptive explanation of the Model.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "Indicates whether the Model should have syncs enabled. When disabled, no\nsyncs will be triggered, regardless of the enabled status of the attached\ndestinations/subscriptions.",
            "type": "boolean",
            "title": "enabled"
          },
          "scheduleStrategy": {
            "description": "Determines the strategy used for triggering syncs, which will be used in\nconjunction with scheduleConfig.\n\nPossible values: \"manual\", \"periodic\", \"specific_days\".",
            "type": "string",
            "title": "scheduleStrategy"
          },
          "scheduleConfig": {
            "description": "Depending on the chosen strategy, configures the schedule for this model.",
            "title": "scheduleConfig",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModelScheduleConfig"
              }
            ]
          },
          "query": {
            "description": "The SQL query that will be executed to extract data from the connected\nSource.",
            "type": "string",
            "title": "query"
          },
          "queryIdentifierColumn": {
            "description": "Indicates the column named in `query` that should be used to uniquely\nidentify the extracted records.",
            "type": "string",
            "title": "queryIdentifierColumn"
          }
        },
        "required": [
          "description",
          "enabled",
          "id",
          "name",
          "query",
          "queryIdentifierColumn",
          "scheduleConfig",
          "scheduleStrategy",
          "sourceId"
        ]
      },
      "ReverseEtlModelScheduleConfig": {
        "description": "Defines a configuration object used for scheduling, which can vary depending\non the configured strategy, but must always be an object with at least 1\nlevel of keys.",
        "title": "ReverseEtlModelScheduleConfig",
        "type": "object",
        "additionalProperties": {}
      },
      "ListReverseEtlModelsInput": {
        "description": "Defines the parameters needed to list Models.",
        "title": "ListReverseEtlModelsInput",
        "type": "object",
        "properties": {}
      },
      "ListReverseEtlModelsOutput": {
        "description": "Defines the result of listing Models.",
        "title": "ListReverseEtlModelsOutput",
        "type": "object",
        "properties": {
          "models": {
            "description": "A list of Models that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReverseEtlModel"
            },
            "title": "models"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "models",
          "pagination"
        ]
      },
      "CreateReverseEtlModelInput": {
        "description": "Defines how to create a new Model.",
        "title": "CreateReverseEtlModelInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "Indicates which Source to attach this model to.",
            "type": "string",
            "title": "sourceId"
          },
          "name": {
            "description": "A short, human-readable description of the Model.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "A longer, more descriptive explanation of the Model.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "Indicates whether the Model should have syncs enabled. When disabled, no\nsyncs will be triggered, regardless of the enabled status of the attached\ndestinations/subscriptions.",
            "type": "boolean",
            "title": "enabled"
          },
          "scheduleStrategy": {
            "description": "Determines the strategy used for triggering syncs, which will be used in\nconjunction with scheduleConfig.",
            "enum": [
              "MANUAL",
              "PERIODIC",
              "SPECIFIC_DAYS"
            ],
            "type": "string",
            "title": "scheduleStrategy"
          },
          "scheduleConfig": {
            "description": "Depending on the chosen strategy, configures the schedule for this model.",
            "title": "scheduleConfig",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModelScheduleConfig"
              }
            ]
          },
          "query": {
            "description": "The SQL query that will be executed to extract data from the connected\nSource.",
            "type": "string",
            "title": "query"
          },
          "queryIdentifierColumn": {
            "description": "Indicates the column named in `query` that should be used to uniquely\nidentify the extracted records.",
            "type": "string",
            "title": "queryIdentifierColumn"
          }
        },
        "required": [
          "description",
          "enabled",
          "name",
          "query",
          "queryIdentifierColumn",
          "scheduleConfig",
          "scheduleStrategy",
          "sourceId"
        ]
      },
      "CreateReverseEtlModelOutput": {
        "description": "Defines the results of creating a Model.",
        "title": "CreateReverseEtlModelOutput",
        "type": "object",
        "properties": {
          "reverseEtlModel": {
            "description": "The created Model.",
            "title": "reverseEtlModel",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModel"
              }
            ]
          }
        },
        "required": [
          "reverseEtlModel"
        ]
      },
      "GetReverseEtlModelInput": {
        "description": "Defines the result of getting a Model.",
        "title": "GetReverseEtlModelInput",
        "type": "object",
        "properties": {}
      },
      "GetReverseEtlModelOutput": {
        "description": "Defines the result of getting a Model.",
        "title": "GetReverseEtlModelOutput",
        "type": "object",
        "properties": {
          "reverseEtlModel": {
            "description": "The requested Model.",
            "title": "reverseEtlModel",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModel"
              }
            ]
          }
        },
        "required": [
          "reverseEtlModel"
        ]
      },
      "UpdateReverseEtlModelInput": {
        "description": "Defines how to update an existing Model.",
        "title": "UpdateReverseEtlModelInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "A short, human-readable description of the Model.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "A longer, more descriptive explanation of the Model.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "Indicates whether the Model should have syncs enabled. When disabled, no\nsyncs will be triggered, regardless of the enabled status of the attached\ndestinations/subscriptions.",
            "type": "boolean",
            "title": "enabled"
          },
          "scheduleStrategy": {
            "description": "Determines the strategy used for triggering syncs, which will be used in\nconjunction with scheduleConfig.",
            "enum": [
              "MANUAL",
              "PERIODIC",
              "SPECIFIC_DAYS"
            ],
            "type": "string",
            "title": "scheduleStrategy"
          },
          "scheduleConfig": {
            "description": "Depending on the chosen strategy, configures the schedule for this model.",
            "title": "scheduleConfig",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModelScheduleConfig"
              }
            ]
          },
          "query": {
            "description": "The SQL query that will be executed to extract data from the connected\nSource.",
            "type": "string",
            "title": "query"
          },
          "queryIdentifierColumn": {
            "description": "Indicates the column named in `query` that should be used to uniquely\nidentify the extracted records.",
            "type": "string",
            "title": "queryIdentifierColumn"
          }
        }
      },
      "UpdateReverseEtlModelOutput": {
        "description": "Defines the results of updating a Model.",
        "title": "UpdateReverseEtlModelOutput",
        "type": "object",
        "properties": {
          "reverseEtlModel": {
            "description": "The created Model.",
            "title": "reverseEtlModel",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModel"
              }
            ]
          }
        },
        "required": [
          "reverseEtlModel"
        ]
      },
      "DeleteReverseEtlModelInput": {
        "description": "Defines the result of getting a Model.",
        "title": "DeleteReverseEtlModelInput",
        "type": "object",
        "properties": {}
      },
      "DeleteReverseEtlModelOutput": {
        "description": "Defines the result of getting a Model.",
        "title": "DeleteReverseEtlModelOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The result of the deletion.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "GetSourcesCatalogV1Input": {
        "description": "Filter parameters used for loading the Sources public catalog.",
        "title": "GetSourcesCatalogV1Input",
        "type": "object",
        "properties": {}
      },
      "GetSourcesCatalogV1Output": {
        "description": "Returns a list of all Source catalog items contained within a given page.",
        "title": "GetSourcesCatalogV1Output",
        "type": "object",
        "properties": {
          "sourcesCatalog": {
            "description": "All Source catalog items contained within the requested page.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceMetadataV1"
            },
            "title": "sourcesCatalog"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "sourcesCatalog"
        ]
      },
      "GetSourceMetadataV1Input": {
        "description": "Requests a Source catalog item by id.",
        "title": "GetSourceMetadataV1Input",
        "type": "object",
        "properties": {}
      },
      "GetSourceMetadataV1Output": {
        "description": "Returns the Source catalog item looked up by id.",
        "title": "GetSourceMetadataV1Output",
        "type": "object",
        "properties": {
          "sourceMetadata": {
            "description": "The catalog item matched by id.",
            "title": "sourceMetadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceMetadataV1"
              }
            ]
          }
        },
        "required": [
          "sourceMetadata"
        ]
      },
      "SourceMetadataV1": {
        "description": "A website, server library, mobile SDK, or cloud application which can send data into Segment.",
        "title": "SourceMetadataV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id for this Source metadata in the Segment catalog.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of this Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "The slug that identifies this Source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "The description of this Source.",
            "type": "string",
            "title": "description"
          },
          "logos": {
            "description": "The logos for this Source.",
            "title": "logos",
            "allOf": [
              {
                "$ref": "#/components/schemas/LogosBeta"
              }
            ]
          },
          "options": {
            "description": "Options for this Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationOptionBeta"
            },
            "title": "options"
          },
          "categories": {
            "description": "A list of categories this Source belongs to.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "categories"
          },
          "isCloudEventSource": {
            "description": "True if this is a Cloud Event Source.",
            "type": "boolean",
            "title": "isCloudEventSource"
          }
        },
        "required": [
          "categories",
          "description",
          "id",
          "isCloudEventSource",
          "logos",
          "name",
          "options",
          "slug"
        ]
      },
      "CommonSourceSettingsV1": {
        "title": "CommonSourceSettingsV1",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "title": "track",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackSourceSettingsV1"
              }
            ]
          },
          "identify": {
            "description": "Identify settings.",
            "title": "identify",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentifySourceSettingsV1"
              }
            ]
          },
          "group": {
            "description": "Group settings.",
            "title": "group",
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupSourceSettingsV1"
              }
            ]
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "TrackSourceSettingsV1": {
        "title": "TrackSourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedEvents": {
            "description": "Enable to allow unplanned track events.\n\nConfig API note: equal to `allowUnplannedTrackEvents`.",
            "type": "boolean",
            "title": "allowUnplannedEvents"
          },
          "allowUnplannedEventProperties": {
            "description": "Enable to allow unplanned track event properties.\n\nConfig API note: equal to `allowUnplannedTrackEventProperties`.",
            "type": "boolean",
            "title": "allowUnplannedEventProperties"
          },
          "allowEventOnViolations": {
            "description": "Allow track event on violations.\n\nConfig API note: equal to `allowTrackEventOnViolations`.",
            "type": "boolean",
            "title": "allowEventOnViolations"
          },
          "allowPropertiesOnViolations": {
            "description": "Enable to allow track properties on violations.\n\nConfig API note: equal to `allowTrackEventPropertiesOnViolations`.",
            "type": "boolean",
            "title": "allowPropertiesOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common track event on violations.\n\nConfig API note: equal to `commonTrackEventOnViolations`.",
            "enum": [
              "ALLOW",
              "BLOCK",
              "OMIT_PROPERTIES"
            ],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "IdentifySourceSettingsV1": {
        "title": "IdentifySourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned identify traits.\n\nConfig API note: equal to `allowUnplannedIdentifyTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow identify traits on violations.\n\nConfig API note: equal to `allowIdentifyTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common identify event on violations.\n\nConfig API note: equal to `commonIdentifyEventOnViolations`.",
            "enum": [
              "ALLOW",
              "BLOCK",
              "OMIT_TRAITS"
            ],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "GroupSourceSettingsV1": {
        "title": "GroupSourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned group traits.\n\nConfig API note: equal to `allowUnplannedGroupTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow group traits on violations.\n\nConfig API note: equal to `allowGroupTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common group event on violations.\n\nConfig API note: equal to `commonGroupEventOnViolations`.",
            "enum": [
              "ALLOW",
              "BLOCK",
              "OMIT_TRAITS"
            ],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "SourceSettingsOutputV1": {
        "description": "The output of Source settings.",
        "title": "SourceSettingsOutputV1",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "title": "track",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackSourceSettingsV1"
              }
            ]
          },
          "identify": {
            "description": "Identify settings.",
            "title": "identify",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentifySourceSettingsV1"
              }
            ]
          },
          "group": {
            "description": "Group settings.",
            "title": "group",
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupSourceSettingsV1"
              }
            ]
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "ListSchemaSettingsInSourceV1Input": {
        "description": "Request the settings of a Source.",
        "title": "ListSchemaSettingsInSourceV1Input",
        "type": "object",
        "properties": {}
      },
      "ListSchemaSettingsInSourceV1Output": {
        "description": "Returns a list of settings for the Source.",
        "title": "ListSchemaSettingsInSourceV1Output",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "Source id.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The Source settings.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsOutputV1"
              }
            ]
          }
        },
        "required": [
          "settings",
          "sourceId"
        ]
      },
      "UpdateSchemaSettingsInSourceV1Input": {
        "description": "Input to update a Source's settings.",
        "title": "UpdateSchemaSettingsInSourceV1Input",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "title": "track",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackSourceSettingsV1"
              }
            ]
          },
          "identify": {
            "description": "Identify settings.",
            "title": "identify",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentifySourceSettingsV1"
              }
            ]
          },
          "group": {
            "description": "Group settings.",
            "title": "group",
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupSourceSettingsV1"
              }
            ]
          },
          "forwardingViolationsTo": {
            "description": "Source id to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "Source id to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "UpdateSchemaSettingsInSourceV1Output": {
        "description": "Output of the Source with updated settings.",
        "title": "UpdateSchemaSettingsInSourceV1Output",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the updated Source.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The output of Source settings.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsOutputV1"
              }
            ]
          }
        },
        "required": [
          "settings",
          "sourceId"
        ]
      },
      "SourceAlpha": {
        "description": "Defines a data Source for Segment data.",
        "title": "SourceAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Source.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The slug used to identify the Source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The name of the Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "metadata": {
            "description": "The metadata for the Source.\n\nConfig API note: includes `catalogName` and `catalogId`.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceMetadataV1"
              }
            ]
          },
          "workspaceId": {
            "description": "The id of the Workspace that owns the Source.\n\nConfig API note: equal to `parent`.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "Enable to receive data from the Source.",
            "type": "boolean",
            "title": "enabled"
          },
          "writeKeys": {
            "description": "The write keys used to send data from the Source. This field is left empty when the current token does not have the\n'source admin' permission.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "writeKeys"
          },
          "settings": {
            "description": "The settings associated with the Source.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsAlpha"
              }
            ]
          },
          "labels": {
            "description": "A list of labels applied to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "required": [
          "enabled",
          "id",
          "labels",
          "metadata",
          "slug",
          "workspaceId",
          "writeKeys"
        ]
      },
      "SourceSettingsAlpha": {
        "description": "A key-value object that contains instance-specific settings for a Source.\n\nThe `options` field in the Source metadata defines the schema of this object.",
        "title": "SourceSettingsAlpha",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSourcesAlphaInput": {
        "description": "Requests a list of Sources that belong to the current Workspace.",
        "title": "ListSourcesAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListSourcesAlphaOutput": {
        "description": "Returns a list of Sources that belong to the current Workspace.",
        "title": "ListSourcesAlphaOutput",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list of Sources that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceAlpha"
            },
            "title": "sources"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "sources"
        ]
      },
      "GetSourceAlphaInput": {
        "description": "Looks up a Source by id.",
        "title": "GetSourceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "GetSourceAlphaOutput": {
        "description": "Returns a Source.",
        "title": "GetSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "description": "The returned Source object.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceAlpha"
              }
            ]
          }
        },
        "required": [
          "source"
        ]
      },
      "ListConnectedWarehousesFromSourceAlphaInput": {
        "description": "Requests a list of Warehouses connected to a Source.",
        "title": "ListConnectedWarehousesFromSourceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListConnectedWarehousesFromSourceAlphaOutput": {
        "description": "Returns a list of Warehouses connected to a Source.",
        "title": "ListConnectedWarehousesFromSourceAlphaOutput",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list that contains the Warehouses connected to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseV1"
            },
            "title": "warehouses"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "warehouses"
        ]
      },
      "ListConnectedDestinationsFromSourceAlphaInput": {
        "description": "Requests a list of Destinations connected to a Source.",
        "title": "ListConnectedDestinationsFromSourceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "ListConnectedDestinationsFromSourceAlphaOutput": {
        "description": "Returns a list of Destinations connected to a Source.",
        "title": "ListConnectedDestinationsFromSourceAlphaOutput",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "A list that contains the Destinations connected to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationV1"
            },
            "title": "destinations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "destinations",
          "pagination"
        ]
      },
      "CreateSourceAlphaInput": {
        "description": "Create a new Source based on a set of parameters.",
        "title": "CreateSourceAlphaInput",
        "type": "object",
        "properties": {
          "slug": {
            "description": "The slug by which to identify the Source in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "enabled": {
            "description": "Enable to allow this Source to send data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "An optional human-readable name for this Source.",
            "type": "string",
            "title": "name"
          },
          "metadataId": {
            "description": "The id of the Source metadata from which this instance of the Source derives.\n\nAll Source metadata is available under `/catalog/sources`.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the Source.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsAlpha"
              }
            ]
          }
        },
        "required": [
          "enabled",
          "metadataId",
          "slug"
        ]
      },
      "CreateSourceAlphaOutput": {
        "description": "Returns the newly Source.",
        "title": "CreateSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "description": "The newly created Source.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceAlpha"
              }
            ]
          }
        },
        "required": [
          "source"
        ]
      },
      "DeleteSourceAlphaInput": {
        "description": "Deletes an existing Source by id.",
        "title": "DeleteSourceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "DeleteSourceAlphaOutput": {
        "description": "Returns the status of a Source deletion.",
        "title": "DeleteSourceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Source deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateSourceAlphaInput": {
        "description": "Updates an existing Source based on a set of parameters.",
        "title": "UpdateSourceAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "An optional human-readable name to associate with the Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow the Source to send data.",
            "type": "boolean",
            "title": "enabled"
          },
          "slug": {
            "description": "The slug that identifies the Source.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the Source.\n\nDifferent kinds of Sources require different kinds of input. The settings input for a Source comes from the\n`options` object associated with this instance of a Source.\n\nYou can find the full list of required settings by accessing the Sources catalog endpoint under `/catalog/sources`.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsAlpha"
              }
            ]
          }
        }
      },
      "UpdateSourceAlphaOutput": {
        "description": "Returns the updated Source.",
        "title": "UpdateSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "description": "The updated Source.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceAlpha"
              }
            ]
          }
        },
        "required": [
          "source"
        ]
      },
      "SourceV1": {
        "description": "Defines a data Source for Segment data.",
        "title": "SourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Source.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The slug used to identify the Source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The name of the Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "metadata": {
            "description": "The metadata for the Source.\n\nConfig API note: includes `catalogName` and `catalogId`.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceMetadataV1"
              }
            ]
          },
          "workspaceId": {
            "description": "The id of the Workspace that owns the Source.\n\nConfig API note: equal to `parent`.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "Enable to receive data from the Source.",
            "type": "boolean",
            "title": "enabled"
          },
          "writeKeys": {
            "description": "The write keys used to send data from the Source. This field is left empty when the current token does not have the\n'source admin' permission.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "writeKeys"
          },
          "settings": {
            "description": "The settings associated with the Source.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsV1"
              }
            ]
          },
          "labels": {
            "description": "A list of labels applied to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "required": [
          "enabled",
          "id",
          "labels",
          "metadata",
          "slug",
          "workspaceId",
          "writeKeys"
        ]
      },
      "SourceSettingsV1": {
        "description": "A key-value object that contains instance-specific settings for a Source.\n\nThe `options` field in the Source metadata defines the schema of this object.",
        "title": "SourceSettingsV1",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSourcesV1Input": {
        "description": "Requests a list of Sources that belong to the current Workspace.",
        "title": "ListSourcesV1Input",
        "type": "object",
        "properties": {}
      },
      "ListSourcesV1Output": {
        "description": "Returns a list of Sources that belong to the current Workspace.",
        "title": "ListSourcesV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list of Sources that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceV1"
            },
            "title": "sources"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "sources"
        ]
      },
      "GetSourceV1Input": {
        "description": "Looks up a Source by id.",
        "title": "GetSourceV1Input",
        "type": "object",
        "properties": {}
      },
      "GetSourceV1Output": {
        "description": "Returns a Source.",
        "title": "GetSourceV1Output",
        "type": "object",
        "properties": {
          "source": {
            "description": "The returned Source object.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceV1"
              }
            ]
          }
        },
        "required": [
          "source"
        ]
      },
      "ListConnectedWarehousesFromSourceV1Input": {
        "description": "Requests a list of Warehouses connected to a Source.",
        "title": "ListConnectedWarehousesFromSourceV1Input",
        "type": "object",
        "properties": {}
      },
      "ListConnectedWarehousesFromSourceV1Output": {
        "description": "Returns a list of Warehouses connected to a Source.",
        "title": "ListConnectedWarehousesFromSourceV1Output",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list that contains the Warehouses connected to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseV1"
            },
            "title": "warehouses"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "warehouses"
        ]
      },
      "ListConnectedDestinationsFromSourceV1Input": {
        "description": "Requests a list of Destinations connected to a Source.",
        "title": "ListConnectedDestinationsFromSourceV1Input",
        "type": "object",
        "properties": {}
      },
      "ListConnectedDestinationsFromSourceV1Output": {
        "description": "Returns a list of Destinations connected to a Source.",
        "title": "ListConnectedDestinationsFromSourceV1Output",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "A list that contains the Destinations connected to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationV1"
            },
            "title": "destinations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "destinations",
          "pagination"
        ]
      },
      "CreateSourceV1Input": {
        "description": "Create a new Source based on a set of parameters.",
        "title": "CreateSourceV1Input",
        "type": "object",
        "properties": {
          "slug": {
            "description": "The slug by which to identify the Source in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "enabled": {
            "description": "Enable to allow this Source to send data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadataId": {
            "description": "The id of the Source metadata from which this instance of the Source derives.\n\nAll Source metadata is available under `/catalog/sources`.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the Source.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsV1"
              }
            ]
          }
        },
        "required": [
          "enabled",
          "metadataId",
          "slug"
        ]
      },
      "CreateSourceV1Output": {
        "description": "Returns a newly created Source.",
        "title": "CreateSourceV1Output",
        "type": "object",
        "properties": {
          "source": {
            "description": "The newly created Source.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceV1"
              }
            ]
          }
        },
        "required": [
          "source"
        ]
      },
      "DeleteSourceV1Input": {
        "description": "Deletes an existing Source by id.",
        "title": "DeleteSourceV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteSourceV1Output": {
        "description": "Returns the status of a Source deletion.",
        "title": "DeleteSourceV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Source deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateSourceV1Input": {
        "description": "Updates an existing Source based on a set of parameters.",
        "title": "UpdateSourceV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "An optional human-readable name to associate with the Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow the Source to send data.",
            "type": "boolean",
            "title": "enabled"
          },
          "slug": {
            "description": "The slug that identifies the Source.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the Source.\n\nDifferent kinds of Sources require different kinds of input. The settings input for a Source comes from the\n`options` object associated with this instance of a Source.\n\nYou can find the full list of required settings by accessing the Sources catalog endpoint under `/catalog/sources`.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsV1"
              }
            ]
          }
        }
      },
      "UpdateSourceV1Output": {
        "description": "Returns the updated Source.",
        "title": "UpdateSourceV1Output",
        "type": "object",
        "properties": {
          "source": {
            "description": "The updated Source.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceV1"
              }
            ]
          }
        },
        "required": [
          "source"
        ]
      },
      "GetSpaceAlphaInput": {
        "description": "Input for the getSpaceById endpoint.",
        "title": "GetSpaceAlphaInput",
        "type": "object",
        "properties": {}
      },
      "Space": {
        "title": "Space",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id"
          },
          "slug": {
            "type": "string",
            "title": "slug"
          },
          "name": {
            "type": "string",
            "title": "name"
          }
        },
        "required": [
          "id",
          "name",
          "slug"
        ]
      },
      "GetSpaceAlphaOutput": {
        "description": "Response for the getSpaceById endpoint.",
        "title": "GetSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "space": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Space"
              }
            ],
            "description": "Space matching the given id.",
            "title": "space",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "space"
        ]
      },
      "GroupSubscriptionStatus": {
        "title": "GroupSubscriptionStatus",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the group.",
            "type": "string",
            "title": "name"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "required": [
          "name",
          "status"
        ]
      },
      "GroupSubscriptionStatusResponse": {
        "title": "GroupSubscriptionStatusResponse",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the group.",
            "type": "string",
            "title": "name"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "id": {
            "description": "The group id.",
            "type": "string",
            "title": "id"
          },
          "updatedAt": {
            "description": "The timestamp of this subscription status's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "required": [
          "id",
          "name",
          "status"
        ]
      },
      "UpdateGroupSubscriptionStatusResponse": {
        "title": "UpdateGroupSubscriptionStatusResponse",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the group.",
            "type": "string",
            "title": "name"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "id": {
            "description": "The group id.",
            "type": "string",
            "title": "id"
          }
        },
        "required": [
          "id",
          "name",
          "status"
        ]
      },
      "MessagesSubscriptionRequest": {
        "title": "MessagesSubscriptionRequest",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "Type is communication medium used.",
            "enum": [
              "ANDROID_PUSH",
              "EMAIL",
              "IOS_PUSH",
              "SMS",
              "WHATSAPP"
            ],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status globally.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "groups": {
            "description": "Optional groups subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupSubscriptionStatus"
            },
            "title": "groups"
          }
        },
        "required": [
          "key",
          "type"
        ]
      },
      "ReplaceMessagingSubscriptionsInSpacesAlphaInput": {
        "description": "Input for the endpoint.",
        "title": "ReplaceMessagingSubscriptionsInSpacesAlphaInput",
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "An array of subscriptions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessagesSubscriptionRequest"
            },
            "title": "subscriptions"
          }
        },
        "required": [
          "subscriptions"
        ]
      },
      "MessageSubscriptionResponseError": {
        "title": "MessageSubscriptionResponseError",
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string",
            "title": "code"
          },
          "message": {
            "description": "Error message.",
            "type": "string",
            "title": "message"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "MessageSubscriptionResponse": {
        "title": "MessageSubscriptionResponse",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "Type is communication medium used. Either SMS, EMAIL or WHATSAPP.",
            "enum": [
              "ANDROID_PUSH",
              "EMAIL",
              "IOS_PUSH",
              "SMS",
              "WHATSAPP"
            ],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "errors": {
            "description": "Error messages.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponseError"
            },
            "title": "errors"
          },
          "groups": {
            "description": "Optional subscription groups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateGroupSubscriptionStatusResponse"
            },
            "title": "groups"
          }
        },
        "required": [
          "key",
          "type"
        ]
      },
      "ReplaceMessagingSubscriptionsInSpacesAlphaOutput": {
        "description": "Output for the endpoint.",
        "title": "ReplaceMessagingSubscriptionsInSpacesAlphaOutput",
        "type": "object",
        "properties": {
          "successes": {
            "description": "Array of successful subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponse"
            },
            "title": "successes"
          },
          "failures": {
            "description": "Array of failure subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponse"
            },
            "title": "failures"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "failures",
          "successes"
        ]
      },
      "GetMessagingSubscriptionSuccessResponse": {
        "title": "GetMessagingSubscriptionSuccessResponse",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "Type is communication medium used.",
            "enum": [
              "ANDROID_PUSH",
              "EMAIL",
              "IOS_PUSH",
              "SMS",
              "WHATSAPP"
            ],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status. This is absent if the phone number or email is not found.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "groups": {
            "description": "Optional subscription groups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupSubscriptionStatusResponse"
            },
            "title": "groups"
          },
          "updatedAt": {
            "description": "The timestamp of this subscription status's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "required": [
          "key",
          "type"
        ]
      },
      "GetMessagingSubscriptionFailureResponse": {
        "title": "GetMessagingSubscriptionFailureResponse",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "This will be the exact type as given in the request.",
            "type": "string",
            "title": "type"
          },
          "errors": {
            "description": "Per key errors, such as validation errors.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponseError"
            },
            "title": "errors"
          }
        },
        "required": [
          "errors",
          "key",
          "type"
        ]
      },
      "BatchQueryMessagingSubscriptionsForSpaceAlphaOutput": {
        "description": "Batch get response.",
        "title": "BatchQueryMessagingSubscriptionsForSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "successes": {
            "description": "Array of successful subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMessagingSubscriptionSuccessResponse"
            },
            "title": "successes"
          },
          "failures": {
            "description": "Validation errors due to invalid types or email/phone numbers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMessagingSubscriptionFailureResponse"
            },
            "title": "failures"
          },
          "errors": {
            "description": "General errors when making the request such as invalid payload or wrong http method errors.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponseError"
            },
            "title": "errors"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "errors",
          "failures",
          "successes"
        ]
      },
      "GetSubscriptionRequest": {
        "title": "GetSubscriptionRequest",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "Type is communication medium used.",
            "enum": [
              "ANDROID_PUSH",
              "EMAIL",
              "IOS_PUSH",
              "SMS",
              "WHATSAPP"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "required": [
          "key",
          "type"
        ]
      },
      "BatchQueryMessagingSubscriptionsForSpaceAlphaInput": {
        "description": "Batch get request.",
        "title": "BatchQueryMessagingSubscriptionsForSpaceAlphaInput",
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "A list of subscriptions to retrieve subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSubscriptionRequest"
            },
            "title": "subscriptions"
          }
        },
        "required": [
          "subscriptions"
        ]
      },
      "TrackingPlanV1": {
        "description": "Represents a Tracking Plan.",
        "title": "TrackingPlanV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The Tracking Plan's identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The Tracking Plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "URL-friendly slug of this Tracking Plan.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "The Tracking Plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The Tracking Plan's type.",
            "enum": [
              "ENGAGE",
              "LIVE",
              "PROPERTY_LIBRARY",
              "RULE_LIBRARY",
              "TEMPLATE"
            ],
            "type": "string",
            "title": "type"
          },
          "updatedAt": {
            "description": "The timestamp of the last change to the Tracking Plan.\n\nConfig API note: equal to `updateTime`.",
            "type": "string",
            "title": "updatedAt"
          },
          "createdAt": {
            "description": "The timestamp of this Tracking Plan's creation.\n\nConfig API note: equal to `createTime`.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "RuleV1": {
        "description": "Represents a rule from a Tracking Plan.",
        "title": "RuleV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this Tracking Plan rule.",
            "enum": [
              "COMMON",
              "GROUP",
              "IDENTIFY",
              "PAGE",
              "SCREEN",
              "TRACK"
            ],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": {
            "description": "JSON Schema of this rule.",
            "title": "jsonSchema"
          },
          "version": {
            "description": "Version of this rule.",
            "type": "number",
            "title": "version"
          },
          "createdAt": {
            "description": "The timestamp of this rule's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this rule's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "deprecatedAt": {
            "description": "The timestamp of this rule's deprecation.",
            "type": "string",
            "title": "deprecatedAt"
          }
        },
        "required": [
          "jsonSchema",
          "type",
          "version"
        ]
      },
      "RuleInputV1": {
        "description": "Represents a rule to add to a Tracking Plan.",
        "title": "RuleInputV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this Tracking Plan rule.",
            "enum": [
              "COMMON",
              "GROUP",
              "IDENTIFY",
              "PAGE",
              "SCREEN",
              "TRACK"
            ],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": {
            "description": "JSON Schema of this rule.",
            "title": "jsonSchema"
          },
          "version": {
            "description": "Version of this rule.",
            "type": "number",
            "title": "version"
          }
        },
        "required": [
          "jsonSchema",
          "type",
          "version"
        ]
      },
      "UpsertRuleV1": {
        "title": "UpsertRuleV1",
        "type": "object",
        "properties": {
          "newKey": {
            "description": "This rule's new intended key.",
            "type": "string",
            "title": "newKey"
          },
          "type": {
            "description": "The type for this Tracking Plan rule.",
            "enum": [
              "COMMON",
              "GROUP",
              "IDENTIFY",
              "PAGE",
              "SCREEN",
              "TRACK"
            ],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": {
            "description": "JSON Schema of this rule.",
            "title": "jsonSchema"
          },
          "version": {
            "description": "Version of this rule.",
            "type": "number",
            "title": "version"
          }
        },
        "required": [
          "jsonSchema",
          "type",
          "version"
        ]
      },
      "RemoveRuleV1": {
        "description": "Represents the parameters needed to identify a rule on the backend-side.",
        "title": "RemoveRuleV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this Tracking Plan rule.",
            "enum": [
              "COMMON",
              "GROUP",
              "IDENTIFY",
              "PAGE",
              "SCREEN",
              "TRACK"
            ],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "version": {
            "description": "Version of this rule.",
            "type": "number",
            "title": "version"
          }
        },
        "required": [
          "type",
          "version"
        ]
      },
      "ListTrackingPlansV1Input": {
        "description": "Lists the Tracking Plans associated with the current Workspace.",
        "title": "ListTrackingPlansV1Input",
        "type": "object",
        "properties": {}
      },
      "GetTrackingPlanV1Input": {
        "description": "Gets a single Tracking Plan.",
        "title": "GetTrackingPlanV1Input",
        "type": "object",
        "properties": {}
      },
      "ListTrackingPlansV1Output": {
        "description": "Lists the Tracking Plans associated with the current Workspace.",
        "title": "ListTrackingPlansV1Output",
        "type": "object",
        "properties": {
          "trackingPlans": {
            "description": "A paginated list of Tracking Plans.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingPlanV1"
            },
            "title": "trackingPlans"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "trackingPlans"
        ]
      },
      "GetTrackingPlanV1Output": {
        "description": "Gets a single Tracking Plan.",
        "title": "GetTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "description": "The requested Tracking Plan.",
            "title": "trackingPlan",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackingPlanV1"
              }
            ]
          }
        },
        "required": [
          "trackingPlan"
        ]
      },
      "DeleteTrackingPlanV1Input": {
        "description": "Deletes a Tracking Plan.",
        "title": "DeleteTrackingPlanV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteTrackingPlanV1Output": {
        "description": "Result of a DeleteTrackingPlan call.",
        "title": "DeleteTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateTrackingPlanV1Input": {
        "description": "Creates a Tracking Plan in the Workspace.",
        "title": "CreateTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The Tracking Plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The Tracking Plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The Tracking Plan's type.",
            "enum": [
              "ENGAGE",
              "LIVE",
              "PROPERTY_LIBRARY",
              "RULE_LIBRARY",
              "TEMPLATE"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "CreateTrackingPlanV1Output": {
        "description": "Result of a CreateTrackingPlan call.",
        "title": "CreateTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "description": "The created Tracking Plan.",
            "title": "trackingPlan",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackingPlanV1"
              }
            ]
          }
        },
        "required": [
          "trackingPlan"
        ]
      },
      "UpdateTrackingPlanV1Input": {
        "description": "Updates the Workspace's Tracking Plan.",
        "title": "UpdateTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The Tracking Plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The Tracking Plan's description.",
            "type": "string",
            "title": "description"
          }
        }
      },
      "UpdateTrackingPlanV1Output": {
        "description": "Result of an UpdateTrackingPlan call.",
        "title": "UpdateTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "ListRulesFromTrackingPlanV1Input": {
        "description": "Lists a Tracking Plan's rules.",
        "title": "ListRulesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {}
      },
      "ListRulesFromTrackingPlanV1Output": {
        "description": "Lists a Tracking Plan's rules.",
        "title": "ListRulesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules associated with the given Tracking Plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleV1"
            },
            "title": "rules"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "rules"
        ]
      },
      "UpdateRulesInTrackingPlanV1Input": {
        "description": "Updates Tracking Plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules to update or insert.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpsertRuleV1"
            },
            "title": "rules"
          }
        },
        "required": [
          "rules"
        ]
      },
      "RemoveRulesFromTrackingPlanV1Input": {
        "description": "Remove specified rules from a Tracking Plan.",
        "title": "RemoveRulesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {}
      },
      "ReplaceRulesInTrackingPlanV1Input": {
        "description": "Replaces Tracking Plan rules.",
        "title": "ReplaceRulesInTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules to replace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleInputV1"
            },
            "title": "rules"
          }
        },
        "required": [
          "rules"
        ]
      },
      "ReplaceRulesInTrackingPlanV1Output": {
        "description": "Replaces Tracking Plan rules.",
        "title": "ReplaceRulesInTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "RemoveRulesFromTrackingPlanV1Output": {
        "description": "Remove specified rules from a Tracking Plan.",
        "title": "RemoveRulesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateRulesInTrackingPlanV1Output": {
        "description": "Updates Tracking Plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "ListSourcesFromTrackingPlanV1Input": {
        "description": "Lists all Sources associated with a Tracking Plan.",
        "title": "ListSourcesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {}
      },
      "ListSourcesFromTrackingPlanV1Output": {
        "description": "Lists all Sources associated with a Tracking Plan.",
        "title": "ListSourcesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A paginated list of Sources associated with the Tracking Plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceV1"
            },
            "title": "sources"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "sources"
        ]
      },
      "AddSourceToTrackingPlanV1Input": {
        "description": "Connects a Source to a Tracking Plan.",
        "title": "AddSourceToTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source associated with the Tracking Plan.\n\nConfig API note: analogous to `sourceName`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": [
          "sourceId"
        ]
      },
      "AddSourceToTrackingPlanV1Output": {
        "description": "Connects a Source to a Tracking Plan.",
        "title": "AddSourceToTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "RemoveSourceFromTrackingPlanV1Input": {
        "description": "Disconnects a Source from a Tracking Plan.",
        "title": "RemoveSourceFromTrackingPlanV1Input",
        "type": "object",
        "properties": {}
      },
      "RemoveSourceFromTrackingPlanV1Output": {
        "description": "Disconnects a Source from a Tracking Plan.",
        "title": "RemoveSourceFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "TransformationBeta": {
        "description": "Represents a Transformation.",
        "title": "TransformationBeta",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Transformation.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The Source associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n  Track -\\> \"event='\\<eventName\\>'\"\n  Identify -\\> \"type='identify'\"\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameBeta"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationBeta"
            },
            "title": "propertyValueTransformations"
          }
        },
        "required": [
          "enabled",
          "id",
          "if",
          "name",
          "sourceId"
        ]
      },
      "PropertyRenameBeta": {
        "title": "PropertyRenameBeta",
        "type": "object",
        "properties": {
          "oldName": {
            "description": "The old name of the property.",
            "type": "string",
            "title": "oldName"
          },
          "newName": {
            "description": "The new name to rename the property.",
            "type": "string",
            "title": "newName"
          }
        },
        "required": [
          "newName",
          "oldName"
        ]
      },
      "PropertyValueTransformationBeta": {
        "title": "PropertyValueTransformationBeta",
        "type": "object",
        "properties": {
          "propertyPaths": {
            "description": "The property paths. The maximum number of paths is 10.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "propertyPaths"
          },
          "propertyValue": {
            "description": "The new value of the property paths.",
            "type": "string",
            "title": "propertyValue"
          }
        },
        "required": [
          "propertyPaths",
          "propertyValue"
        ]
      },
      "GetTransformationBetaOutput": {
        "description": "The output of Transformation retrieval.",
        "title": "GetTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The retrieved Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationBeta"
              }
            ]
          }
        },
        "required": [
          "transformation"
        ]
      },
      "GetTransformationBetaInput": {
        "description": "The input of Transformation retrieval.",
        "title": "GetTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": {
            "description": "The Transformation id.",
            "type": "string",
            "title": "transformationId"
          }
        },
        "required": [
          "transformationId"
        ]
      },
      "ListTransformationsBetaInput": {
        "description": "Lists the Transformations associated with the current Workspace.",
        "title": "ListTransformationsBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "description": "Pagination options.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInput"
              }
            ]
          }
        },
        "required": [
          "pagination"
        ]
      },
      "ListTransformationsBetaOutput": {
        "description": "Lists the Transformations associated with the current Workspace.",
        "title": "ListTransformationsBetaOutput",
        "type": "object",
        "properties": {
          "transformations": {
            "description": "A paginated list of Transformations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransformationBeta"
            },
            "title": "transformations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "transformations"
        ]
      },
      "DeleteTransformationBetaInput": {
        "description": "The input of delete Transformation.",
        "title": "DeleteTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": {
            "description": "The Transformation id.",
            "type": "string",
            "title": "transformationId"
          }
        },
        "required": [
          "transformationId"
        ]
      },
      "DeleteTransformationBetaOutput": {
        "description": "The output of delete Transformation.",
        "title": "DeleteTransformationBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateTransformationBetaInput": {
        "description": "The input to update a Transformation.",
        "title": "UpdateTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": {
            "description": "ID of the Transformation to update.",
            "type": "string",
            "title": "transformationId"
          },
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The optional Source to be associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata to be associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n  Track -\\> \"event='\\<eventName\\>'\"\n  Identify -\\> \"type='identify'\"\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameBeta"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationBeta"
            },
            "title": "propertyValueTransformations"
          }
        },
        "required": [
          "transformationId"
        ]
      },
      "UpdateTransformationBetaOutput": {
        "description": "The output of an updated Transformation.",
        "title": "UpdateTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The updated Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationBeta"
              }
            ]
          }
        },
        "required": [
          "transformation"
        ]
      },
      "CreateTransformationBetaInput": {
        "description": "The input to create a Transformation.",
        "title": "CreateTransformationBetaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The Source to be associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata id to be associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n  Track -\\> \"event='\\<eventName\\>'\"\n  Identify -\\> \"type='identify'\"\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameBeta"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationBeta"
            },
            "title": "propertyValueTransformations"
          }
        },
        "required": [
          "enabled",
          "if",
          "name",
          "sourceId"
        ]
      },
      "CreateTransformationBetaOutput": {
        "description": "The output of a created Transformation.",
        "title": "CreateTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The created Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationBeta"
              }
            ]
          }
        },
        "required": [
          "transformation"
        ]
      },
      "TransformationV1": {
        "description": "Represents a Transformation.",
        "title": "TransformationV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Transformation.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The Source associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n  Track -\\> \"event='\\<eventName\\>'\"\n  Identify -\\> \"type='identify'\"\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameV1"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationV1"
            },
            "title": "propertyValueTransformations"
          },
          "fqlDefinedProperties": {
            "description": "Optional array for defining new properties in FQL. Limited to 1 property right now.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FQLDefinedPropertyV1"
            },
            "title": "fqlDefinedProperties"
          }
        },
        "required": [
          "enabled",
          "id",
          "if",
          "name",
          "sourceId"
        ]
      },
      "PropertyRenameV1": {
        "title": "PropertyRenameV1",
        "type": "object",
        "properties": {
          "oldName": {
            "description": "The old name of the property.",
            "type": "string",
            "title": "oldName"
          },
          "newName": {
            "description": "The new name to rename the property.",
            "type": "string",
            "title": "newName"
          }
        },
        "required": [
          "newName",
          "oldName"
        ]
      },
      "PropertyValueTransformationV1": {
        "title": "PropertyValueTransformationV1",
        "type": "object",
        "properties": {
          "propertyPaths": {
            "description": "The property paths. The maximum number of paths is 10.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "propertyPaths"
          },
          "propertyValue": {
            "description": "The new value of the property paths.",
            "type": "string",
            "title": "propertyValue"
          }
        },
        "required": [
          "propertyPaths",
          "propertyValue"
        ]
      },
      "FQLDefinedPropertyV1": {
        "title": "FQLDefinedPropertyV1",
        "type": "object",
        "properties": {
          "fql": {
            "description": "The FQL expression used to compute the property.",
            "type": "string",
            "title": "fql"
          },
          "propertyName": {
            "description": "The new property name.",
            "type": "string",
            "title": "propertyName"
          }
        },
        "required": [
          "fql",
          "propertyName"
        ]
      },
      "GetTransformationV1Output": {
        "description": "The output of Transformation retrieval.",
        "title": "GetTransformationV1Output",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The retrieved Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationV1"
              }
            ]
          }
        },
        "required": [
          "transformation"
        ]
      },
      "GetTransformationV1Input": {
        "description": "The input of Transformation retrieval.",
        "title": "GetTransformationV1Input",
        "type": "object",
        "properties": {}
      },
      "ListTransformationsV1Input": {
        "description": "Lists the Transformations associated with the current Workspace.",
        "title": "ListTransformationsV1Input",
        "type": "object",
        "properties": {}
      },
      "ListTransformationsV1Output": {
        "description": "Lists the Transformations associated with the current Workspace.",
        "title": "ListTransformationsV1Output",
        "type": "object",
        "properties": {
          "transformations": {
            "description": "A paginated list of Transformations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransformationV1"
            },
            "title": "transformations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "transformations"
        ]
      },
      "DeleteTransformationV1Input": {
        "description": "The input of delete Transformation.",
        "title": "DeleteTransformationV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteTransformationV1Output": {
        "description": "The output of delete Transformation.",
        "title": "DeleteTransformationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateTransformationV1Input": {
        "description": "The input to update a Transformation.",
        "title": "UpdateTransformationV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The optional Source to be associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata to be associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n  Track -\\> \"event='\\<eventName\\>'\"\n  Identify -\\> \"type='identify'\"\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameV1"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationV1"
            },
            "title": "propertyValueTransformations"
          },
          "fqlDefinedProperties": {
            "description": "Optional array for updating properties defined in [FQL](https://segment.com/docs/config-api/fql/). Currently limited to 1 property.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FQLDefinedPropertyV1"
            },
            "title": "fqlDefinedProperties"
          }
        }
      },
      "UpdateTransformationV1Output": {
        "description": "The output of an updated Transformation.",
        "title": "UpdateTransformationV1Output",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The updated Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationV1"
              }
            ]
          }
        },
        "required": [
          "transformation"
        ]
      },
      "CreateTransformationV1Input": {
        "description": "The input to create a Transformation.",
        "title": "CreateTransformationV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The Source to be associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata id to be associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n  Track -\\> \"event='\\<eventName\\>'\"\n  Identify -\\> \"type='identify'\"\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameV1"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationV1"
            },
            "title": "propertyValueTransformations"
          },
          "fqlDefinedProperties": {
            "description": "Optional array for defining new properties in [FQL](https://segment.com/docs/config-api/fql/). Currently limited to 1 property.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FQLDefinedPropertyV1"
            },
            "title": "fqlDefinedProperties"
          }
        },
        "required": [
          "enabled",
          "if",
          "name",
          "sourceId"
        ]
      },
      "CreateTransformationV1Output": {
        "description": "The output of a created Transformation.",
        "title": "CreateTransformationV1Output",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The created Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationV1"
              }
            ]
          }
        },
        "required": [
          "transformation"
        ]
      },
      "MtuSnapshotV1": {
        "description": "A snapshot of MTU metrics within the given usage period.",
        "title": "MtuSnapshotV1",
        "type": "object",
        "properties": {
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "timestamp"
        ]
      },
      "UsersPerSourceSnapshotV1": {
        "description": "A snapshot of MTU metrics for a given Source within the given usage period.",
        "title": "UsersPerSourceSnapshotV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id.",
            "type": "string",
            "title": "sourceId"
          },
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "sourceId",
          "timestamp"
        ]
      },
      "APICallSnapshotV1": {
        "description": "A snapshot of the number of API calls for a given Workspace.",
        "title": "APICallSnapshotV1",
        "type": "object",
        "properties": {
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "apiCalls",
          "timestamp"
        ]
      },
      "SourceAPICallSnapshotV1": {
        "description": "A snapshot of the number of API calls for a given Source in a Workspace.",
        "title": "SourceAPICallSnapshotV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id.",
            "type": "string",
            "title": "sourceId"
          },
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "apiCalls",
          "sourceId",
          "timestamp"
        ]
      },
      "GetDailyWorkspaceMTUUsageV1Input": {
        "description": "Input to retrieve aggregated daily Workspace MTU in a billing period.",
        "title": "GetDailyWorkspaceMTUUsageV1Input",
        "type": "object",
        "properties": {}
      },
      "GetDailyWorkspaceMTUUsageV1Output": {
        "description": "Returns a list of daily aggregations of Workspace MTU counts.",
        "title": "GetDailyWorkspaceMTUUsageV1Output",
        "type": "object",
        "properties": {
          "dailyWorkspaceMTUUsage": {
            "description": "The list of daily Workspace MTU count aggregates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtuSnapshotV1"
            },
            "title": "dailyWorkspaceMTUUsage"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "dailyWorkspaceMTUUsage",
          "pagination"
        ]
      },
      "GetDailyPerSourceMTUUsageV1Input": {
        "description": "Input to retrieve aggregated daily Source level MTU in a billing period.",
        "title": "GetDailyPerSourceMTUUsageV1Input",
        "type": "object",
        "properties": {}
      },
      "GetDailyPerSourceMTUUsageV1Output": {
        "description": "Returns a list of daily aggregations of Source level MTU counts.",
        "title": "GetDailyPerSourceMTUUsageV1Output",
        "type": "object",
        "properties": {
          "dailyPerSourceMTUUsage": {
            "description": "The list of daily per Source MTU count aggregates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsersPerSourceSnapshotV1"
            },
            "title": "dailyPerSourceMTUUsage"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "dailyPerSourceMTUUsage",
          "pagination"
        ]
      },
      "GetDailyWorkspaceAPICallsUsageV1Input": {
        "description": "Input to retrieve aggregated daily Workspace API calls in a billing period.",
        "title": "GetDailyWorkspaceAPICallsUsageV1Input",
        "type": "object",
        "properties": {}
      },
      "GetDailyWorkspaceAPICallsUsageV1Output": {
        "description": "Returns a list of daily aggregations of Workspace MTU counts.",
        "title": "GetDailyWorkspaceAPICallsUsageV1Output",
        "type": "object",
        "properties": {
          "dailyWorkspaceAPICallsUsage": {
            "description": "The list of daily Workspace API calls count aggregates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APICallSnapshotV1"
            },
            "title": "dailyWorkspaceAPICallsUsage"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "dailyWorkspaceAPICallsUsage",
          "pagination"
        ]
      },
      "GetDailyPerSourceAPICallsUsageV1Input": {
        "description": "Input to retrieve aggregated daily Source level API calls in a billing period.",
        "title": "GetDailyPerSourceAPICallsUsageV1Input",
        "type": "object",
        "properties": {}
      },
      "GetDailyPerSourceAPICallsUsageV1Output": {
        "description": "Returns a list of daily aggregations of Source level API calls counts.",
        "title": "GetDailyPerSourceAPICallsUsageV1Output",
        "type": "object",
        "properties": {
          "dailyPerSourceAPICallsUsage": {
            "description": "The list of daily per Source API calls count aggregates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceAPICallSnapshotV1"
            },
            "title": "dailyPerSourceAPICallsUsage"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "dailyPerSourceAPICallsUsage",
          "pagination"
        ]
      },
      "GetWarehousesCatalogV1Input": {
        "description": "Filter parameters used for loading the Warehouses public catalog.",
        "title": "GetWarehousesCatalogV1Input",
        "type": "object",
        "properties": {}
      },
      "GetWarehousesCatalogV1Output": {
        "description": "Returns a list of all Warehouse catalog items contained within a given page.",
        "title": "GetWarehousesCatalogV1Output",
        "type": "object",
        "properties": {
          "warehousesCatalog": {
            "description": "All Warehouse catalog items contained within the requested page.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseMetadataV1"
            },
            "title": "warehousesCatalog"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "warehousesCatalog"
        ]
      },
      "GetWarehouseMetadataV1Input": {
        "description": "Returns a Warehouse catalog item by id.",
        "title": "GetWarehouseMetadataV1Input",
        "type": "object",
        "properties": {}
      },
      "GetWarehouseMetadataV1Output": {
        "description": "Returns a Warehouse catalog item looked up by id.",
        "title": "GetWarehouseMetadataV1Output",
        "type": "object",
        "properties": {
          "warehouseMetadata": {
            "description": "The Warehouse catalog item.",
            "title": "warehouseMetadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseMetadataV1"
              }
            ]
          }
        },
        "required": [
          "warehouseMetadata"
        ]
      },
      "WarehouseMetadataV1": {
        "description": "The metadata for an instance of Segment’s data Warehouse product.",
        "title": "WarehouseMetadataV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of this object.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of this object.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "A human-readable, unique identifier for object.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "A description, in English, of this object.",
            "type": "string",
            "title": "description"
          },
          "logos": {
            "description": "Logo information for this object.",
            "title": "logos",
            "allOf": [
              {
                "$ref": "#/components/schemas/LogosBeta"
              }
            ]
          },
          "options": {
            "description": "The Integration options for this object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationOptionBeta"
            },
            "title": "options"
          }
        },
        "required": [
          "description",
          "id",
          "logos",
          "name",
          "options",
          "slug"
        ]
      },
      "WarehouseSettingsV1": {
        "description": "A key-value object that contains instance-specific Warehouse settings.",
        "title": "WarehouseSettingsV1",
        "type": "object",
        "additionalProperties": {}
      },
      "WarehouseV1": {
        "description": "Defines a data Warehouse used as a Destination for Segment data.",
        "title": "WarehouseV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Warehouse.",
            "type": "string",
            "title": "id"
          },
          "metadata": {
            "description": "The metadata for the Warehouse.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseMetadataV1"
              }
            ]
          },
          "workspaceId": {
            "description": "The id of the Workspace that owns this Warehouse.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "When set to true, this Warehouse receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The settings associated with this Warehouse.\n\nCommon settings are connection-related configuration used to connect to it, for example host, username, and port.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          }
        },
        "required": [
          "enabled",
          "id",
          "metadata",
          "settings",
          "workspaceId"
        ]
      },
      "SyncNoticeV1": {
        "description": "Represents a notice within a sync for a Source and Warehouse pair.",
        "title": "SyncNoticeV1",
        "type": "object",
        "properties": {
          "level": {
            "description": "The severity of the notice.",
            "type": "string",
            "title": "level"
          },
          "message": {
            "description": "The human-readable message that describes the notice.",
            "type": "string",
            "title": "message"
          },
          "createdAt": {
            "description": "The timestamp of this sync notice's creation.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "required": [
          "createdAt",
          "level",
          "message"
        ]
      },
      "SyncV1": {
        "description": "Represents a sync between a Source and Warehouse.\n\nA sync occurs when data from a Source is loaded into a Warehouse.",
        "title": "SyncV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source loaded in the sync.",
            "type": "string",
            "title": "sourceId"
          },
          "start": {
            "description": "The start time of the sync.",
            "type": "string",
            "title": "start"
          },
          "end": {
            "description": "The time the sync completed. Returns null if unfinished.",
            "type": "string",
            "title": "end",
            "nullable": true
          },
          "status": {
            "description": "The status of the sync.",
            "type": "string",
            "title": "status"
          },
          "duration": {
            "description": "The duration of the sync in seconds. Returns the partial duration if the sync has not finished yet.",
            "type": "number",
            "title": "duration"
          },
          "humanDuration": {
            "description": "The human-readable counterpart of `duration`.",
            "type": "string",
            "title": "humanDuration"
          },
          "count": {
            "description": "The number of rows synced into the Warehouse.",
            "type": "number",
            "title": "count"
          },
          "notices": {
            "description": "Notices that contain the events that occurred during the sync.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncNoticeV1"
            },
            "title": "notices"
          }
        },
        "required": [
          "count",
          "duration",
          "end",
          "humanDuration",
          "notices",
          "sourceId",
          "start",
          "status"
        ]
      },
      "WarehouseSyncOverrideV1": {
        "description": "Represents the override for a Source/collection/property? path to apply to a Warehouse.",
        "title": "WarehouseSyncOverrideV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source this schema item applies to.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": {
            "description": "The collection the schema item override applies to.",
            "type": "string",
            "title": "collection"
          },
          "enabled": {
            "description": "Enable to apply the override.",
            "type": "boolean",
            "title": "enabled"
          },
          "property": {
            "description": "A property within the collection to which the override applies.",
            "type": "string",
            "title": "property"
          }
        },
        "required": [
          "enabled",
          "sourceId"
        ]
      },
      "WarehouseSelectiveSyncItemV1": {
        "description": "Represents an entry in the Warehouse Selective Sync schema for a Warehouse and Source pair.",
        "title": "WarehouseSelectiveSyncItemV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id attached to this Warehouse.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": {
            "description": "The collection within the Source.",
            "type": "string",
            "title": "collection"
          },
          "warehouseId": {
            "description": "The id of the Warehouse this sync belongs to.",
            "type": "string",
            "title": "warehouseId"
          },
          "properties": {
            "description": "A map that contains the properties within the collection to which the Warehouse should sync.",
            "type": "object",
            "additionalProperties": true,
            "title": "properties"
          }
        },
        "required": [
          "collection",
          "properties",
          "sourceId",
          "warehouseId"
        ]
      },
      "WarehouseAdvancedSyncV1": {
        "description": "Determines the time of day at which a Warehouse should sync.",
        "title": "WarehouseAdvancedSyncV1",
        "type": "object",
        "properties": {
          "hourOfDay": {
            "description": "The hour of day for which to enable/disable a sync, between 0 and 23.",
            "type": "number",
            "title": "hourOfDay"
          },
          "enabled": {
            "description": "Enable to the sync at the specified hour.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": [
          "enabled",
          "hourOfDay"
        ]
      },
      "AdvancedWarehouseSyncScheduleV1Input": {
        "description": "Defines the advanced sync schedule for a Warehouse.",
        "title": "AdvancedWarehouseSyncScheduleV1Input",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseAdvancedSyncV1"
            },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        },
        "required": [
          "times",
          "timezone"
        ]
      },
      "AdvancedWarehouseSyncScheduleV1Output": {
        "description": "Defines the advanced sync schedule for a Warehouse.",
        "title": "AdvancedWarehouseSyncScheduleV1Output",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseAdvancedSyncV1"
            },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        }
      },
      "ListWarehousesV1Input": {
        "description": "Gets a list of Warehouses belonging to a Workspace.",
        "title": "ListWarehousesV1Input",
        "type": "object",
        "properties": {}
      },
      "ListWarehousesV1Output": {
        "description": "Returns a list of Warehouses that belong to a Workspace.",
        "title": "ListWarehousesV1Output",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list of Warehouses that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseV1"
            },
            "title": "warehouses"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "warehouses"
        ]
      },
      "GetWarehouseV1Input": {
        "description": "Looks up a Warehouse by id.",
        "title": "GetWarehouseV1Input",
        "type": "object",
        "properties": {}
      },
      "GetWarehouseV1Output": {
        "description": "Returns a Warehouse.",
        "title": "GetWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "description": "The returned Warehouse object.",
            "title": "warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseV1"
              }
            ]
          }
        },
        "required": [
          "warehouse"
        ]
      },
      "ListConnectedSourcesFromWarehouseV1Input": {
        "description": "Looks up the list of Sources connected to a Warehouse.",
        "title": "ListConnectedSourcesFromWarehouseV1Input",
        "type": "object",
        "properties": {}
      },
      "ListConnectedSourcesFromWarehouseV1Output": {
        "description": "Returns a list of Sources connected to a Warehouse.",
        "title": "ListConnectedSourcesFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list that contains the Sources connected to the requested Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceV1"
            },
            "title": "sources"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "sources"
        ]
      },
      "ListSyncsFromWarehouseV1Input": {
        "description": "Requests the overview of syncs for every Source connected to this Warehouse.",
        "title": "ListSyncsFromWarehouseV1Input",
        "type": "object",
        "properties": {}
      },
      "ListSyncsFromWarehouseV1Output": {
        "description": "Returns an overview page that contains the last syncs for a Warehouse.",
        "title": "ListSyncsFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncV1"
            },
            "title": "reports"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "reports"
        ]
      },
      "ListSyncsFromWarehouseAndSourceV1Input": {
        "description": "Loads the most recent sync information for a Warehouse-source pair.",
        "title": "ListSyncsFromWarehouseAndSourceV1Input",
        "type": "object",
        "properties": {}
      },
      "ListSyncsFromWarehouseAndSourceV1Output": {
        "description": "Returns a list that contains the most recent syncs for a Warehouse-source pair, filtered and constrained by a given\nset of pagination parameters.",
        "title": "ListSyncsFromWarehouseAndSourceV1Output",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified Warehouse-source pair.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncV1"
            },
            "title": "reports"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "pagination",
          "reports"
        ]
      },
      "AddConnectionFromSourceToWarehouseV1Input": {
        "description": "Connects a Source to a Warehouse.\n\nPosting to this idempotent endpoint creates a connection between the Source and Warehouse, and begins syncing data\nfrom the Source's collections into the chosen Warehouse Destination.",
        "title": "AddConnectionFromSourceToWarehouseV1Input",
        "type": "object",
        "properties": {}
      },
      "AddConnectionFromSourceToWarehouseV1Output": {
        "description": "Response indicating whether the connection was successful.",
        "title": "AddConnectionFromSourceToWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the connection between the Source and Warehouse.",
            "enum": [
              "CONNECTED",
              "NOT_CONNECTED"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "RemoveSourceConnectionFromWarehouseV1Input": {
        "description": "Disconnects a Source from a Warehouse.\n\nPosting to this idempotent endpoint removes a connection between the Source and Warehouse, and blocks all syncing\nfrom the Source's collections into the chosen Warehouse Destination.",
        "title": "RemoveSourceConnectionFromWarehouseV1Input",
        "type": "object",
        "properties": {}
      },
      "RemoveSourceConnectionFromWarehouseV1Output": {
        "description": "Response indicating whether the disconnection was successful.",
        "title": "RemoveSourceConnectionFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the request to disconnect the Source and Warehouse.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "ListSelectiveSyncsFromWarehouseAndSourceV1Input": {
        "description": "Get the Selective Sync configuration associated with a Warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceV1Input",
        "type": "object",
        "properties": {}
      },
      "ListSelectiveSyncsFromWarehouseAndSourceV1Output": {
        "description": "Results containing the Selective Sync configuration for a Warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceV1Output",
        "type": "object",
        "properties": {
          "items": {
            "description": "Represents a list of Source, collection, and properties synced to the Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseSelectiveSyncItemV1"
            },
            "title": "items"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "required": [
          "items",
          "pagination"
        ]
      },
      "UpdateSelectiveSyncForWarehouseV1Input": {
        "description": "Updates the schema for a Warehouse/sources pair.",
        "title": "UpdateSelectiveSyncForWarehouseV1Input",
        "type": "object",
        "properties": {
          "syncOverrides": {
            "description": "A list of sync schema overrides to apply to this Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseSyncOverrideV1"
            },
            "title": "syncOverrides"
          }
        },
        "required": [
          "syncOverrides"
        ]
      },
      "UpdateSelectiveSyncForWarehouseV1Output": {
        "description": "Results from updating the schema for a Warehouse/source pair.",
        "title": "UpdateSelectiveSyncForWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "Status of the update operation.",
            "enum": [
              "UNCHANGED",
              "UPDATED"
            ],
            "type": "string",
            "title": "status"
          },
          "warnings": {
            "description": "Warnings returned by the operation.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "warnings"
          }
        },
        "required": [
          "status",
          "warnings"
        ]
      },
      "GetAdvancedSyncScheduleFromWarehouseV1Input": {
        "description": "Gets the advanced sync schedule for a Warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseV1Input",
        "type": "object",
        "properties": {}
      },
      "GetAdvancedSyncScheduleFromWarehouseV1Output": {
        "description": "Returns the advanced sync schedule for a Warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for this Warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the schedule overrides for the specified Warehouse, if enabled.",
            "title": "schedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Output"
              }
            ]
          }
        },
        "required": [
          "enabled"
        ]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseV1Input": {
        "description": "Replaces the advanced sync schedule for a Warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseV1Input",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Enable to turn on an advanced sync schedule for the Warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The full sync schedule for the Warehouse.",
            "title": "schedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Input"
              }
            ]
          }
        },
        "required": [
          "enabled"
        ]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseV1Output": {
        "description": "Returns the advanced sync schedule for a Warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseV1Output",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for the Warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the overrides for the Warehouse, if enabled.",
            "title": "schedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Output"
              }
            ]
          }
        },
        "required": [
          "enabled"
        ]
      },
      "CreateWarehouseV1Input": {
        "description": "Create a new Warehouse based on a set of parameters.",
        "title": "CreateWarehouseV1Input",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The Warehouse metadata to use.",
            "type": "string",
            "title": "metadataId"
          },
          "name": {
            "description": "An optional human-readable name for this Warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this Warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for a Warehouse.\n\nDifferent kinds of Warehouses require different settings. The required and optional settings\nfor a Warehouse are described in the `options` object of the associated Warehouse metadata.\n\nYou can find the full list of Warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          }
        },
        "required": [
          "metadataId",
          "settings"
        ]
      },
      "CreateWarehouseV1Output": {
        "description": "Returns the newly created Warehouse.",
        "title": "CreateWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "description": "The newly created Warehouse.",
            "title": "warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseV1"
              }
            ]
          }
        },
        "required": [
          "warehouse"
        ]
      },
      "UpdateWarehouseV1Input": {
        "description": "Updates an existing Warehouse based on a set of parameters.",
        "title": "UpdateWarehouseV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "An optional human-readable name to associate with this Warehouse.",
            "type": "string",
            "title": "name",
            "nullable": true
          },
          "enabled": {
            "description": "Enable to allow this Warehouse to receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for a Warehouse.\n\nDifferent kinds of Warehouses require different settings. The required and optional settings\nfor a Warehouse are described in the `options` object of the associated Warehouse metadata.\n\nYou can find the full list of Warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          }
        },
        "required": [
          "settings"
        ]
      },
      "UpdateWarehouseV1Output": {
        "description": "Returns the updated Warehouse.",
        "title": "UpdateWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "description": "The updated Warehouse.",
            "title": "warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseV1"
              }
            ]
          }
        },
        "required": [
          "warehouse"
        ]
      },
      "DeleteWarehouseV1Input": {
        "description": "Deletes an existing Warehouse by id.",
        "title": "DeleteWarehouseV1Input",
        "type": "object",
        "properties": {}
      },
      "DeleteWarehouseV1Output": {
        "description": "Returns the status of a Warehouse deletion.",
        "title": "DeleteWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Warehouse deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "GetConnectionStateFromWarehouseV1Input": {
        "description": "Verifies the connection state of a Warehouse.\n\nUse this to check if a Warehouse is reachable, given its stored connection settings.",
        "title": "GetConnectionStateFromWarehouseV1Input",
        "type": "object",
        "properties": {}
      },
      "GetConnectionStateFromWarehouseV1Output": {
        "description": "Returns the status of a Warehouse connection settings after an attempt to connect to it.",
        "title": "GetConnectionStateFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "connectionState": {
            "description": "Represents the status for the current connection settings.",
            "enum": [
              "CONNECTED",
              "FAILED"
            ],
            "type": "string",
            "title": "connectionState"
          }
        },
        "required": [
          "connectionState"
        ]
      },
      "CreateValidationInWarehouseV1Output": {
        "description": "Returns the status of a Warehouse connection settings after an attempt to connect to it.",
        "title": "CreateValidationInWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "Represents the status for the current connection settings.",
            "enum": [
              "CONNECTED",
              "FAILED"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateValidationInWarehouseV1Input": {
        "description": "Verifies a set of Warehouse credentials by attempting to connect to it.",
        "title": "CreateValidationInWarehouseV1Input",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The id of the Warehouse metadata type.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "The settings to check.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          }
        },
        "required": [
          "metadataId",
          "settings"
        ]
      },
      "WorkspaceV1": {
        "description": "An organized group of Sources and Destinations managed by a team.",
        "title": "WorkspaceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The URL-friendly slug.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The human-readable name.",
            "type": "string",
            "title": "name"
          }
        },
        "required": [
          "id",
          "name",
          "slug"
        ]
      },
      "GetWorkspaceV1Input": {
        "description": "Loads the Workspace associated with the token.",
        "title": "GetWorkspaceV1Input",
        "type": "object"
      },
      "GetWorkspaceV1Output": {
        "description": "Represents the output of loading the Workspace.",
        "title": "GetWorkspaceV1Output",
        "type": "object",
        "properties": {
          "workspace": {
            "description": "The Workspace.",
            "title": "workspace",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkspaceV1"
              }
            ]
          }
        },
        "required": [
          "workspace"
        ]
      },
      "RequestError": {
        "description": "Represents any error that could have occurred while performing a request.",
        "title": "RequestError",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this error (validation, server, unknown, etc).",
            "type": "string",
            "title": "type"
          },
          "message": {
            "description": "An error message attached to this error.",
            "type": "string",
            "title": "message"
          },
          "field": {
            "description": "The name of an input field from the request that triggered this error.",
            "type": "string",
            "title": "field"
          },
          "data": {
            "description": "Any extra data associated with this error.",
            "title": "data"
          },
          "status": {
            "description": "Http status code.",
            "type": "number",
            "title": "status"
          }
        },
        "required": [
          "type"
        ]
      },
      "PaginationInput": {
        "description": "Pagination parameters.\n\nEvery resource that returns a list of items in its `Output` object may contain a `PaginationInput` in its `Input`\nobject. Required, though some of its fields are optional.",
        "title": "PaginationInput",
        "type": "object",
        "properties": {
          "cursor": {
            "description": "The page to request.\n\nAcceptable values to use here are in PaginationOutput objects, in the `current`, `next`, and `previous` keys.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "cursor"
          },
          "count": {
            "description": "The number of items to retrieve in a page, between 1 and 200.",
            "type": "number",
            "title": "count"
          }
        },
        "required": [
          "count"
        ]
      },
      "PaginationOutput": {
        "description": "Pagination metadata for a list response.\n\nResponses return this object alongside a list of resources, which provides the necessary metadata for manipulating a\npaginated collection. In operations that return lists, it's always present, though some of its fields might not be.",
        "title": "PaginationOutput",
        "type": "object",
        "properties": {
          "current": {
            "description": "The current cursor within a collection.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "current"
          },
          "next": {
            "description": "A pointer to the next page.\n\nThis does not return when you retrieve the last page.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "next",
            "nullable": true
          },
          "previous": {
            "description": "A pointer to the previous page.\n\nThis does not return when you retrieve the first page.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "previous",
            "nullable": true
          },
          "totalEntries": {
            "description": "The total number of entries available in the collection.\n\nIf calculating it impacts performance, the response may omit this field.",
            "type": "number",
            "title": "totalEntries"
          }
        },
        "required": [
          "current"
        ]
      },
      "RequestErrorEnvelope": {
        "title": "RequestErrorEnvelope",
        "description": "Envelope type for RequestErrors.",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestError"
            }
          }
        },
        "required": [
          "errors"
        ]
      }
    }
  },
  "x-domain-hierarchy": [
    {
      "name": "Connections",
      "subDomains": [
        {
          "name": "Warehouses",
          "subDomains": []
        },
        {
          "name": "Sources",
          "subDomains": []
        },
        {
          "name": "Deletion and Suppression",
          "subDomains": []
        },
        {
          "name": "Destinations",
          "subDomains": []
        },
        {
          "name": "Edge Functions",
          "subDomains": []
        },
        {
          "name": "Destination Filters",
          "subDomains": []
        },
        {
          "name": "Functions",
          "subDomains": []
        },
        {
          "name": "Profiles Sync",
          "subDomains": []
        },
        {
          "name": "Reverse ETL",
          "subDomains": []
        },
        {
          "name": "Selective Sync",
          "subDomains": []
        },
        {
          "name": "Catalog",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Admin",
      "subDomains": [
        {
          "name": "IAM Users",
          "subDomains": []
        },
        {
          "name": "IAM Groups",
          "subDomains": []
        },
        {
          "name": "Labels",
          "subDomains": []
        },
        {
          "name": "Audit Trail",
          "subDomains": []
        },
        {
          "name": "IAM Roles",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Protocols",
      "subDomains": [
        {
          "name": "Tracking Plans",
          "subDomains": []
        },
        {
          "name": "Transformations",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Engage",
      "subDomains": [
        {
          "name": "Spaces",
          "subDomains": []
        },
        {
          "name": "Audiences",
          "subDomains": []
        }
      ]
    },
    {
      "name": "General",
      "subDomains": [
        {
          "name": "Testing",
          "subDomains": []
        },
        {
          "name": "Workspaces",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Unify",
      "subDomains": [
        {
          "name": "Computed Traits",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Usage",
      "subDomains": [
        {
          "name": "API Calls",
          "subDomains": []
        },
        {
          "name": "Monthly Tracked Users",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Monitoring",
      "subDomains": [
        {
          "name": "Events",
          "subDomains": []
        }
      ]
    }
  ],
  "x-tagGroups": [
    {
      "name": "Guides",
      "tags": [
        "Introduction",
        "Getting Started",
        "Benefits",
        "Migration",
        "Authentication",
        "Error Handling",
        "Request Validation",
        "Rate Limits",
        "Payload Limits",
        "Pagination",
        "Versioning"
      ]
    },
    {
      "name": "Connections",
      "tags": [
        "Warehouses",
        "Sources",
        "Deletion and Suppression",
        "Destinations",
        "Edge Functions",
        "Destination Filters",
        "Functions",
        "Profiles Sync",
        "Reverse ETL",
        "Selective Sync",
        "Catalog"
      ]
    },
    {
      "name": "Admin",
      "tags": [
        "IAM Users",
        "IAM Groups",
        "Labels",
        "Audit Trail",
        "IAM Roles"
      ]
    },
    {
      "name": "Protocols",
      "tags": [
        "Tracking Plans",
        "Transformations"
      ]
    },
    {
      "name": "Engage",
      "tags": [
        "Spaces",
        "Audiences"
      ]
    },
    {
      "name": "General",
      "tags": [
        "Testing",
        "Workspaces"
      ]
    },
    {
      "name": "Unify",
      "tags": [
        "Computed Traits"
      ]
    },
    {
      "name": "Usage",
      "tags": [
        "API Calls",
        "Monthly Tracked Users"
      ]
    },
    {
      "name": "Monitoring",
      "tags": [
        "Events"
      ]
    }
  ]
}